/* stylelint-disable */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* stylelint-enable */
/**
 * dialog-typography - SASS/SCSS module settings
 * @version v1.2.0
 * (c) 2019 meodai
 * @link https://github.com/meodai/dialog-typography#readme
 * @license MIT
 */
/**
*  Grid
*/
/**
*  Breakpoint Settings
*/
/**
 *  Typography
 */
/**
 * Base spacing units - for boxes (horizontal and vertical)
 */
/**
 * Grid
 */
/**
 *  CSS Framework
 */
/* grey */
/* primary */
/* secondary */
/* special */
/* text */
/**
 * Map for the project breakpoints.
 * the breakpoint variables are defined in settings.scss
 */
/**
 * Use the breakpoints of this project.
 * if you have a breakpoint key with a hyphen, you need to make a string out of it (tablet-portrait -> 'tablet-portrait')
 *
 * Examples:
 * @include breakpoint('tablet-portrait') -> takes the min of the tablet-portrait
 * @include breakpoint('desktop', 'only') -> takes the min and max value from the desktop breakpoint
 * @include breakpoint('phone', 'desktop') -> takes the min of the phone and the max of the desktop
 *
 * @param  {string} $base-key - key of the min breakpoint
 * @param  {string} $additional - key for breakpoint or 'only'
 */
/**
 * Strip the unit from a number (e.g. 18px --> 18).
 */
/**
 * Tint the color with transparency
 * @param  {string} $color      - hex color code
 * @param  {float} $percentage - percentage of transparency
 */
/**
 * helper functions
 */
/**
 * calculate the em value from pixel values
 * @param  {int}   $px: desired pixel value
 * @param {int}    $ref: reference font size of the component
 * Notes:
 * reference is only needed, if the font-size is not the same as the $font-size--base
 */
/**
 * calculate the rem value from pixel values
 * @param  {int}   $px: desired pixel value
 */
/**
 * calculate the px value from from a rem value
 * @param  {int}   $rem: desired pixel value
 */
/**
 * adds the em unit to the value
 * @param  {float}   $val: desired em value
 */
/**
 * adds the rem unit to the value
 * @param  {float}   $val: desired rem value
 */
/**
 * adds the em unity to the value
 * @param  {float}   $px: desired em value
 */
/**
 * calculate the relative value for line height out of the pixel value
 * @param  {int}   $px: desired pixel value
 * @param {int}    $font-size: the reference font-size value in px
 */
/**
 * check if the value of the variable is null.
 * Note: used for conditional rendering in the framework
 */
/**
 * Helps to hide the element visually, but not for screen readers
 */
/**
 * Helps to hide the element visually, but not for screen readers
 */
/**
 * Sets :hover and :active style based on @media (hover: hover)
 */
/* stylelint-disable-next-line at-rule-name-newline-after */
/**
 *  Phone - standard defined in `utils/settings`
 */
/**
 *  Tablet portrait
 */
/**
 *  Tablet landscape
 */
/**
 *  Desktop
 */
/**
 * Desktop big
 */
/**
 * Map for all durations used in the project
 */
/**
 * function to get the values of the durations map
 */
/**
 * Map for all easings used in the project
 */
/**
 * function to get the values of the easings map
 */
/* stylelint-disable */
/* stylelint-enable */
/* margin vertical none */
.layout-helper__margin-vertical--none {
  margin-top: 0;
  margin-bottom: 0; }

.layout-helper__margin-top--none {
  margin-top: 0; }

.layout-helper__margin-bottom--none {
  margin-bottom: 0; }

/* margin vertical xs */
.layout-helper__margin-vertical--xxs {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.layout-helper__margin-top--xxs {
  margin-top: 1rem; }

.layout-helper__margin-bottom--xxs {
  margin-bottom: 1rem; }

/* margin vertical xs */
.layout-helper__margin-vertical--xs {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.layout-helper__margin-top--xs {
  margin-top: 2rem; }

.layout-helper__margin-bottom--xs {
  margin-bottom: 2rem; }

/* margin vertical s */
.layout-helper__margin-vertical--s {
  margin-top: 2rem;
  margin-bottom: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--s {
      margin-top: 3rem;
      margin-bottom: 3rem; } }

.layout-helper__margin-top--s {
  margin-top: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--s {
      margin-top: 3rem; } }

.layout-helper__margin-bottom--s {
  margin-bottom: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--s {
      margin-bottom: 3rem; } }

/* margin vertical m */
.layout-helper__margin-vertical--m {
  margin-top: 3rem;
  margin-bottom: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--m {
      margin-top: 4rem;
      margin-bottom: 4rem; } }

.layout-helper__margin-top--m {
  margin-top: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--m {
      margin-top: 4rem; } }

.layout-helper__margin-bottom--m {
  margin-bottom: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--m {
      margin-bottom: 4rem; } }

/* margin vertical l */
.layout-helper__margin-vertical--l {
  margin-top: 4rem;
  margin-bottom: 4rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--l {
      margin-top: 6rem;
      margin-bottom: 6rem; } }

.layout-helper__margin-top--l {
  margin-top: 4rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--l {
      margin-top: 6rem; } }

.layout-helper__margin-bottom--l {
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--l {
      margin-bottom: 6rem; } }

/* margin vertical xl */
.layout-helper__margin-vertical--xl {
  margin-top: 5rem;
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--xl {
      margin-top: 7.77778rem;
      margin-bottom: 7.77778rem; } }

.layout-helper__margin-top--xl {
  margin-top: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--xl {
      margin-top: 7.77778rem; } }

.layout-helper__margin-bottom--xl {
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--xl {
      margin-bottom: 7.77778rem; } }

.visually-hidden {
  position: absolute;
  height: 1px;
  width: 1px;
  border: 0;
  clip: rect(0 0 0 0);
  margin: -1px;
  overflow: hidden;
  padding: 0; }

/* stylelint-disable */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

ul,
p {
  margin: 0; }

ul {
  list-style: none;
  padding: 0; }

a,
a:visited {
  text-decoration: none;
  text-decoration: none; }

h1,
h2,
h3,
h4,
p,
ol,
ul {
  margin: 0;
  padding: 0; }

button,
a {
  color: inherit; }

img {
  max-width: 100%; }

h1,
h2,
h3,
h4 {
  font-size: inherit; }

button,
input[type='reset'],
input[type='button'],
input[type='submit'] {
  overflow: visible;
  border: 0;
  font: inherit;
  -webkit-font-smoothing: inherit;
  letter-spacing: inherit;
  background: none;
  cursor: pointer;
  padding: 0; }

fieldset {
  border: 0;
  padding: 0; }

textarea {
  font-family: inherit;
  font-size: inherit;
  color: inherit; }

img,
svg {
  vertical-align: text-bottom; }

input,
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0; }

input[type='checkbox'] {
  -webkit-appearance: checkbox; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

date {
  display: inline-block; }

svg {
  fill: currentColor;
  -webkit-transition: fill 0.3s ease;
  transition: fill 0.3s ease; }

/* stylelint-enable */
/**
 * Base
 */
html {
  color: #0d3256;
  font-size: 112.5%;
  font-family: "Frutiger LT W01_55 Roman";
  line-height: 1.65; }

figure {
  margin: 0; }

p {
  font-family: "Frutiger LT W01_55 Roman";
  margin: 1rem 0;
  font-weight: 400;
  line-height: 1.8; }

b,
strong {
  font-family: "Frutiger LT W01_65 Bold";
  font-weight: 400; }

ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none; }

sub,
sup {
  font-size: 62%; }

.grid {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(4, [col] 25%);
  grid-template-rows: repeat(3, [row] auto);
  background-color: #fff;
  color: #444; }

.logo {
  grid-column: col / span 1;
  grid-row: row;
  background: lightblue; }

.header {
  grid-column: col 2 / span 3;
  grid-row: row;
  background: lightcoral; }

.sidebar {
  grid-column: col;
  grid-row: row 2;
  background: lightgoldenrodyellow; }

.main {
  grid-column: col 2 / span 3;
  grid-row: row 2;
  background: lightgreen; }

.footer {
  grid-column: col / span 4;
  grid-row: row 3;
  background: lightsalmon; }

.header h2 {
  font-size: 20px; }

.dev:after {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: z(overlay);
  min-width: 2rem;
  min-height: 2rem;
  padding: 0.16667rem 0.33333rem;
  background-color: #c93;
  text-align: center; }

@media screen and (max-width: 600px) {
  body:after {
    content: 'xs'; } }

@media screen and (min-width: 601px) {
  body:after {
    content: 'sm'; } }

@media screen and (min-width: 901px) {
  body:after {
    content: 'md'; } }

@media screen and (min-width: 1201px) {
  body:after {
    content: 'lg'; } }

@media screen and (min-width: 1921px) {
  body:after {
    content: 'xl'; } }

/**
 * Globals
 */
/**
 * Primary
 */
/**
 * Secondary
 */
.button {
  -webkit-transition-property: color, background-color;
  transition-property: color, background-color;
  -webkit-transition-duration: 250ms;
          transition-duration: 250ms;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease;
  /**
   *  Primary styles
   */
  /**
   *  Secondary styles
   */ }
  .button--primary {
    padding: 0.66667em 0.88889em;
    background-color: #fff;
    color: #369;
    border-radius: 0;
    border: 2px solid #369; }
    .button--primary:hover {
      background-color: #369;
      color: #fff;
      border-color: #369; }
    .button--primary[disabled], .button--primary[disabled]:hover {
      background-color: #f8f8f8;
      color: #c2c2c2;
      border-color: #e0e0e0; }
  .button--primary.button--active, .button--primary.button--active:hover {
    background-color: #369;
    color: #fff;
    border-color: #369; }
  .button--secondary {
    padding: 0.44444em 0.66667em;
    background-color: #fff;
    color: #ba3c51;
    border-radius: 0;
    border: 2px solid #ba3c51; }
    .button--secondary:hover {
      background-color: #ba3c51;
      color: #fff;
      border-color: #ba3c51; }
    .button--secondary[disabled], .button--secondary[disabled]:hover {
      background-color: #f8f8f8;
      color: #c2c2c2;
      border-color: #e0e0e0; }
  .button--secondary.button--active, .button--secondary.button--active:hover {
    background-color: #ba3c51;
    color: #fff;
    border-color: #ba3c51; }

.formatted-text > *:first-child {
  margin-top: 0; }

.formatted-text > *:last-child {
  margin-bottom: 0; }

.formatted-text a {
  cursor: pointer;
  padding-bottom: 1px; }
  .formatted-text a:empty {
    display: none; }

.heading {
  display: block; }

.heading,
h1,
h2,
h3,
h4 {
  font-family: Frutiger LT W01_55 Roman;
  font-weight: 400;
  color: #0d3256;
  word-break: break-word;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

h1,
.heading--1 {
  font-size: 2.11111rem;
  line-height: 1.15;
  margin: 0 0 2rem; }
  @media (min-width: 601px) {
    h1,
    .heading--1 {
      font-size: 4rem; } }
  @media (min-width: 1201px) {
    h1,
    .heading--1 {
      font-size: 4rem;
      line-height: 1.15; } }
  @media screen and (min-width: 601px) {
    h1,
    .heading--1 {
      margin: 0 0 2rem; } }

h2,
.heading--2 {
  font-size: 1.77778rem;
  line-height: 1.35;
  margin: 3rem 0 1rem; }
  @media (min-width: 601px) {
    h2,
    .heading--2 {
      font-size: 1.77778rem; } }
  @media (min-width: 901px) {
    h2,
    .heading--2 {
      font-size: 2.88889rem; } }
  @media (min-width: 1201px) {
    h2,
    .heading--2 {
      font-size: 2.88889rem;
      line-height: 1.35; } }
  @media screen and (min-width: 601px) {
    h2,
    .heading--2 {
      margin: 4rem 0 1rem; } }

h3,
.heading--3 {
  font-size: 1.44444rem;
  line-height: 1.65;
  margin: 2rem 0 1rem; }
  @media (min-width: 601px) {
    h3,
    .heading--3 {
      font-size: 1.44444rem;
      line-height: 1.35; } }
  @media (min-width: 1201px) {
    h3,
    .heading--3 {
      font-size: 1.77778rem;
      line-height: 1.35; } }
  @media screen and (min-width: 601px) {
    h3,
    .heading--3 {
      margin: 3rem 0 1rem; } }

h4,
.heading--4 {
  font-size: 1.16667rem;
  line-height: 1.35;
  margin: 2rem 0 1rem; }
  @media (min-width: 601px) {
    h4,
    .heading--4 {
      font-size: 1.33333rem; } }
  @media (min-width: 1201px) {
    h4,
    .heading--4 {
      font-size: 1.16667rem;
      line-height: 1.15; } }
  @media screen and (min-width: 601px) {
    h4,
    .heading--4 {
      margin: 3rem 0 1rem; } }

.heading--no-margin {
  margin-top: 0;
  margin-bottom: 0; }

.heading--no-margin-top {
  margin-top: 0; }

.heading--no-margin-bottom {
  margin-bottom: 0; }

/**
 * Globals
 */
.input {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  width: 100%;
  padding: 0.66667em 0.44444em; }
  .input::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input:hover {
    border-color: #666; }
  .input:focus {
    border-color: input--focus-border-color; }
  .input[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .input[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .input[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .input[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .input[disabled]::placeholder {
      color: #c2c2c2; }

.textarea {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  padding: 0.66667em 0.44444em;
  width: 100%; }
  .textarea::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea:hover {
    border-color: #666; }
  .textarea:focus {
    border-color: input--focus-border-color; }
  .textarea[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .textarea[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::placeholder {
      color: #c2c2c2; }

.select {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  padding: 0.66667em 0.44444em; }
  .select::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select:hover {
    border-color: #666; }
  .select:focus {
    border-color: input--focus-border-color; }
  .select[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .select[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .select[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .select[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .select[disabled]::placeholder {
      color: #c2c2c2; }

.image__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.image__img {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: auto;
  max-width: 100%;
  height: auto; }

.image__caption {
  font-size: 0.83333rem;
  margin-top: 0.16667rem; }

/**
 * Globals
 */
.link, .formatted-text p a {
  font-weight: 600;
  color: #369;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  position: relative;
  color: #369;
  cursor: pointer;
  text-decoration: none;
  -webkit-transition: color 250ms ease;
  transition: color 250ms ease; }
  .link:hover, .formatted-text p a:hover {
    color: #369; }
    @media (hover: hover) {
      .link:hover, .formatted-text p a:hover {
        color: #000; } }
  .link:not(:disabled):not(.disabled):active, .formatted-text p a:not(:disabled):not(.disabled):active {
    color: #000; }
  .link__text {
    -webkit-box-flex: 1;
        -ms-flex: 1 0 0px;
            flex: 1 0 0; }
  .link__icon-wrapper {
    -webkit-box-flex: 0;
        -ms-flex: 0 1 auto;
            flex: 0 1 auto; }
    .link__icon-wrapper--internal {
      position: relative;
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex;
      width: 2.33333rem;
      height: 1rem;
      margin-left: 2rem; }
  .link__icon {
    width: 100%; }
    .link__icon--internal {
      position: absolute;
      margin-top: -0.5rem; }
  .link--icon-before, .formatted-text p a[rel], .formatted-text p a[href$='.png'], .formatted-text p a[href$='.jpg'], .formatted-text p a[href$='.pdf'], .formatted-text p a[href$='.docx'], .formatted-text p a[href$='.xlsx'] {
    margin-left: 2.33333rem; }
    .link--icon-before:before, .formatted-text p a[rel]:before, .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
      position: absolute;
      display: inline-block;
      content: '';
      width: 1.33333rem;
      height: 1.33333rem;
      margin-left: -2.33333rem;
      margin-top: 0.16667rem;
      background-repeat: no-repeat;
      background-size: cover;
      background-color: currentColor; }
  .link--external:before, .formatted-text p a[rel]:before {
    -webkit-mask-image: url("../icons/external_24.svg");
            mask-image: url("../icons/external_24.svg"); }
  .link--download:before, .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
    -webkit-mask-image: url("../icons/download_24.svg");
            mask-image: url("../icons/download_24.svg"); }
  .link--button {
    font-size: 0.83333rem;
    line-height: 1.65;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding: 0.83333rem 0.83333rem;
    margin-left: 0;
    border: 1px solid currentColor;
    border-radius: 3px; }
    .link--button:before {
      content: none; }
    .link--button.link--color-blue {
      color: #fff;
      background: linear-gradient(279deg, #0f4880 0%, #326aa1 100%); }
      .link--button.link--color-blue:hover {
        color: #fff; }
        @media (hover: hover) {
          .link--button.link--color-blue:hover {
            color: #fff; } }
      .link--button.link--color-blue:not(:disabled):not(.disabled):active {
        color: #fff; }
      @media (hover: hover) {
        .link--button.link--color-blue:hover {
          background: #0d3256; } }
    .link--button.link--color-white {
      color: #369;
      border-color: #369;
      background-color: #fff;
      border-width: 1px;
      border-style: solid; }
      .link--button.link--color-white:hover {
        color: #369; }
        @media (hover: hover) {
          .link--button.link--color-white:hover {
            color: #0d3256; } }
      .link--button.link--color-white:not(:disabled):not(.disabled):active {
        color: #0d3256; }
      .link--button.link--color-white:hover {
        border-color: #369; }
        @media (hover: hover) {
          .link--button.link--color-white:hover {
            border-color: #0d3256; } }
      .link--button.link--color-white:not(:disabled):not(.disabled):active {
        border-color: #0d3256; }
      .link--button.link--color-white .link__icon-wrapper--internal {
        margin-left: 1rem; }
  .link--full-width {
    width: 100%; }

.formatted-text p a {
  display: inline;
  border-bottom: 1px solid currentColor; }
  .formatted-text p a[rel] {
    margin-left: 1.83333rem; }
    .formatted-text p a[rel]:before {
      margin-top: 0.33333rem;
      margin-left: -1.83333rem; }
  .formatted-text p a[href$='.png'], .formatted-text p a[href$='.jpg'], .formatted-text p a[href$='.pdf'], .formatted-text p a[href$='.docx'], .formatted-text p a[href$='.xlsx'] {
    margin-left: 1.83333rem; }
    .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
      margin-top: 0.33333rem;
      margin-left: -1.83333rem; }

.list,
.list ol,
.list ul,
.formatted-text ol,
.formatted-text ul {
  margin: 2rem 0; }
  .list li,
  .list ol li,
  .list ul li,
  .formatted-text ol li,
  .formatted-text ul li {
    padding-top: 0.16667rem;
    padding-bottom: 0.16667rem; }
    .list li:before,
    .list ol li:before,
    .list ul li:before,
    .formatted-text ol li:before,
    .formatted-text ul li:before {
      content: '';
      float: left;
      -webkit-box-flex: 0;
          -ms-flex-positive: 0;
              flex-grow: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0; }
    .list li:last-child,
    .list ol li:last-child,
    .list ul li:last-child,
    .formatted-text ol li:last-child,
    .formatted-text ul li:last-child {
      padding-bottom: 0; }
    .list li ul,
    .list li ol,
    .list ol li ul,
    .list ol li ol,
    .list ul li ul,
    .list ul li ol,
    .formatted-text ol li ul,
    .formatted-text ol li ol,
    .formatted-text ul li ul,
    .formatted-text ul li ol {
      margin-top: 0;
      margin-bottom: 0; }
    .list li a,
    .list ol li a,
    .list ul li a,
    .formatted-text ol li a,
    .formatted-text ul li a {
      border-bottom: none;
      padding-bottom: 0; }

.list li,
.formatted-text ul li,
.list ul li {
  padding-left: 1rem; }
  .list li:before,
  .formatted-text ul li:before,
  .list ul li:before {
    height: 0.05556rem;
    width: 0.66667rem;
    margin-top: 0.77778rem;
    margin-right: 0.33333rem;
    margin-left: -1rem;
    background-color: currentColor; }
  .list li li,
  .formatted-text ul li li,
  .list ul li li {
    padding-left: 0.66667rem; }
    .list li li:before,
    .formatted-text ul li li:before,
    .list ul li li:before {
      width: 0.33333rem;
      margin-left: -0.66667rem; }

.list--ordered,
.list--ordered ol,
.formatted-text ol {
  list-style: none;
  counter-reset: li; }
  .list--ordered li,
  .list--ordered ol li,
  .formatted-text ol li {
    counter-increment: li;
    padding-left: 1.33333rem; }
    .list--ordered li:before,
    .list--ordered ol li:before,
    .formatted-text ol li:before {
      content: counters(li, ".") ".";
      min-width: 1rem;
      margin-left: -1.33333rem;
      margin-right: 0.33333rem;
      text-align: right; }
    .list--ordered li li,
    .list--ordered ol li li,
    .formatted-text ol li li {
      padding-left: 2rem; }
      .list--ordered li li:before,
      .list--ordered ol li li:before,
      .formatted-text ol li li:before {
        min-width: 1.66667rem;
        margin-left: -2rem; }

/**
 * Globals
 */
/**
 * Checkbox
 */
/**
 * Radio
 */
/* stylelint-disable */
.selection {
  position: relative;
  margin-bottom: size(quarter);
  /**
   * Checkbox
   **/
  /**
   * Radio
   **/ }
  .selection__input {
    position: absolute;
    height: 1px;
    width: 1px;
    border: 0;
    clip: rect(0 0 0 0);
    margin: -1px;
    overflow: hidden;
    padding: 0;
    pointer-events: none; }
    .selection__input:hover + .selection__label {
      color: #000; }
    .selection__input[disabled] + .selection__label {
      cursor: not-allowed;
      color: #c2c2c2; }
  .selection__label {
    position: relative;
    display: inline-block;
    cursor: pointer;
    -webkit-transition: 250ms color ease;
    transition: 250ms color ease; }
    .selection__label:before {
      display: block;
      content: '';
      position: absolute;
      top: 0;
      left: 0; }
    .selection__label:after {
      display: block;
      content: '';
      position: absolute; }
  .selection--checkbox .selection__label {
    min-height: 1.33333rem;
    padding-left: 2rem; }
    .selection--checkbox .selection__label:before {
      width: 1.33333rem;
      height: 1.33333rem;
      background-color: #f8f8f8;
      border: solid #c2c2c2;
      border-width: 2px;
      -webkit-transition: 250ms ease;
      transition: 250ms ease;
      -webkit-transition-property: background-color, border-color;
      transition-property: background-color, border-color; }
    .selection--checkbox .selection__label:after {
      top: 0.22222rem;
      left: 0.5rem;
      width: 0.33333rem;
      height: 0.66667rem;
      border: solid #369;
      border-width: 0 2px 2px 0;
      -webkit-transform: rotate(45deg) scale(0);
              transform: rotate(45deg) scale(0);
      -webkit-transition: -webkit-transform 250ms ease;
      transition: -webkit-transform 250ms ease;
      transition: transform 250ms ease;
      transition: transform 250ms ease, -webkit-transform 250ms ease; }
  .selection--checkbox .selection__input:focus + .selection__label:before {
    border-color: #848484; }
  .selection--checkbox .selection__input:hover + .selection__label:before {
    border-color: #848484; }
  .selection--checkbox .selection__input:checked + .selection__label:before,
  .selection--checkbox .selection__input:checked:focus + .selection__label:before,
  .selection--checkbox .selection__input:checked:hover + .selection__label:before {
    border-color: #369; }
  .selection--checkbox .selection__input:checked + .selection__label:after,
  .selection--checkbox .selection__input:checked:focus + .selection__label:after,
  .selection--checkbox .selection__input:checked:hover + .selection__label:after {
    -webkit-transform: rotate(45deg) scale(1);
            transform: rotate(45deg) scale(1); }
  .selection--checkbox .selection__input[disabled] + .selection__label:before,
  .selection--checkbox .selection__input[disabled]:hover + .selection__label:before {
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
  .selection--checkbox .selection__input[disabled] + .selection__label:after,
  .selection--checkbox .selection__input[disabled]:hover + .selection__label:after {
    border-color: #c2c2c2; }
  .selection--radio .selection__label {
    min-height: 1.33333rem;
    padding-left: 2rem; }
    .selection--radio .selection__label:before {
      width: 1.33333rem;
      height: 1.33333rem;
      background-color: #f8f8f8;
      border: 2px solid #c2c2c2;
      border-radius: 100%;
      -webkit-transition: 250ms ease;
      transition: 250ms ease;
      -webkit-transition-property: background-color, border-color;
      transition-property: background-color, border-color; }
    .selection--radio .selection__label:after {
      top: 0.66667rem;
      left: 0.66667rem;
      width: 0.44444rem;
      height: 0.44444rem;
      background-color: #369;
      border-radius: 100%;
      -webkit-transform: translate(-50%, -50%) scale(0);
              transform: translate(-50%, -50%) scale(0);
      -webkit-transition: -webkit-transform 250ms ease;
      transition: -webkit-transform 250ms ease;
      transition: transform 250ms ease;
      transition: transform 250ms ease, -webkit-transform 250ms ease; }
  .selection--radio .selection__input:hover + .selection__label:before {
    border-color: #848484; }
  .selection--radio .selection__input:checked + .selection__label:before,
  .selection--radio .selection__input:checked:focus + .selection__label:before,
  .selection--radio .selection__input:checked:hover + .selection__label:before {
    border-color: #369; }
  .selection--radio .selection__input:checked + .selection__label:after,
  .selection--radio .selection__input:checked:focus + .selection__label:after,
  .selection--radio .selection__input:checked:hover + .selection__label:after {
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1); }
  .selection--radio .selection__input[disabled] + .selection__label:before,
  .selection--radio .selection__input[disabled]:hover + .selection__label:before {
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
  .selection--radio .selection__input[disabled] + .selection__label:after,
  .selection--radio .selection__input[disabled]:hover + .selection__label:after {
    background-color: #c2c2c2; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvcnMvbm9ybWFsaXplLnNjc3MiLCJtYWluLmNzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9kaWFsb2ctdHlwb2dyYXBoeS9kaXN0L2RpYWxvZy10eXBvZ3JhcGh5LnNjc3MiLCJhYnN0cmFjdHMvX3NldHRpbmdzLnNjc3MiLCJhYnN0cmFjdHMvX2NvbG9ycy5zY3NzIiwiYWJzdHJhY3RzL19icmVha3BvaW50cy5zY3NzIiwiYWJzdHJhY3RzL19mdW5jdGlvbnMuc2NzcyIsImFic3RyYWN0cy9taXhpbnMvX2NsZWFyZml4LnNjc3MiLCJhYnN0cmFjdHMvbWl4aW5zL192aXN1YWxseS1oaWRkZW4uc2NzcyIsImFic3RyYWN0cy9taXhpbnMvX2ludGVyYWN0aW9ucy5zY3NzIiwiYWJzdHJhY3RzL190eXBvZ3JhcGh5LnNjc3MiLCJhYnN0cmFjdHMvX3NwZWVkLnNjc3MiLCJhYnN0cmFjdHMvX2Vhc2luZ3Muc2NzcyIsImFic3RyYWN0cy9faWNvbnMuc2NzcyIsImhlbHBlcnMvX2xheW91dC5zY3NzIiwiaGVscGVycy9fdmlzaWJpbGl0eS5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImxheW91dC9fZ3JpZC5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fcmVzcG9uc2l2ZS12aWV3LWhhbmRsZXIuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsImNvbXBvbmVudHMvX2Zvcm1hdHRlZC10ZXh0LnNjc3MiLCJjb21wb25lbnRzL19oZWFkaW5ncy5zY3NzIiwiY29tcG9uZW50cy9faW5wdXRzLnNjc3MiLCJhYnN0cmFjdHMvbWl4aW5zL19pbnB1dC1zdHlsZXMuc2NzcyIsImNvbXBvbmVudHMvX2ltYWdlLnNjc3MiLCJjb21wb25lbnRzL19saW5rcy5zY3NzIiwiY29tcG9uZW50cy9fbGlzdHMuc2NzcyIsImNvbXBvbmVudHMvX3NlbGVjdGlvbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdz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aURxQixFUWhEdEI7O0FBRUQ7RUFDRSxvQlI2Q3FCLEVRNUN0Qjs7QUFFRCx1QkFBdUI7QUFDdkI7RUFDRSxpQlJ3Q3FCO0VRdkNyQixvQlJ1Q3FCLEVRakN0QjtFVDZEQztJU3JFRjtNQUtJLGlCUm9DbUI7TVFuQ25CLG9CUm1DbUIsRVFqQ3RCLEVBQUE7O0FBRUQ7RUFDRSxpQlI4QnFCLEVRekJ0QjtFVHFEQztJUzNERjtNQUlJLGlCUjJCbUIsRVF6QnRCLEVBQUE7O0FBRUQ7RUFDRSxvQlJzQnFCLEVRakJ0QjtFVDZDQztJU25ERjtNQUlJLG9CUm1CbUIsRVFqQnRCLEVBQUE7O0FBRUQsdUJBQXVCO0FBQ3ZCO0VBQ0UsaUJSYXFCO0VRWnJCLG9CUllxQixFUU50QjtFVGtDQztJUzFDRjtNQUtJLGlCUlNtQjtNUVJuQixvQlJRbUIsRVFOdEIsRUFBQTs7QUFFRDtFQUNFLGlCUkdxQixFUUV0QjtFVDBCQztJU2hDRjtNQUlJLGlCUkFtQixFUUV0QixFQUFBOztBQUVEO0VBQ0Usb0JSTHFCLEVRVXRCO0VUa0JDO0lTeEJGO01BSUksb0JSUm1CLEVRVXRCLEVBQUE7O0FBRUQsdUJBQXVCO0FBQ3ZCO0VBQ0UsaUJSZHFCO0VRZXJCLG9CUmZxQixFUXFCdEI7RVRPQztJU2ZGO01BS0ksaUJSbEJtQjtNUW1CbkIsb0JSbkJtQixFUXFCdEIsRUFBQTs7QUFFRDtFQUNFLGlCUnhCcUIsRVE2QnRCO0VUREM7SVNMRjtNQUlJLGlCUjNCbUIsRVE2QnRCLEVBQUE7O0FBRUQ7RUFDRSxvQlJoQ3FCLEVRcUN0QjtFVFRDO0lTR0Y7TUFJSSxvQlJuQ21CLEVRcUN0QixFQUFBOztBQUVELHdCQUF3QjtBQUN4QjtFQUNFLGlCUnpDcUI7RVEwQ3JCLG9CUjFDcUIsRVFnRHRCO0VUcEJDO0lTWUY7TUFLSSx1QlI3Q21CO01ROENuQiwwQlI5Q21CLEVRZ0R0QixFQUFBOztBQUVEO0VBQ0UsaUJSbkRxQixFUXdEdEI7RVQ1QkM7SVNzQkY7TUFJSSx1QlJ0RG1CLEVRd0R0QixFQUFBOztBQUVEO0VBQ0Usb0JSM0RxQixFUWdFdEI7RVRwQ0M7SVM4QkY7TUFJSSwwQlI5RG1CLEVRZ0V0QixFQUFBOztBQ3BKRDtFUElFLG1CQUFrQjtFQUNsQixZQUFXO0VBQ1gsV0FBVTtFQUVWLFVBQVM7RUFDVCxvQkFBbUI7RUFDbkIsYUFBWTtFQUNaLGlCQUFnQjtFQUNoQixXQUFVLEVPVlg7O0FDRkQsdUJBQXVCO0FBQ3ZCO0VBQ0UsK0JBQXNCO1VBQXRCLHVCQUFzQixFQUN2Qjs7QUFFRDs7RUFFRSxVQUFTLEVBQ1Y7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsV0FBVSxFQUNYOztBQUVEOztFQUVFLHNCQUFxQjtFQUNyQixzQkFBcUIsRUFDdEI7O0FBRUQ7Ozs7Ozs7RUFPRSxVQUFTO0VBQ1QsV0FBVSxFQUNYOztBQUVEOztFQUVFLGVBQWMsRUFDZjs7QWhCaUhEO0VnQjlHRSxnQkFBZSxFQUNoQjs7QUFFRDs7OztFQUlFLG1CQUFrQixFQUNuQjs7QUFFRDs7OztFQUlFLGtCQUFpQjtFQUNqQixVQUFTO0VBQ1QsY0FBYTtFQUNiLGdDQUErQjtFQUMvQix3QkFBdUI7RUFDdkIsaUJBQWdCO0VBQ2hCLGdCQUFlO0VBQ2YsV0FBVSxFQUNYOztBaEIyS0Q7RWdCeEtFLFVBQVM7RUFDVCxXQUFVLEVBQ1g7O0FoQnNNRDtFZ0JuTUUscUJBQW9CO0VBQ3BCLG1CQUFrQjtFQUNsQixlQUFjLEVBQ2Y7O0FBSUQ7O0VBRUUsNEJBQTJCLEVBQzVCOztBQUdEOztFQUVFLHlCQUF3QjtFQUN4Qix5QkFBd0IsRUFDekI7O0FBR0Q7RUFDRSw2QkFBNEIsRUFDN0I7O0FBR0Q7RUFDRSwwQkFBeUI7RUFDekIsa0JBQWlCLEVBQ2xCOztBQUVEOztFQUVFLFdBQVUsRUFDWDs7QUFFRDtFQUNFLHNCQUFxQixFQUN0Qjs7QUFHRDtFQUNFLG1CQUFrQjtFQUNsQixtQ0FBMEI7RUFBMUIsMkJBQTBCLEVBQzNCOztBQUNELHNCQUFzQjtBQ2hIdEI7O0dBRUc7QWpCU0g7RWlCV0UsZWJEd0I7RWFFeEIsa0JBQXVDO0VBQ3ZDLHdDZGlCNEM7RWNoQjVDLGtCZDZCbUIsRWM1QnBCOztBQUVEO0VBQ0UsVUFBUyxFQUNWOztBQUVEO0VBQ0Usd0NkWTZDO0VjWDdDLGVBQThCO0VBQzlCLGlCZFdzQjtFY1Z0QixpQmRtQmtCLEVjbEJuQjs7QWpCMEREOztFaUJ0REUsdUNkTzJDO0VjTjNDLGlCZEFxQixFY0N0Qjs7QUFFRDs7RUFFRSxVQUFTO0VBQ1QsV0FBVTtFQUNWLGlCQUFnQixFQUNqQjs7QWpCMkVEOztFaUJ2RUUsZUFBYyxFQUNmOztBQ3BERDtFQUNFLGNBQWE7RUFDYixlQUFjO0VBQ2QsNENBQTRDO0VBQzVDLDBDQUEyQztFQUMzQyx1QkFBc0I7RUFDdEIsWUFBVyxFQUNaOztBQUVEO0VBQ0UsMEJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxzQkFDRixFQUFDOztBQUNEO0VBQ0UsNEJBQTRCO0VBQzVCLGNBQWM7RUFDZCx1QkFBc0IsRUFDdkI7O0FBQ0Q7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlDQUNGLEVBQUM7O0FBQ0Q7RUFDRSw0QkFBNEI7RUFDNUIsZ0JBQWdCO0VBQ2hCLHVCQUNGLEVBQUM7O0FBRUQ7RUFDRSwwQkFBeUI7RUFDekIsZ0JBQWU7RUFDZix3QkFBdUIsRUFDeEI7O0FDbENEO0VBRUksZ0JBQWUsRUFDaEI7O0FDTkg7RUFFSSxnQkFBZTtFQUNmLFVBQVM7RUFDVCxRQUFPO0VBQ1Asb0JBQW1CO0VBRW5CLGdCZDZFbUI7RWM1RW5CLGlCZDRFbUI7RWMzRW5CLCtCZDJFbUI7RWMxRW5CLHVCaEJzQ2dCO0VnQnJDaEIsbUJBQWtCLEVBQ25COztBZm9HRDtFZWhHQTtJQUNFLGNBQWEsRUFDZCxFQUFBOztBZjhGRDtFZWhHQTtJQU1FLGNBQWEsRUFDZCxFQUFBOztBZnlGRDtFZWhHQTtJQVdFLGNBQWEsRUFDZCxFQUFBOztBZm9GRDtFZWhHQTtJQWdCRSxjQUFhLEVBQ2QsRUFBQTs7QWYrRUQ7RWVoR0E7SUFxQkUsY0FBYSxFQUNkLEVBQUE7O0FDdENIOztHQUVHO0FBT0g7O0dBRUc7QUFzQ0g7O0dBRUc7QUF5Q0g7RUFDRSxxREF2RnFEO0VBdUZyRCw2Q0F2RnFEO0VBd0ZyRCxtQ1YxRlk7VVUwRlosMkJWMUZZO0VVMkZaLHlDVDNGVztVUzJGWCxpQ1QzRlc7RVM2Rlg7O0tBRUc7RUE0RUg7O0tBRUcsRUE2RUo7RUExSkM7SUFDRSw2QmZ4QmtCO0llNEJoQix1QmpCckdhO0lpQndHYixZakJ4Rlk7SWlCMkZaLGlCQWpFMkI7SUFvRTNCLHVCakI5RlksRWlCMklmO0lBM0RBO01BaUNLLHVCakJqSFU7TWlCcUhWLFlqQnJJVztNaUJ5SVgsbUJqQnpIVSxFaUIySGI7SUEzQ0Y7TUFnREssMEJqQnRJc0I7TWlCMEl0QixlakI1SW1CO01pQmdKbkIsc0JqQi9JcUIsRWlCaUp4QjtFQUlIO0lBR0ksdUJqQmpKWTtJaUJvSlosWWpCcEthO0lpQnVLYixtQmpCdkpZLEVpQnlKZjtFQUtEO0lBQ0UsNkJmdEdrQjtJZTBHaEIsdUJqQm5MYTtJaUJzTGIsZWpCdEpjO0lpQnlKZCxpQkFwRzZCO0lBdUc3QiwwQmpCNUpjLEVpQjJNakI7SUE3REE7TUFtQ0ssMEJqQmpMWTtNaUJxTFosWWpCck5XO01pQnlOWCxzQmpCekxZLEVpQjJMZjtJQTdDRjtNQWtESywwQmpCdE5zQjtNaUIwTnRCLGVqQjVObUI7TWlCZ09uQixzQmpCL05xQixFaUJpT3hCO0VBSUg7SUFHSSwwQmpCak5jO0lpQm9OZCxZakJwUGE7SWlCdVBiLHNCakJ2TmMsRWlCeU5qQjs7QUMxUEg7RUFHTSxjQUFhLEVBQ2Q7O0FBSkw7RUFPTSxpQkFBZ0IsRUFDakI7O0FBUkw7RUFZSSxnQkFBZTtFQUNmLG9CQUFtQixFQUtwQjtFQWxCSDtJQWdCTSxjQUFhLEVBQ2Q7O0FDbEJMO0VBQ0UsZUFBYyxFQUNmOztBQUVEOzs7OztFckJpU1Esc0NBQTZCO0VBRTdCLGlCQ2xRa0I7RW9CM0J4QixlbkJTd0I7RW1CUnhCLHVCQUFzQjtFQUN0QixzQkFBYTtNQUFiLGtCQUFhO1VBQWIsY0FBYSxFQUNkOztBQUdEOztFckJ1UlEsc0JJck5lO0VKcU5mLGtCQ3JQYTtFb0IvQm5CLGlCakIrRHFCLEVpQjFEdEI7RWxCaUJDO0lrQnpCRjs7TXJCb1NJLGdCSWxPbUIsRWlCMUR0QixFQUFBO0VsQmlCQztJa0J6QkY7O01yQm9TSSxnQklsT21CO01Ka09uQixrQkNsUWlCLEVvQjFCcEIsRUFBQTtFbEJzRkM7SWtCOUZGOztNQU1JLGlCakI0RG1CLEVpQjFEdEIsRUFBQTs7QUFFRDs7RXJCNlFRLHNCSXJOZTtFSnFOZixrQkNwUGM7RW9CdEJwQixvQmpCcURxQixFaUJoRHRCO0VsQk9DO0lrQmZGOztNckIwUkksc0JJbE9tQixFaUJoRHRCLEVBQUE7RWxCT0M7SWtCZkY7O01yQjBSSSxzQklsT21CLEVpQmhEdEIsRUFBQTtFbEJPQztJa0JmRjs7TXJCMFJJLHNCSWxPbUI7TUprT25CLGtCQ2pRa0IsRW9CakJyQixFQUFBO0VsQjRFQztJa0JwRkY7O01BTUksb0JqQmtEbUIsRWlCaER0QixFQUFBOztBQUVEOztFckJtUVEsc0JJck5lO0VKcU5mLGtCQ25QYTtFb0JibkIsb0JqQjJDcUIsRWlCdEN0QjtFbEJIQztJa0JMRjs7TXJCZ1JJLHNCSWxPbUI7TUprT25CLGtCQ2pRa0IsRW9CUHJCLEVBQUE7RWxCSEM7SWtCTEY7O01yQmdSSSxzQklsT21CO01Ka09uQixrQkNqUWtCLEVvQlByQixFQUFBO0VsQmtFQztJa0IxRUY7O01BTUksb0JqQndDbUIsRWlCdEN0QixFQUFBOztBQUVEOztFckJ5UFEsc0JJck5lO0VKcU5mLGtCQ3BQYztFb0JGcEIsb0JqQmlDcUIsRWlCNUJ0QjtFbEJiQztJa0JLRjs7TXJCc1FJLHNCSWxPbUIsRWlCNUJ0QixFQUFBO0VsQmJDO0lrQktGOztNckJzUUksc0JJbE9tQjtNSmtPbkIsa0JDbFFpQixFb0JJcEIsRUFBQTtFbEJ3REM7SWtCaEVGOztNQU1JLG9CakI4Qm1CLEVpQjVCdEIsRUFBQTs7QUFFRDtFQUNFLGNBQWE7RUFDYixpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSxpQkFBZ0IsRUFDakI7O0FDakVEOztHQUVHO0FBcUJIO0VDS0UsMEJyQmxCNEI7RXFCbUI1QixzQnJCckJ5QjtFcUJzQnpCLGtCQXhCeUI7RUF5QnpCLGlCQTFCd0I7RUEyQnhCLGNBQWE7RUFFYiwrQmJsQ1c7RWFrQ1gsdUJibENXO0VhbUNYLG1FQXZDMkQ7RUF1QzNELDJEQXZDMkQ7RUEwQ3pELGVyQnJCc0I7RW9CUXhCLFlBaEJxQjtFQWlCckIsNkJsQitDb0IsRWtCMUNyQjtFQ1VDO0lBRUksZXJCdkNlO0lxQnlDZiwrQmI3Q087SWE2Q1AsdUJiN0NPO0lhOENQLG1FQWxEdUQ7SUFrRHZELDJEQWxEdUQsRUFvRDFEO0VBUEQ7SUFFSSxlckJ2Q2U7SXFCeUNmLCtCYjdDTztJYTZDUCx1QmI3Q087SWE4Q1AsbUVBbER1RDtJQWtEdkQsMkRBbER1RCxFQW9EMUQ7RUFQRDtJQUVJLGVyQnZDZTtJcUJ5Q2YsK0JiN0NPO0lhNkNQLHVCYjdDTztJYThDUCxtRUFsRHVEO0lBa0R2RCwyREFsRHVELEVBb0QxRDtFQVBEO0lBRUksZXJCdkNlO0lxQnlDZiwrQmI3Q087SWE2Q1AsdUJiN0NPO0lhOENQLG1FQWxEdUQ7SUFrRHZELDJEQWxEdUQsRUFvRDFEO0VBRUQ7SUFRSSxtQnJCcERtQixFcUI0RHRCO0VBRUQ7SUFRSSx3Q0FBdUMsRUFRMUM7RUFFRDtJQUNFLG9CQUFtQjtJQUdqQixlckJsRnFCO0lxQnFGckIsMEJyQm5Gd0I7SXFCc0Z4QixzQnJCdkZ1QixFcUIrRjFCO0lBTEM7TUFFSSxlckI3Rm1CLEVxQitGdEI7SUFKRDtNQUVJLGVyQjdGbUIsRXFCK0Z0QjtJQUpEO01BRUksZXJCN0ZtQixFcUIrRnRCO0lBSkQ7TUFFSSxlckI3Rm1CLEVxQitGdEI7O0FEdEVMO0VDTEUsMEJyQmxCNEI7RXFCbUI1QixzQnJCckJ5QjtFcUJzQnpCLGtCQXhCeUI7RUF5QnpCLGlCQTFCd0I7RUEyQnhCLGNBQWE7RUFFYiwrQmJsQ1c7RWFrQ1gsdUJibENXO0VhbUNYLG1FQXZDMkQ7RUF1QzNELDJEQXZDMkQ7RUEwQ3pELGVyQnJCc0I7RW9Ca0J4Qiw2QmxCc0NvQjtFa0JyQ3BCLFlBbEJvQixFQXVCckI7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LGF2QnRGZTtNdUJ3RmYsa0J2QnhGZTtNdUJ5RmYsbUJ2QnpGZTtNdUIyRmYsbUJ6QjNKVTtNeUI0SlYsMEJBQ3FDO01BRXJDLDBDQUFpQztjQUFqQyxrQ0FBaUM7TUFDakMsaURqQmhMSztNaUJnTEwseUNqQmhMSztNaUJnTEwsaUNqQmhMSztNaUJnTEwsK0RqQmhMSyxFaUJrTE47RUFuQ0o7SUE4Q08sc0J6QnRMZ0IsRXlCd0xuQjtFQWhESjtJQTJETyxzQnpCbk1nQixFeUJxTW5CO0VBN0RKOzs7SUEwRU8sbUJ6QnpNUSxFeUIyTVg7RUE1RUo7OztJQWdGSywwQ0FBaUM7WUFBakMsa0NBQWlDLEVBQ2xDO0VBakZKOztJQXlGTywwQnpCOU5vQjtJeUJrT3BCLHNCekJuT21CLEV5QnFPdEI7RUEvRko7O0lBb0dPLHNCekIzT2lCLEV5QjRPbEI7RUFRTjtJQUVHLHVCdkI5S2lCO0l1QitLakIsbUJBQThELEVBa0MvRDtJQXJDRjtNQU9LLGtCdkJuTGU7TXVCb0xmLG1CdkJwTGU7TXVCc0xmLDBCekI1UHNCO015QjhQcEIsMEJ6QmhRaUI7TXlCbVFuQixvQkFBbUI7TUFFbkIsK0JqQjdRSztNaUI2UUwsdUJqQjdRSztNaUIrUUwsNERBdkxtRDtNQXVMbkQsb0RBdkxtRCxFQXdMcEQ7SUFwQko7TUF3QkssZ0JBQXVCO01BQ3ZCLGlCQUF1QjtNQUV2QixrQnZCdk1lO011QndNZixtQnZCeE1lO011QjBNZix1QnpCMVFVO015QjJRVixvQkF2TjBCO01BeU4xQixrREFBeUM7Y0FBekMsMENBQXlDO01BQ3pDLGlEakI5Uks7TWlCOFJMLHlDakI5Uks7TWlCOFJMLGlDakI5Uks7TWlCOFJMLCtEakI5UkssRWlCZ1NOO0VBcENKO0lBNERPLHNCekJqVGdCLEV5Qm1UbkI7RUE5REo7OztJQTJFTyxtQnpCdlRRLEV5QnlUWDtFQTdFSjs7O0lBaUZLLGtEQUF5QztZQUF6QywwQ0FBeUMsRUFDMUM7RUFsRko7O0lBMEZPLDBCekI1VW9CO0l5QmdWcEIsc0J6QmpWbUIsRXlCbVZ0QjtFQWhHSjs7SUFxR08sMEJ6QnpWaUIsRXlCMFZsQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHN0eWxlbGludC1kaXNhYmxlICovXG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT0nYnV0dG9uJ10sXG5bdHlwZT0ncmVzZXQnXSxcblt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9J2J1dHRvbiddOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9J3Jlc2V0J106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nc3VibWl0J106Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPSdidXR0b24nXTotbW96LWZvY3VzcmluZyxcblt0eXBlPSdyZXNldCddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3N1Ym1pdCddOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPSdjaGVja2JveCddLFxuW3R5cGU9J3JhZGlvJ10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9J251bWJlciddOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9J251bWJlciddOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9J3NlYXJjaCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuIiwiLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPSdidXR0b24nXSxcblt0eXBlPSdyZXNldCddLFxuW3R5cGU9J3N1Ym1pdCddIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0ncmVzZXQnXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdzdWJtaXQnXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J2J1dHRvbiddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3Jlc2V0J106LW1vei1mb2N1c3JpbmcsXG5bdHlwZT0nc3VibWl0J106LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9J2NoZWNrYm94J10sXG5bdHlwZT0ncmFkaW8nXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG4vKipcbiAqIGRpYWxvZy10eXBvZ3JhcGh5IC0gU0FTUy9TQ1NTIG1vZHVsZSBzZXR0aW5nc1xuICogQHZlcnNpb24gdjEuMi4wXG4gKiAoYykgMjAxOSBtZW9kYWlcbiAqIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9tZW9kYWkvZGlhbG9nLXR5cG9ncmFwaHkjcmVhZG1lXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuLyoqXG4qICBHcmlkXG4qL1xuLyoqXG4qICBCcmVha3BvaW50IFNldHRpbmdzXG4qL1xuLyoqXG4gKiAgVHlwb2dyYXBoeVxuICovXG4vKipcbiAqIEJhc2Ugc3BhY2luZyB1bml0cyAtIGZvciBib3hlcyAoaG9yaXpvbnRhbCBhbmQgdmVydGljYWwpXG4gKi9cbi8qKlxuICogR3JpZFxuICovXG4vKipcbiAqICBDU1MgRnJhbWV3b3JrXG4gKi9cbi8qIGdyZXkgKi9cbi8qIHByaW1hcnkgKi9cbi8qIHNlY29uZGFyeSAqL1xuLyogc3BlY2lhbCAqL1xuLyogdGV4dCAqL1xuLyoqXG4gKiBNYXAgZm9yIHRoZSBwcm9qZWN0IGJyZWFrcG9pbnRzLlxuICogdGhlIGJyZWFrcG9pbnQgdmFyaWFibGVzIGFyZSBkZWZpbmVkIGluIHNldHRpbmdzLnNjc3NcbiAqL1xuLyoqXG4gKiBVc2UgdGhlIGJyZWFrcG9pbnRzIG9mIHRoaXMgcHJvamVjdC5cbiAqIGlmIHlvdSBoYXZlIGEgYnJlYWtwb2ludCBrZXkgd2l0aCBhIGh5cGhlbiwgeW91IG5lZWQgdG8gbWFrZSBhIHN0cmluZyBvdXQgb2YgaXQgKHRhYmxldC1wb3J0cmFpdCAtPiAndGFibGV0LXBvcnRyYWl0JylcbiAqXG4gKiBFeGFtcGxlczpcbiAqIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldC1wb3J0cmFpdCcpIC0+IHRha2VzIHRoZSBtaW4gb2YgdGhlIHRhYmxldC1wb3J0cmFpdFxuICogQGluY2x1ZGUgYnJlYWtwb2ludCgnZGVza3RvcCcsICdvbmx5JykgLT4gdGFrZXMgdGhlIG1pbiBhbmQgbWF4IHZhbHVlIGZyb20gdGhlIGRlc2t0b3AgYnJlYWtwb2ludFxuICogQGluY2x1ZGUgYnJlYWtwb2ludCgncGhvbmUnLCAnZGVza3RvcCcpIC0+IHRha2VzIHRoZSBtaW4gb2YgdGhlIHBob25lIGFuZCB0aGUgbWF4IG9mIHRoZSBkZXNrdG9wXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAkYmFzZS1rZXkgLSBrZXkgb2YgdGhlIG1pbiBicmVha3BvaW50XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICRhZGRpdGlvbmFsIC0ga2V5IGZvciBicmVha3BvaW50IG9yICdvbmx5J1xuICovXG4vKipcbiAqIFN0cmlwIHRoZSB1bml0IGZyb20gYSBudW1iZXIgKGUuZy4gMThweCAtLT4gMTgpLlxuICovXG4vKipcbiAqIFRpbnQgdGhlIGNvbG9yIHdpdGggdHJhbnNwYXJlbmN5XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICRjb2xvciAgICAgIC0gaGV4IGNvbG9yIGNvZGVcbiAqIEBwYXJhbSAge2Zsb2F0fSAkcGVyY2VudGFnZSAtIHBlcmNlbnRhZ2Ugb2YgdHJhbnNwYXJlbmN5XG4gKi9cbi8qKlxuICogaGVscGVyIGZ1bmN0aW9uc1xuICovXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgZW0gdmFsdWUgZnJvbSBwaXhlbCB2YWx1ZXNcbiAqIEBwYXJhbSAge2ludH0gICAkcHg6IGRlc2lyZWQgcGl4ZWwgdmFsdWVcbiAqIEBwYXJhbSB7aW50fSAgICAkcmVmOiByZWZlcmVuY2UgZm9udCBzaXplIG9mIHRoZSBjb21wb25lbnRcbiAqIE5vdGVzOlxuICogcmVmZXJlbmNlIGlzIG9ubHkgbmVlZGVkLCBpZiB0aGUgZm9udC1zaXplIGlzIG5vdCB0aGUgc2FtZSBhcyB0aGUgJGZvbnQtc2l6ZS0tYmFzZVxuICovXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgcmVtIHZhbHVlIGZyb20gcGl4ZWwgdmFsdWVzXG4gKiBAcGFyYW0gIHtpbnR9ICAgJHB4OiBkZXNpcmVkIHBpeGVsIHZhbHVlXG4gKi9cbi8qKlxuICogY2FsY3VsYXRlIHRoZSBweCB2YWx1ZSBmcm9tIGZyb20gYSByZW0gdmFsdWVcbiAqIEBwYXJhbSAge2ludH0gICAkcmVtOiBkZXNpcmVkIHBpeGVsIHZhbHVlXG4gKi9cbi8qKlxuICogYWRkcyB0aGUgZW0gdW5pdCB0byB0aGUgdmFsdWVcbiAqIEBwYXJhbSAge2Zsb2F0fSAgICR2YWw6IGRlc2lyZWQgZW0gdmFsdWVcbiAqL1xuLyoqXG4gKiBhZGRzIHRoZSByZW0gdW5pdCB0byB0aGUgdmFsdWVcbiAqIEBwYXJhbSAge2Zsb2F0fSAgICR2YWw6IGRlc2lyZWQgcmVtIHZhbHVlXG4gKi9cbi8qKlxuICogYWRkcyB0aGUgZW0gdW5pdHkgdG8gdGhlIHZhbHVlXG4gKiBAcGFyYW0gIHtmbG9hdH0gICAkcHg6IGRlc2lyZWQgZW0gdmFsdWVcbiAqL1xuLyoqXG4gKiBjYWxjdWxhdGUgdGhlIHJlbGF0aXZlIHZhbHVlIGZvciBsaW5lIGhlaWdodCBvdXQgb2YgdGhlIHBpeGVsIHZhbHVlXG4gKiBAcGFyYW0gIHtpbnR9ICAgJHB4OiBkZXNpcmVkIHBpeGVsIHZhbHVlXG4gKiBAcGFyYW0ge2ludH0gICAgJGZvbnQtc2l6ZTogdGhlIHJlZmVyZW5jZSBmb250LXNpemUgdmFsdWUgaW4gcHhcbiAqL1xuLyoqXG4gKiBjaGVjayBpZiB0aGUgdmFsdWUgb2YgdGhlIHZhcmlhYmxlIGlzIG51bGwuXG4gKiBOb3RlOiB1c2VkIGZvciBjb25kaXRpb25hbCByZW5kZXJpbmcgaW4gdGhlIGZyYW1ld29ya1xuICovXG4vKipcbiAqIEhlbHBzIHRvIGhpZGUgdGhlIGVsZW1lbnQgdmlzdWFsbHksIGJ1dCBub3QgZm9yIHNjcmVlbiByZWFkZXJzXG4gKi9cbi8qKlxuICogSGVscHMgdG8gaGlkZSB0aGUgZWxlbWVudCB2aXN1YWxseSwgYnV0IG5vdCBmb3Igc2NyZWVuIHJlYWRlcnNcbiAqL1xuLyoqXG4gKiBTZXRzIDpob3ZlciBhbmQgOmFjdGl2ZSBzdHlsZSBiYXNlZCBvbiBAbWVkaWEgKGhvdmVyOiBob3ZlcilcbiAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIGF0LXJ1bGUtbmFtZS1uZXdsaW5lLWFmdGVyICovXG4vKipcbiAqICBQaG9uZSAtIHN0YW5kYXJkIGRlZmluZWQgaW4gYHV0aWxzL3NldHRpbmdzYFxuICovXG4vKipcbiAqICBUYWJsZXQgcG9ydHJhaXRcbiAqL1xuLyoqXG4gKiAgVGFibGV0IGxhbmRzY2FwZVxuICovXG4vKipcbiAqICBEZXNrdG9wXG4gKi9cbi8qKlxuICogRGVza3RvcCBiaWdcbiAqL1xuLyoqXG4gKiBNYXAgZm9yIGFsbCBkdXJhdGlvbnMgdXNlZCBpbiB0aGUgcHJvamVjdFxuICovXG4vKipcbiAqIGZ1bmN0aW9uIHRvIGdldCB0aGUgdmFsdWVzIG9mIHRoZSBkdXJhdGlvbnMgbWFwXG4gKi9cbi8qKlxuICogTWFwIGZvciBhbGwgZWFzaW5ncyB1c2VkIGluIHRoZSBwcm9qZWN0XG4gKi9cbi8qKlxuICogZnVuY3Rpb24gdG8gZ2V0IHRoZSB2YWx1ZXMgb2YgdGhlIGVhc2luZ3MgbWFwXG4gKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlICovXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG4vKiBtYXJnaW4gdmVydGljYWwgbm9uZSAqL1xuLmxheW91dC1oZWxwZXJfX21hcmdpbi12ZXJ0aWNhbC0tbm9uZSB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLW5vbmUge1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tYm90dG9tLS1ub25lIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4vKiBtYXJnaW4gdmVydGljYWwgeHMgKi9cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLXh4cyB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLXh4cyB7XG4gIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXh4cyB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLyogbWFyZ2luIHZlcnRpY2FsIHhzICovXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXZlcnRpY2FsLS14cyB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDJyZW07IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLXhzIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLWJvdHRvbS0teHMge1xuICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG5cbi8qIG1hcmdpbiB2ZXJ0aWNhbCBzICovXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXZlcnRpY2FsLS1zIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIC5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLXMge1xuICAgICAgbWFyZ2luLXRvcDogM3JlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDNyZW07IH0gfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tcyB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgICAubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tcyB7XG4gICAgICBtYXJnaW4tdG9wOiAzcmVtOyB9IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXMge1xuICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogM3JlbTsgfSB9XG5cbi8qIG1hcmdpbiB2ZXJ0aWNhbCBtICovXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXZlcnRpY2FsLS1tIHtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIC5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLW0ge1xuICAgICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDRyZW07IH0gfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbSB7XG4gIG1hcmdpbi10b3A6IDNyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgICAubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbSB7XG4gICAgICBtYXJnaW4tdG9wOiA0cmVtOyB9IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLW0ge1xuICBtYXJnaW4tYm90dG9tOiAzcmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLW0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTsgfSB9XG5cbi8qIG1hcmdpbiB2ZXJ0aWNhbCBsICovXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXZlcnRpY2FsLS1sIHtcbiAgbWFyZ2luLXRvcDogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIC5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLWwge1xuICAgICAgbWFyZ2luLXRvcDogNnJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDZyZW07IH0gfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbCB7XG4gIG1hcmdpbi10b3A6IDRyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgICAubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbCB7XG4gICAgICBtYXJnaW4tdG9wOiA2cmVtOyB9IH1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLWwge1xuICBtYXJnaW4tYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLWwge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNnJlbTsgfSB9XG5cbi8qIG1hcmdpbiB2ZXJ0aWNhbCB4bCAqL1xuLmxheW91dC1oZWxwZXJfX21hcmdpbi12ZXJ0aWNhbC0teGwge1xuICBtYXJnaW4tdG9wOiA1cmVtO1xuICBtYXJnaW4tYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi12ZXJ0aWNhbC0teGwge1xuICAgICAgbWFyZ2luLXRvcDogNy43Nzc3OHJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDcuNzc3NzhyZW07IH0gfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0teGwge1xuICBtYXJnaW4tdG9wOiA1cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLXhsIHtcbiAgICAgIG1hcmdpbi10b3A6IDcuNzc3NzhyZW07IH0gfVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLWJvdHRvbS0teGwge1xuICBtYXJnaW4tYm90dG9tOiA1cmVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXhsIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDcuNzc3NzhyZW07IH0gfVxuXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDFweDtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbnVsLFxucCB7XG4gIG1hcmdpbjogMDsgfVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuYSxcbmE6dmlzaXRlZCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbm9sLFxudWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuYnV0dG9uLFxuYSB7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDsgfVxuXG5idXR0b24sXG5pbnB1dFt0eXBlPSdyZXNldCddLFxuaW5wdXRbdHlwZT0nYnV0dG9uJ10sXG5pbnB1dFt0eXBlPSdzdWJtaXQnXSB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBib3JkZXI6IDA7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGluaGVyaXQ7XG4gIGxldHRlci1zcGFjaW5nOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDA7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG5pbWcsXG5zdmcge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207IH1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOyB9XG5cbmlucHV0W3R5cGU9J2NoZWNrYm94J10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGNoZWNrYm94OyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuZGF0ZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlOyB9XG5cbi8qIHN0eWxlbGludC1lbmFibGUgKi9cbi8qKlxuICogQmFzZVxuICovXG5odG1sIHtcbiAgY29sb3I6ICMwZDMyNTY7XG4gIGZvbnQtc2l6ZTogMTEyLjUlO1xuICBmb250LWZhbWlseTogXCJGcnV0aWdlciBMVCBXMDFfNTUgUm9tYW5cIjtcbiAgbGluZS1oZWlnaHQ6IDEuNjU7IH1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwOyB9XG5cbnAge1xuICBmb250LWZhbWlseTogXCJGcnV0aWdlciBMVCBXMDFfNTUgUm9tYW5cIjtcbiAgbWFyZ2luOiAxcmVtIDA7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjg7IH1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkZydXRpZ2VyIExUIFcwMV82NSBCb2xkXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxudWwsXG5vbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDYyJTsgfVxuXG4uZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtZ2FwOiAxMHB4O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCBbY29sXSAyNSUpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCBbcm93XSBhdXRvKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICM0NDQ7IH1cblxuLmxvZ28ge1xuICBncmlkLWNvbHVtbjogY29sIC8gc3BhbiAxO1xuICBncmlkLXJvdzogcm93O1xuICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7IH1cblxuLmhlYWRlciB7XG4gIGdyaWQtY29sdW1uOiBjb2wgMiAvIHNwYW4gMztcbiAgZ3JpZC1yb3c6IHJvdztcbiAgYmFja2dyb3VuZDogbGlnaHRjb3JhbDsgfVxuXG4uc2lkZWJhciB7XG4gIGdyaWQtY29sdW1uOiBjb2w7XG4gIGdyaWQtcm93OiByb3cgMjtcbiAgYmFja2dyb3VuZDogbGlnaHRnb2xkZW5yb2R5ZWxsb3c7IH1cblxuLm1haW4ge1xuICBncmlkLWNvbHVtbjogY29sIDIgLyBzcGFuIDM7XG4gIGdyaWQtcm93OiByb3cgMjtcbiAgYmFja2dyb3VuZDogbGlnaHRncmVlbjsgfVxuXG4uZm9vdGVyIHtcbiAgZ3JpZC1jb2x1bW46IGNvbCAvIHNwYW4gNDtcbiAgZ3JpZC1yb3c6IHJvdyAzO1xuICBiYWNrZ3JvdW5kOiBsaWdodHNhbG1vbjsgfVxuXG4uaGVhZGVyIGgyIHtcbiAgZm9udC1zaXplOiAyMHB4OyB9XG5cbi5kZXY6YWZ0ZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogeihvdmVybGF5KTtcbiAgbWluLXdpZHRoOiAycmVtO1xuICBtaW4taGVpZ2h0OiAycmVtO1xuICBwYWRkaW5nOiAwLjE2NjY3cmVtIDAuMzMzMzNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNjOTM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAneHMnOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgYm9keTphZnRlciB7XG4gICAgY29udGVudDogJ3NtJzsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMXB4KSB7XG4gIGJvZHk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICdtZCc7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAxcHgpIHtcbiAgYm9keTphZnRlciB7XG4gICAgY29udGVudDogJ2xnJzsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE5MjFweCkge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAneGwnOyB9IH1cblxuLyoqXG4gKiBHbG9iYWxzXG4gKi9cbi8qKlxuICogUHJpbWFyeVxuICovXG4vKipcbiAqIFNlY29uZGFyeVxuICovXG4uYnV0dG9uIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogY29sb3IsIGJhY2tncm91bmQtY29sb3I7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDI1MG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbiAgLyoqXG4gICAqICBQcmltYXJ5IHN0eWxlc1xuICAgKi9cbiAgLyoqXG4gICAqICBTZWNvbmRhcnkgc3R5bGVzXG4gICAqLyB9XG4gIC5idXR0b24tLXByaW1hcnkge1xuICAgIHBhZGRpbmc6IDAuNjY2NjdlbSAwLjg4ODg5ZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzM2OTtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzNjk7IH1cbiAgICAuYnV0dG9uLS1wcmltYXJ5OmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzNjk7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlci1jb2xvcjogIzM2OTsgfVxuICAgIC5idXR0b24tLXByaW1hcnlbZGlzYWJsZWRdLCAuYnV0dG9uLS1wcmltYXJ5W2Rpc2FibGVkXTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xuICAgICAgY29sb3I6ICNjMmMyYzI7XG4gICAgICBib3JkZXItY29sb3I6ICNlMGUwZTA7IH1cbiAgLmJ1dHRvbi0tcHJpbWFyeS5idXR0b24tLWFjdGl2ZSwgLmJ1dHRvbi0tcHJpbWFyeS5idXR0b24tLWFjdGl2ZTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM2OTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXItY29sb3I6ICMzNjk7IH1cbiAgLmJ1dHRvbi0tc2Vjb25kYXJ5IHtcbiAgICBwYWRkaW5nOiAwLjQ0NDQ0ZW0gMC42NjY2N2VtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICNiYTNjNTE7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjYmEzYzUxOyB9XG4gICAgLmJ1dHRvbi0tc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiYTNjNTE7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlci1jb2xvcjogI2JhM2M1MTsgfVxuICAgIC5idXR0b24tLXNlY29uZGFyeVtkaXNhYmxlZF0sIC5idXR0b24tLXNlY29uZGFyeVtkaXNhYmxlZF06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODtcbiAgICAgIGNvbG9yOiAjYzJjMmMyO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwOyB9XG4gIC5idXR0b24tLXNlY29uZGFyeS5idXR0b24tLWFjdGl2ZSwgLmJ1dHRvbi0tc2Vjb25kYXJ5LmJ1dHRvbi0tYWN0aXZlOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmEzYzUxO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1jb2xvcjogI2JhM2M1MTsgfVxuXG4uZm9ybWF0dGVkLXRleHQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG4uZm9ybWF0dGVkLXRleHQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5mb3JtYXR0ZWQtdGV4dCBhIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nLWJvdHRvbTogMXB4OyB9XG4gIC5mb3JtYXR0ZWQtdGV4dCBhOmVtcHR5IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi5oZWFkaW5nIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmhlYWRpbmcsXG5oMSxcbmgyLFxuaDMsXG5oNCB7XG4gIGZvbnQtZmFtaWx5OiBGcnV0aWdlciBMVCBXMDFfNTUgUm9tYW47XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjMGQzMjU2O1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICBoeXBoZW5zOiBhdXRvOyB9XG5cbmgxLFxuLmhlYWRpbmctLTEge1xuICBmb250LXNpemU6IDIuMTExMTFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICBtYXJnaW46IDAgMCAycmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIGgxLFxuICAgIC5oZWFkaW5nLS0xIHtcbiAgICAgIGZvbnQtc2l6ZTogNHJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAxcHgpIHtcbiAgICBoMSxcbiAgICAuaGVhZGluZy0tMSB7XG4gICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4xNTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgaDEsXG4gICAgLmhlYWRpbmctLTEge1xuICAgICAgbWFyZ2luOiAwIDAgMnJlbTsgfSB9XG5cbmgyLFxuLmhlYWRpbmctLTIge1xuICBmb250LXNpemU6IDEuNzc3NzhyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM1O1xuICBtYXJnaW46IDNyZW0gMCAxcmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIGgyLFxuICAgIC5oZWFkaW5nLS0yIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43Nzc3OHJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5MDFweCkge1xuICAgIGgyLFxuICAgIC5oZWFkaW5nLS0yIHtcbiAgICAgIGZvbnQtc2l6ZTogMi44ODg4OXJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAxcHgpIHtcbiAgICBoMixcbiAgICAuaGVhZGluZy0tMiB7XG4gICAgICBmb250LXNpemU6IDIuODg4ODlyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4zNTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgaDIsXG4gICAgLmhlYWRpbmctLTIge1xuICAgICAgbWFyZ2luOiA0cmVtIDAgMXJlbTsgfSB9XG5cbmgzLFxuLmhlYWRpbmctLTMge1xuICBmb250LXNpemU6IDEuNDQ0NDRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY1O1xuICBtYXJnaW46IDJyZW0gMCAxcmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MDFweCkge1xuICAgIGgzLFxuICAgIC5oZWFkaW5nLS0zIHtcbiAgICAgIGZvbnQtc2l6ZTogMS40NDQ0NHJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDFweCkge1xuICAgIGgzLFxuICAgIC5oZWFkaW5nLS0zIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43Nzc3OHJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgICBoMyxcbiAgICAuaGVhZGluZy0tMyB7XG4gICAgICBtYXJnaW46IDNyZW0gMCAxcmVtOyB9IH1cblxuaDQsXG4uaGVhZGluZy0tNCB7XG4gIGZvbnQtc2l6ZTogMS4xNjY2N3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIG1hcmdpbjogMnJlbSAwIDFyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgaDQsXG4gICAgLmhlYWRpbmctLTQge1xuICAgICAgZm9udC1zaXplOiAxLjMzMzMzcmVtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDFweCkge1xuICAgIGg0LFxuICAgIC5oZWFkaW5nLS00IHtcbiAgICAgIGZvbnQtc2l6ZTogMS4xNjY2N3JlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAxcHgpIHtcbiAgICBoNCxcbiAgICAuaGVhZGluZy0tNCB7XG4gICAgICBtYXJnaW46IDNyZW0gMCAxcmVtOyB9IH1cblxuLmhlYWRpbmctLW5vLW1hcmdpbiB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLmhlYWRpbmctLW5vLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5oZWFkaW5nLS1uby1tYXJnaW4tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4vKipcbiAqIEdsb2JhbHNcbiAqL1xuLmlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODtcbiAgYm9yZGVyOiBzb2xpZCAjYzJjMmMyO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgdHJhbnNpdGlvbjogMjUwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYm9yZGVyLWNvbG9yLCBjb2xvciwgYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICMwZDMyNTY7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjY2NjY3ZW0gMC40NDQ0NGVtOyB9XG4gIC5pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYTNhM2EzO1xuICAgIHRyYW5zaXRpb246IDI1MG1zIGVhc2U7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYm9yZGVyLWNvbG9yLCBjb2xvciwgYmFja2dyb3VuZC1jb2xvcjsgfVxuICAuaW5wdXQ6aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzY2NjsgfVxuICAuaW5wdXQ6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcjsgfVxuICAuaW5wdXRbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGNvbG9yOiAjYzJjMmMyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwOyB9XG4gICAgLmlucHV0W2Rpc2FibGVkXTo6cGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICNjMmMyYzI7IH1cblxuLnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODtcbiAgYm9yZGVyOiBzb2xpZCAjYzJjMmMyO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgb3V0bGluZTogbm9uZTtcbiAgdHJhbnNpdGlvbjogMjUwbXMgZWFzZTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYm9yZGVyLWNvbG9yLCBjb2xvciwgYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICMwZDMyNTY7XG4gIHBhZGRpbmc6IDAuNjY2NjdlbSAwLjQ0NDQ0ZW07XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC50ZXh0YXJlYTo6cGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYTNhM2EzO1xuICAgIHRyYW5zaXRpb246IDI1MG1zIGVhc2U7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYm9yZGVyLWNvbG9yLCBjb2xvciwgYmFja2dyb3VuZC1jb2xvcjsgfVxuICAudGV4dGFyZWE6aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzY2NjsgfVxuICAudGV4dGFyZWE6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcjsgfVxuICAudGV4dGFyZWFbZGlzYWJsZWRdIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGNvbG9yOiAjYzJjMmMyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwOyB9XG4gICAgLnRleHRhcmVhW2Rpc2FibGVkXTo6cGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICNjMmMyYzI7IH1cblxuLnNlbGVjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gIGJvcmRlcjogc29saWQgI2MyYzJjMjtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRyYW5zaXRpb246IDI1MG1zIGVhc2U7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGJvcmRlci1jb2xvciwgY29sb3IsIGJhY2tncm91bmQtY29sb3I7XG4gIGNvbG9yOiAjMGQzMjU2O1xuICB3aWR0aDogMTAwJTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAwLjY2NjY3ZW0gMC40NDQ0NGVtOyB9XG4gIC5zZWxlY3Q6OnBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI2EzYTNhMztcbiAgICB0cmFuc2l0aW9uOiAyNTBtcyBlYXNlO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGJvcmRlci1jb2xvciwgY29sb3IsIGJhY2tncm91bmQtY29sb3I7IH1cbiAgLnNlbGVjdDpob3ZlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjNjY2OyB9XG4gIC5zZWxlY3Q6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcjsgfVxuICAuc2VsZWN0W2Rpc2FibGVkXSB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBjb2xvcjogI2MyYzJjMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xuICAgIGJvcmRlci1jb2xvcjogI2UwZTBlMDsgfVxuICAgIC5zZWxlY3RbZGlzYWJsZWRdOjpwbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogI2MyYzJjMjsgfVxuXG4uaW1hZ2VfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uaW1hZ2VfX2ltZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4uaW1hZ2VfX2NhcHRpb24ge1xuICBmb250LXNpemU6IDAuODMzMzNyZW07XG4gIG1hcmdpbi10b3A6IDAuMTY2NjdyZW07IH1cblxuLyoqXG4gKiBHbG9iYWxzXG4gKi9cbi5saW5rLCAuZm9ybWF0dGVkLXRleHQgcCBhIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMzNjk7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogIzM2OTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDI1MG1zIGVhc2U7IH1cbiAgLmxpbms6aG92ZXIsIC5mb3JtYXR0ZWQtdGV4dCBwIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjMzY5OyB9XG4gICAgQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgICAgIC5saW5rOmhvdmVyLCAuZm9ybWF0dGVkLXRleHQgcCBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMwMDA7IH0gfVxuICAubGluazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGE6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlIHtcbiAgICBjb2xvcjogIzAwMDsgfVxuICAubGlua19fdGV4dCB7XG4gICAgZmxleDogMSAwIDA7IH1cbiAgLmxpbmtfX2ljb24td3JhcHBlciB7XG4gICAgZmxleDogMCAxIGF1dG87IH1cbiAgICAubGlua19faWNvbi13cmFwcGVyLS1pbnRlcm5hbCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgIHdpZHRoOiAyLjMzMzMzcmVtO1xuICAgICAgaGVpZ2h0OiAxcmVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IDJyZW07IH1cbiAgLmxpbmtfX2ljb24ge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmxpbmtfX2ljb24tLWludGVybmFsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG1hcmdpbi10b3A6IC0wLjVyZW07IH1cbiAgLmxpbmstLWljb24tYmVmb3JlLCAuZm9ybWF0dGVkLXRleHQgcCBhW3JlbF0sIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5wbmcnXSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLmpwZyddLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScucGRmJ10sIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5kb2N4J10sIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy54bHN4J10ge1xuICAgIG1hcmdpbi1sZWZ0OiAyLjMzMzMzcmVtOyB9XG4gICAgLmxpbmstLWljb24tYmVmb3JlOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtyZWxdOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLnBuZyddOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLmpwZyddOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLnBkZiddOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLmRvY3gnXTpiZWZvcmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy54bHN4J106YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEuMzMzMzNyZW07XG4gICAgICBoZWlnaHQ6IDEuMzMzMzNyZW07XG4gICAgICBtYXJnaW4tbGVmdDogLTIuMzMzMzNyZW07XG4gICAgICBtYXJnaW4tdG9wOiAwLjE2NjY3cmVtO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7IH1cbiAgLmxpbmstLWV4dGVybmFsOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtyZWxdOmJlZm9yZSB7XG4gICAgbWFzay1pbWFnZTogdXJsKFwiLi4vaWNvbnMvZXh0ZXJuYWxfMjQuc3ZnXCIpOyB9XG4gIC5saW5rLS1kb3dubG9hZDpiZWZvcmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5wbmcnXTpiZWZvcmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5qcGcnXTpiZWZvcmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5wZGYnXTpiZWZvcmUsIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5kb2N4J106YmVmb3JlLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScueGxzeCddOmJlZm9yZSB7XG4gICAgbWFzay1pbWFnZTogdXJsKFwiLi4vaWNvbnMvZG93bmxvYWRfMjQuc3ZnXCIpOyB9XG4gIC5saW5rLS1idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMC44MzMzM3JlbTtcbiAgICBsaW5lLWhlaWdodDogMS42NTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcGFkZGluZzogMC44MzMzM3JlbSAwLjgzMzMzcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7IH1cbiAgICAubGluay0tYnV0dG9uOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBub25lOyB9XG4gICAgLmxpbmstLWJ1dHRvbi5saW5rLS1jb2xvci1ibHVlIHtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDI3OWRlZywgIzBmNDg4MCAwJSwgIzMyNmFhMSAxMDAlKTsgfVxuICAgICAgLmxpbmstLWJ1dHRvbi5saW5rLS1jb2xvci1ibHVlOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgICAgQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgICAgICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLWJsdWU6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7IH0gfVxuICAgICAgLmxpbmstLWJ1dHRvbi5saW5rLS1jb2xvci1ibHVlOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICBAbWVkaWEgKGhvdmVyOiBob3Zlcikge1xuICAgICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLWJsdWU6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMwZDMyNTY7IH0gfVxuICAgIC5saW5rLS1idXR0b24ubGluay0tY29sb3Itd2hpdGUge1xuICAgICAgY29sb3I6ICMzNjk7XG4gICAgICBib3JkZXItY29sb3I6ICMzNjk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gICAgICBib3JkZXItc3R5bGU6IHNvbGlkOyB9XG4gICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLXdoaXRlOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICMzNjk7IH1cbiAgICAgICAgQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgICAgICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLXdoaXRlOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMGQzMjU2OyB9IH1cbiAgICAgIC5saW5rLS1idXR0b24ubGluay0tY29sb3Itd2hpdGU6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICMwZDMyNTY7IH1cbiAgICAgIC5saW5rLS1idXR0b24ubGluay0tY29sb3Itd2hpdGU6aG92ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICMzNjk7IH1cbiAgICAgICAgQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgICAgICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLXdoaXRlOmhvdmVyIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzBkMzI1NjsgfSB9XG4gICAgICAubGluay0tYnV0dG9uLmxpbmstLWNvbG9yLXdoaXRlOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzBkMzI1NjsgfVxuICAgICAgLmxpbmstLWJ1dHRvbi5saW5rLS1jb2xvci13aGl0ZSAubGlua19faWNvbi13cmFwcGVyLS1pbnRlcm5hbCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyB9XG4gIC5saW5rLS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuXG4uZm9ybWF0dGVkLXRleHQgcCBhIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgY3VycmVudENvbG9yOyB9XG4gIC5mb3JtYXR0ZWQtdGV4dCBwIGFbcmVsXSB7XG4gICAgbWFyZ2luLWxlZnQ6IDEuODMzMzNyZW07IH1cbiAgICAuZm9ybWF0dGVkLXRleHQgcCBhW3JlbF06YmVmb3JlIHtcbiAgICAgIG1hcmdpbi10b3A6IDAuMzMzMzNyZW07XG4gICAgICBtYXJnaW4tbGVmdDogLTEuODMzMzNyZW07IH1cbiAgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLnBuZyddLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScuanBnJ10sIC5mb3JtYXR0ZWQtdGV4dCBwIGFbaHJlZiQ9Jy5wZGYnXSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLmRvY3gnXSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLnhsc3gnXSB7XG4gICAgbWFyZ2luLWxlZnQ6IDEuODMzMzNyZW07IH1cbiAgICAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScucG5nJ106YmVmb3JlLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScuanBnJ106YmVmb3JlLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScucGRmJ106YmVmb3JlLCAuZm9ybWF0dGVkLXRleHQgcCBhW2hyZWYkPScuZG9jeCddOmJlZm9yZSwgLmZvcm1hdHRlZC10ZXh0IHAgYVtocmVmJD0nLnhsc3gnXTpiZWZvcmUge1xuICAgICAgbWFyZ2luLXRvcDogMC4zMzMzM3JlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMS44MzMzM3JlbTsgfVxuXG4ubGlzdCxcbi5saXN0IG9sLFxuLmxpc3QgdWwsXG4uZm9ybWF0dGVkLXRleHQgb2wsXG4uZm9ybWF0dGVkLXRleHQgdWwge1xuICBtYXJnaW46IDJyZW0gMDsgfVxuICAubGlzdCBsaSxcbiAgLmxpc3Qgb2wgbGksXG4gIC5saXN0IHVsIGxpLFxuICAuZm9ybWF0dGVkLXRleHQgb2wgbGksXG4gIC5mb3JtYXR0ZWQtdGV4dCB1bCBsaSB7XG4gICAgcGFkZGluZy10b3A6IDAuMTY2NjdyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDAuMTY2NjdyZW07IH1cbiAgICAubGlzdCBsaTpiZWZvcmUsXG4gICAgLmxpc3Qgb2wgbGk6YmVmb3JlLFxuICAgIC5saXN0IHVsIGxpOmJlZm9yZSxcbiAgICAuZm9ybWF0dGVkLXRleHQgb2wgbGk6YmVmb3JlLFxuICAgIC5mb3JtYXR0ZWQtdGV4dCB1bCBsaTpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGZsZXgtZ3JvdzogMDtcbiAgICAgIGZsZXgtc2hyaW5rOiAwOyB9XG4gICAgLmxpc3QgbGk6bGFzdC1jaGlsZCxcbiAgICAubGlzdCBvbCBsaTpsYXN0LWNoaWxkLFxuICAgIC5saXN0IHVsIGxpOmxhc3QtY2hpbGQsXG4gICAgLmZvcm1hdHRlZC10ZXh0IG9sIGxpOmxhc3QtY2hpbGQsXG4gICAgLmZvcm1hdHRlZC10ZXh0IHVsIGxpOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7IH1cbiAgICAubGlzdCBsaSB1bCxcbiAgICAubGlzdCBsaSBvbCxcbiAgICAubGlzdCBvbCBsaSB1bCxcbiAgICAubGlzdCBvbCBsaSBvbCxcbiAgICAubGlzdCB1bCBsaSB1bCxcbiAgICAubGlzdCB1bCBsaSBvbCxcbiAgICAuZm9ybWF0dGVkLXRleHQgb2wgbGkgdWwsXG4gICAgLmZvcm1hdHRlZC10ZXh0IG9sIGxpIG9sLFxuICAgIC5mb3JtYXR0ZWQtdGV4dCB1bCBsaSB1bCxcbiAgICAuZm9ybWF0dGVkLXRleHQgdWwgbGkgb2wge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAubGlzdCBsaSBhLFxuICAgIC5saXN0IG9sIGxpIGEsXG4gICAgLmxpc3QgdWwgbGkgYSxcbiAgICAuZm9ybWF0dGVkLXRleHQgb2wgbGkgYSxcbiAgICAuZm9ybWF0dGVkLXRleHQgdWwgbGkgYSB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7IH1cblxuLmxpc3QgbGksXG4uZm9ybWF0dGVkLXRleHQgdWwgbGksXG4ubGlzdCB1bCBsaSB7XG4gIHBhZGRpbmctbGVmdDogMXJlbTsgfVxuICAubGlzdCBsaTpiZWZvcmUsXG4gIC5mb3JtYXR0ZWQtdGV4dCB1bCBsaTpiZWZvcmUsXG4gIC5saXN0IHVsIGxpOmJlZm9yZSB7XG4gICAgaGVpZ2h0OiAwLjA1NTU2cmVtO1xuICAgIHdpZHRoOiAwLjY2NjY3cmVtO1xuICAgIG1hcmdpbi10b3A6IDAuNzc3NzhyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjMzMzMzcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7IH1cbiAgLmxpc3QgbGkgbGksXG4gIC5mb3JtYXR0ZWQtdGV4dCB1bCBsaSBsaSxcbiAgLmxpc3QgdWwgbGkgbGkge1xuICAgIHBhZGRpbmctbGVmdDogMC42NjY2N3JlbTsgfVxuICAgIC5saXN0IGxpIGxpOmJlZm9yZSxcbiAgICAuZm9ybWF0dGVkLXRleHQgdWwgbGkgbGk6YmVmb3JlLFxuICAgIC5saXN0IHVsIGxpIGxpOmJlZm9yZSB7XG4gICAgICB3aWR0aDogMC4zMzMzM3JlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMC42NjY2N3JlbTsgfVxuXG4ubGlzdC0tb3JkZXJlZCxcbi5saXN0LS1vcmRlcmVkIG9sLFxuLmZvcm1hdHRlZC10ZXh0IG9sIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgY291bnRlci1yZXNldDogbGk7IH1cbiAgLmxpc3QtLW9yZGVyZWQgbGksXG4gIC5saXN0LS1vcmRlcmVkIG9sIGxpLFxuICAuZm9ybWF0dGVkLXRleHQgb2wgbGkge1xuICAgIGNvdW50ZXItaW5jcmVtZW50OiBsaTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuMzMzMzNyZW07IH1cbiAgICAubGlzdC0tb3JkZXJlZCBsaTpiZWZvcmUsXG4gICAgLmxpc3QtLW9yZGVyZWQgb2wgbGk6YmVmb3JlLFxuICAgIC5mb3JtYXR0ZWQtdGV4dCBvbCBsaTpiZWZvcmUge1xuICAgICAgY29udGVudDogY291bnRlcnMobGksIFwiLlwiKSBcIi5cIjtcbiAgICAgIG1pbi13aWR0aDogMXJlbTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMS4zMzMzM3JlbTtcbiAgICAgIG1hcmdpbi1yaWdodDogMC4zMzMzM3JlbTtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgLmxpc3QtLW9yZGVyZWQgbGkgbGksXG4gICAgLmxpc3QtLW9yZGVyZWQgb2wgbGkgbGksXG4gICAgLmZvcm1hdHRlZC10ZXh0IG9sIGxpIGxpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbTsgfVxuICAgICAgLmxpc3QtLW9yZGVyZWQgbGkgbGk6YmVmb3JlLFxuICAgICAgLmxpc3QtLW9yZGVyZWQgb2wgbGkgbGk6YmVmb3JlLFxuICAgICAgLmZvcm1hdHRlZC10ZXh0IG9sIGxpIGxpOmJlZm9yZSB7XG4gICAgICAgIG1pbi13aWR0aDogMS42NjY2N3JlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0ycmVtOyB9XG5cbi8qKlxuICogR2xvYmFsc1xuICovXG4vKipcbiAqIENoZWNrYm94XG4gKi9cbi8qKlxuICogUmFkaW9cbiAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbi5zZWxlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IHNpemUocXVhcnRlcik7XG4gIC8qKlxuICAgKiBDaGVja2JveFxuICAgKiovXG4gIC8qKlxuICAgKiBSYWRpb1xuICAgKiovIH1cbiAgLnNlbGVjdGlvbl9faW5wdXQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICB3aWR0aDogMXB4O1xuICAgIGJvcmRlcjogMDtcbiAgICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICAgIG1hcmdpbjogLTFweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAuc2VsZWN0aW9uX19pbnB1dDpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLnNlbGVjdGlvbl9faW5wdXRbZGlzYWJsZWRdICsgLnNlbGVjdGlvbl9fbGFiZWwge1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICAgIGNvbG9yOiAjYzJjMmMyOyB9XG4gIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAyNTBtcyBjb2xvciBlYXNlOyB9XG4gICAgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gICAgLnNlbGVjdGlvbl9fbGFiZWw6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19sYWJlbCB7XG4gICAgbWluLWhlaWdodDogMS4zMzMzM3JlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07IH1cbiAgICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgICAgd2lkdGg6IDEuMzMzMzNyZW07XG4gICAgICBoZWlnaHQ6IDEuMzMzMzNyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xuICAgICAgYm9yZGVyOiBzb2xpZCAjYzJjMmMyO1xuICAgICAgYm9yZGVyLXdpZHRoOiAycHg7XG4gICAgICB0cmFuc2l0aW9uOiAyNTBtcyBlYXNlO1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYmFja2dyb3VuZC1jb2xvciwgYm9yZGVyLWNvbG9yOyB9XG4gICAgLnNlbGVjdGlvbi0tY2hlY2tib3ggLnNlbGVjdGlvbl9fbGFiZWw6YWZ0ZXIge1xuICAgICAgdG9wOiAwLjIyMjIycmVtO1xuICAgICAgbGVmdDogMC41cmVtO1xuICAgICAgd2lkdGg6IDAuMzMzMzNyZW07XG4gICAgICBoZWlnaHQ6IDAuNjY2NjdyZW07XG4gICAgICBib3JkZXI6IHNvbGlkICMzNjk7XG4gICAgICBib3JkZXItd2lkdGg6IDAgMnB4IDJweCAwO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDApO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGVhc2U7IH1cbiAgLnNlbGVjdGlvbi0tY2hlY2tib3ggLnNlbGVjdGlvbl9faW5wdXQ6Zm9jdXMgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgIGJvcmRlci1jb2xvcjogIzg0ODQ4NDsgfVxuICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19pbnB1dDpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsOmJlZm9yZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjODQ4NDg0OyB9XG4gIC5zZWxlY3Rpb24tLWNoZWNrYm94IC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUsXG4gIC5zZWxlY3Rpb24tLWNoZWNrYm94IC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQ6Zm9jdXMgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUsXG4gIC5zZWxlY3Rpb24tLWNoZWNrYm94IC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQ6aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgIGJvcmRlci1jb2xvcjogIzM2OTsgfVxuICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkICsgLnNlbGVjdGlvbl9fbGFiZWw6YWZ0ZXIsXG4gIC5zZWxlY3Rpb24tLWNoZWNrYm94IC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQ6Zm9jdXMgKyAuc2VsZWN0aW9uX19sYWJlbDphZnRlcixcbiAgLnNlbGVjdGlvbi0tY2hlY2tib3ggLnNlbGVjdGlvbl9faW5wdXQ6Y2hlY2tlZDpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsOmFmdGVyIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGUoMSk7IH1cbiAgLnNlbGVjdGlvbi0tY2hlY2tib3ggLnNlbGVjdGlvbl9faW5wdXRbZGlzYWJsZWRdICsgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlLFxuICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19pbnB1dFtkaXNhYmxlZF06aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwOyB9XG4gIC5zZWxlY3Rpb24tLWNoZWNrYm94IC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXSArIC5zZWxlY3Rpb25fX2xhYmVsOmFmdGVyLFxuICAuc2VsZWN0aW9uLS1jaGVja2JveCAuc2VsZWN0aW9uX19pbnB1dFtkaXNhYmxlZF06aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYzJjMmMyOyB9XG4gIC5zZWxlY3Rpb24tLXJhZGlvIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICBtaW4taGVpZ2h0OiAxLjMzMzMzcmVtO1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTsgfVxuICAgIC5zZWxlY3Rpb24tLXJhZGlvIC5zZWxlY3Rpb25fX2xhYmVsOmJlZm9yZSB7XG4gICAgICB3aWR0aDogMS4zMzMzM3JlbTtcbiAgICAgIGhlaWdodDogMS4zMzMzM3JlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjYzJjMmMyO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IDI1MG1zIGVhc2U7XG4gICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3I7IH1cbiAgICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19sYWJlbDphZnRlciB7XG4gICAgICB0b3A6IDAuNjY2NjdyZW07XG4gICAgICBsZWZ0OiAwLjY2NjY3cmVtO1xuICAgICAgd2lkdGg6IDAuNDQ0NDRyZW07XG4gICAgICBoZWlnaHQ6IDAuNDQ0NDRyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzY5O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDApO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGVhc2U7IH1cbiAgLnNlbGVjdGlvbi0tcmFkaW8gLnNlbGVjdGlvbl9faW5wdXQ6aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgIGJvcmRlci1jb2xvcjogIzg0ODQ4NDsgfVxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkICsgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlLFxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkOmZvY3VzICsgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlLFxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkOmhvdmVyICsgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlIHtcbiAgICBib3JkZXItY29sb3I6ICMzNjk7IH1cbiAgLnNlbGVjdGlvbi0tcmFkaW8gLnNlbGVjdGlvbl9faW5wdXQ6Y2hlY2tlZCArIC5zZWxlY3Rpb25fX2xhYmVsOmFmdGVyLFxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkOmZvY3VzICsgLnNlbGVjdGlvbl9fbGFiZWw6YWZ0ZXIsXG4gIC5zZWxlY3Rpb24tLXJhZGlvIC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQ6aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDphZnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgc2NhbGUoMSk7IH1cbiAgLnNlbGVjdGlvbi0tcmFkaW8gLnNlbGVjdGlvbl9faW5wdXRbZGlzYWJsZWRdICsgLnNlbGVjdGlvbl9fbGFiZWw6YmVmb3JlLFxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dFtkaXNhYmxlZF06aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwOyB9XG4gIC5zZWxlY3Rpb24tLXJhZGlvIC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXSArIC5zZWxlY3Rpb25fX2xhYmVsOmFmdGVyLFxuICAuc2VsZWN0aW9uLS1yYWRpbyAuc2VsZWN0aW9uX19pbnB1dFtkaXNhYmxlZF06aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbDphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2MyYzJjMjsgfVxuIiwiLyoqXG4gKiBkaWFsb2ctdHlwb2dyYXBoeSAtIFNBU1MvU0NTUyBtb2R1bGUgc2V0dGluZ3NcbiAqIEB2ZXJzaW9uIHYxLjIuMFxuICogKGMpIDIwMTkgbWVvZGFpXG4gKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vbWVvZGFpL2RpYWxvZy10eXBvZ3JhcGh5I3JlYWRtZVxuICogQGxpY2Vuc2UgTUlUXG4gKi9cbiAvLyBUeXBvZ3JhcGh5IHNldHRpbmdzXG4kZGlhbG9nLWJyZWFrcG9pbnQtZGVmYXVsdDogZGVza3RvcCAhZGVmYXVsdDtcblxuLy8gVHlwb2dyYXBoeSBzZXR0aW5nc1xuJGRpYWxvZy10eXBvOiAoXG4gIGRlc2t0b3A6IChcbiAgICBkZWZhdWx0OiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDEuMTI1cmVtLFxuICAgICAgZm9udC1mYW1pbHkgICAgICAgOiAnXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmJyxcbiAgICAgIGZvbnQtd2VpZ2h0ICAgICAgIDogbm9ybWFsLFxuICAgICAgZm9udC1zdHlsZSAgICAgICAgOiBub3JtYWwsXG4gICAgICBsaW5lLWhlaWdodCAgICAgICA6IDEuMzc1LFxuICAgICksXG4gICAgaGVybzogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAyLjY2NjdyZW0sXG4gICAgICBmb250LXdlaWdodCAgICAgICA6IGJvbGQsXG4gICAgICB0ZXh0LXRyYW5zZm9ybSAgICA6IHVwcGVyY2FzZSxcbiAgICAgIGxpbmUtaGVpZ2h0ICAgICAgIDogMSxcbiAgICAgIGNvbG9yICAgICAgICAgICAgIDogIzAwMDA2NixcbiAgICApLFxuICAgIHN1Ymhlcm86IChcbiAgICAgIGZvbnQtc2l6ZSAgICAgICAgIDogMS4zMzNyZW0sXG4gICAgICBmb250LXdlaWdodCAgICAgICA6IGxpZ2h0ZXIsXG4gICAgICB0ZXh0LXRyYW5zZm9ybSAgICA6IHVwcGVyY2FzZSxcbiAgICAgIGxpbmUtaGVpZ2h0ICAgICAgIDogMS4xNjY2NyxcbiAgICApLFxuICAgIGhlYWRpbmc6IChcbiAgICAgIGZvbnQtc2l6ZSAgICAgICAgIDogMS42NjY3cmVtLFxuICAgICAgZm9udC13ZWlnaHQgICAgICAgOiBib2xkLFxuICAgICAgdGV4dC10cmFuc2Zvcm0gICAgOiB1cHBlcmNhc2UsXG4gICAgICBsaW5lLWhlaWdodCAgICAgICA6IDEuMzMzLFxuICAgICksXG4gICAgc3ViaGVhZGluZzogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAxcmVtLFxuICAgICAgZm9udC13ZWlnaHQgICAgICAgOiBsaWdodGVyLFxuICAgICAgdGV4dC10cmFuc2Zvcm0gICAgOiB1cHBlcmNhc2UsXG4gICAgICBsaW5lLWhlaWdodCAgICAgICA6IDEuMzMzLFxuICAgICAgY29sb3IgICAgICAgICAgICAgOiAjMDAwMDY2LFxuICAgICksXG4gICAgdGl0bGU6IChcbiAgICAgIGZvbnQtc2l6ZSAgICAgICAgIDogMXJlbSxcbiAgICAgIGZvbnQtd2VpZ2h0ICAgICAgIDogYm9sZCxcbiAgICAgIGxpbmUtaGVpZ2h0ICAgICAgIDogMS4yMjIsXG4gICAgICBjb2xvciAgICAgICAgICAgICA6ICMwMDAwNjYsXG4gICAgKSxcbiAgKSxcbiAgdGFibGV0OiAoXG4gICAgZGVmYXVsdDogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAxcmVtLFxuICAgICksXG4gICAgaGVybzogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAzcmVtLFxuICAgICksXG4gICAgc3ViaGVybzogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAxLjVyZW0sXG4gICAgKSxcbiAgICBoZWFkaW5nOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDEuODc1cmVtLFxuICAgICksXG4gICAgc3ViaGVhZGluZzogKFxuICAgICAgZm9udC1zaXplICAgICAgICAgOiAxLjEyNXJlbSxcbiAgICApLFxuICAgIHRpdGxlOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDEuMXJlbSxcbiAgICApLFxuICApLFxuICBtb2JpbGU6IChcbiAgICBkZWZhdWx0OiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDFyZW0sXG4gICAgKSxcbiAgICBoZXJvOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDEuNzVyZW0sXG4gICAgKSxcbiAgICBzdWJoZXJvOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDFyZW0sXG4gICAgKSxcbiAgICBoZWFkaW5nOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDEuNXJlbSxcbiAgICApLFxuICAgIHN1YmhlYWRpbmc6IChcbiAgICAgIGZvbnQtc2l6ZSAgICAgICAgIDogMXJlbSxcbiAgICApLFxuICAgIHRpdGxlOiAoXG4gICAgICBmb250LXNpemUgICAgICAgICA6IDFyZW0sXG4gICAgKSxcbiAgKVxuKSAhZGVmYXVsdDtcblxuJGRpYWxvZy1icmVha3BvaW50LWRlZmF1bHQ6IGRlc2t0b3AgIWRlZmF1bHQ7XG5cbiRkaWFsb2ctYnJlYWtwb2ludHM6IChcbiAgbW9iaWxlOiAnbWF4LXdpZHRoOiA0MHJlbScsXG4gIHRhYmxldDogJ21heC13aWR0aDogNjRyZW0nLFxuICBkZXNrdG9wOiAnbWluLXdpZHRoOiA2NC4wNjNyZW0nLFxuKSAhZGVmYXVsdDtcblxuJGRpYWxvZy1pcy1mbHVpZDogZmFsc2UgIWRlZmF1bHQ7XG5cbiRkaWFsb2ctZmx1aWQtYnJlYWtwb2ludC1zaXplczogKFxuICBtb2JpbGU6IDQwcmVtLFxuICB0YWJsZXQ6IDY0cmVtLFxuICBkZXNrdG9wOiAxMDByZW0sXG4pICFkZWZhdWx0O1xuXG4vLyBtaXhpbnNcbiRkaWFsb2ctZmx1aWQtdHlwZS1zaXplczogKCk7XG5cbkBpZiAkZGlhbG9nLWlzLWZsdWlkIHtcbiAgJG5vbi1kZWZhdWx0LXR5cGVzOiBtYXAtcmVtb3ZlKCRkaWFsb2ctdHlwbywgJGRpYWxvZy1icmVha3BvaW50LWRlZmF1bHQpO1xuICAkbm9uLWRlZmF1bHQtYnJlYWtwb2ludC1rZXlzOiBtYXAta2V5cygkbm9uLWRlZmF1bHQtdHlwZXMpO1xuXG4gIEBlYWNoICR0eXBlLCAkcnVsZXMgaW4gbWFwLWdldCgkZGlhbG9nLXR5cG8sICRkaWFsb2ctYnJlYWtwb2ludC1kZWZhdWx0KSB7XG4gICAgQGlmIG1hcC1oYXMta2V5KCRydWxlcywgJ2ZvbnQtc2l6ZScpIHtcbiAgICAgICRmbHVpZC1zaXplczogKCk7XG4gICAgICAkZm9udC1zaXplOiBtYXAtZ2V0KCRydWxlcywgJ2ZvbnQtc2l6ZScpO1xuICAgICAgJGhhcy1uby1mb250LXNpemU6IGZhbHNlO1xuXG4gICAgICBAZWFjaCAkbm9uLWRlZmF1bHQtYnJlYWtwb2ludC1uYW1lLCAkbm9uLWRlZmF1bHQtcnVsZXMgaW4gJG5vbi1kZWZhdWx0LXR5cGVzIHtcbiAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRub24tZGVmYXVsdC1ydWxlcywgJHR5cGUpIHtcbiAgICAgICAgICAkbm9uLWRlZmF1bHQtdHlwZTogbWFwLWdldCgkbm9uLWRlZmF1bHQtcnVsZXMsICR0eXBlKTtcbiAgICAgICAgICBAaWYgbWFwLWhhcy1oZXkoJG5vbi1kZWZhdWx0LXR5cGUsICdmb250LXNpemUnKSB7XG4gICAgICAgICAgICAkbm9uLWRlZmF1bHQtZm9udC1zaXplOiBtYXAtZ2V0KCRub24tZGVmYXVsdC10eXBlLCAnZm9udC1zaXplJyk7XG4gICAgICAgICAgICAkZmx1aWQtc2l6ZXM6IG1hcC1tZXJnZShcbiAgICAgICAgICAgICAgJGZsdWlkLXNpemVzLFxuICAgICAgICAgICAgICAobWFwLWdldCgkZGlhbG9nLWZsdWlkLWJyZWFrcG9pbnQtc2l6ZXMsICRub24tZGVmYXVsdC1icmVha3BvaW50LW5hbWUpOiAkbm9uLWRlZmF1bHQtZm9udC1zaXplKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICRoYXMtbm8tZm9udC1zaXplOiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgJGhhcy1uby1mb250LXNpemU6IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgQGlmICRoYXMtbm8tZm9udC1zaXplIHtcbiAgICAgICAgICAkZmx1aWQtc2l6ZXM6IG1hcC1tZXJnZShcbiAgICAgICAgICAgICRmbHVpZC1zaXplcyxcbiAgICAgICAgICAgIChtYXAtZ2V0KCRkaWFsb2ctZmx1aWQtYnJlYWtwb2ludC1zaXplcywgJG5vbi1kZWZhdWx0LWJyZWFrcG9pbnQtbmFtZSk6ICRmb250LXNpemUpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAkZmx1aWQtc2l6ZXM6IG1hcC1tZXJnZShcbiAgICAgICAgJGZsdWlkLXNpemVzLFxuICAgICAgICAobWFwLWdldCgkZGlhbG9nLWZsdWlkLWJyZWFrcG9pbnQtc2l6ZXMsICRkaWFsb2ctYnJlYWtwb2ludC1kZWZhdWx0KTogJGZvbnQtc2l6ZSlcbiAgICAgICk7XG5cbiAgICAgICRkaWFsb2ctZmx1aWQtdHlwZS1zaXplczogbWFwLW1lcmdlKCRkaWFsb2ctZmx1aWQtdHlwZS1zaXplcywgKCR0eXBlOiAkZmx1aWQtc2l6ZXMpKSAhZ2xvYmFsO1xuICAgIH1cbiAgfVxufVxuXG4vLy8gcG9seS1mbHVpZC1zaXppbmdcbi8vLyBHZW5lcmF0ZSBsaW5lYXIgaW50ZXJwb2xhdGVkIHNpemUgdmFsdWVzIHRocm91Z2ggbXVsdGlwbGUgYnJlYWsgcG9pbnRzXG4vLy8gQHBhcmFtICRwcm9wZXJ0eSAtIEEgc3RyaW5nIENTUyBwcm9wZXJ0eSBuYW1lXG4vLy8gQHBhcmFtICRtYXAgLSBBIFNBU1MgbWFwIG9mIHZpZXdwb3J0IHVuaXQgYW5kIHNpemUgdmFsdWUgcGFpcnNcbi8vLyBAcmVxdWlyZXMgZnVuY3Rpb24gbGluZWFyLWludGVycG9sYXRpb25cbi8vLyBAcmVxdWlyZXMgZnVuY3Rpb24gbWFwLXNvcnRcbi8vLyBAZXhhbXBsZVxuLy8vICAgQGluY2x1ZGUgcG9seS1mbHVpZC1zaXppbmcoJ2ZvbnQtc2l6ZScsICg1NzZweDogMjJweCwgNzY4cHg6IDI0cHgsIDk5MnB4OiAzNHB4KSk7XG4vLy8gQGF1dGhvciBKYWtlIFdpbHNvbiA8amFrZS5lLndpbHNvbkBnbWFpbC5jb20+XG5AbWl4aW4gcG9seS1mbHVpZC1zaXppbmcoJHByb3BlcnR5LCAkbWFwKSB7XG4gIC8vIEdldCB0aGUgbnVtYmVyIG9mIHByb3ZpZGVkIGJyZWFrcG9pbnRzXG4gICRsZW5ndGg6IGxlbmd0aChtYXAta2V5cygkbWFwKSk7XG5cbiAgLy8gRXJyb3IgaWYgdGhlIG51bWJlciBvZiBicmVha3BvaW50cyBpcyA8IDJcbiAgQGlmICgkbGVuZ3RoIDwgMikge1xuICAgIEBlcnJvciAncG9seS1mbHVpZC1zaXppbmcoKSAkbWFwIHJlcXVpcmVzIGF0IGxlYXN0IHZhbHVlcyc7XG4gIH1cblxuICAvLyBTb3J0IHRoZSBtYXAgYnkgdmlld3BvcnQgd2lkdGggKGtleSlcbiAgJG1hcDogbWFwLXNvcnQoJG1hcCk7XG4gICRrZXlzOiBtYXAta2V5cygkbWFwKTtcblxuICAvLyBNaW5pbXVtIHNpemVcbiAgI3skcHJvcGVydHl9OiBtYXAtZ2V0KCRtYXAsIG50aCgka2V5cywgMSkpO1xuXG4gIC8vIEludGVycG9sYXRlZCBzaXplIHRocm91Z2ggYnJlYWtwb2ludHNcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAoJGxlbmd0aCAtIDEpIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogbnRoKCRrZXlzLCAkaSkpIHtcbiAgICAgICN7JHByb3BlcnR5fTogbGluZWFyLWludGVycG9sYXRpb24oKG50aCgka2V5cywgJGkpOiBtYXAtZ2V0KCRtYXAsIG50aCgka2V5cywgJGkpKSwgbnRoKCRrZXlzLCAoJGkrMSkpOiBtYXAtZ2V0KCRtYXAsIG50aCgka2V5cywgKCRpICsgMSkpKSkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIE1heG1pbXVtIHNpemVcbiAgQG1lZGlhIChtaW4td2lkdGg6IG50aCgka2V5cywgJGxlbmd0aCkpIHtcbiAgICAjeyRwcm9wZXJ0eX06IG1hcC1nZXQoJG1hcCwgbnRoKCRrZXlzLCAkbGVuZ3RoKSk7XG4gIH1cbn1cblxuLy8vIGxpbmVhci1pbnRlcnBvbGF0aW9uXG4vLy8gQ2FsY3VsYXRlIHRoZSBkZWZpbml0aW9uIG9mIGEgbGluZSBiZXR3ZWVuIHR3byBwb2ludHNcbi8vLyBAcGFyYW0gJG1hcCAtIEEgU0FTUyBtYXAgb2Ygdmlld3BvcnQgd2lkdGhzIGFuZCBzaXplIHZhbHVlIHBhaXJzXG4vLy8gQHJldHVybnMgQSBsaW5lYXIgZXF1YXRpb24gYXMgYSBjYWxjKCkgZnVuY3Rpb25cbi8vLyBAZXhhbXBsZVxuLy8vICAgZm9udC1zaXplOiBsaW5lYXItaW50ZXJwb2xhdGlvbigoMzIwcHg6IDE4cHgsIDc2OHB4OiAyNnB4KSk7XG4vLy8gQGF1dGhvciBKYWtlIFdpbHNvbiA8amFrZS5lLndpbHNvbkBnbWFpbC5jb20+XG5AZnVuY3Rpb24gbGluZWFyLWludGVycG9sYXRpb24oJG1hcCkge1xuICAka2V5czogbWFwLWtleXMoJG1hcCk7XG4gIEBpZiAobGVuZ3RoKCRrZXlzKSAhPSAyKSB7XG4gICAgQGVycm9yICdsaW5lYXItaW50ZXJwb2xhdGlvbigpICRtYXAgbXVzdCBiZSBleGFjdGx5IDIgdmFsdWVzJztcbiAgfVxuICAvLyBUaGUgc2xvcGVcbiAgJG06IChtYXAtZ2V0KCRtYXAsIG50aCgka2V5cywgMikpIC0gbWFwLWdldCgkbWFwLCBudGgoJGtleXMsIDEpKSkgLyAobnRoKCRrZXlzLCAyKSAtIG50aCgka2V5cywgMSkpO1xuXG4gIC8vIFRoZSB5LWludGVyY2VwdFxuICAkYjogbWFwLWdldCgkbWFwLCBudGgoJGtleXMsIDEpKSAtICRtICogbnRoKCRrZXlzLCAxKTtcblxuICAvLyBEZXRlcm1pbmUgaWYgdGhlIHNpZ24gc2hvdWxkIGJlIHBvc2l0aXZlIG9yIG5lZ2F0aXZlXG4gICRzaWduOiAnKyc7XG4gIEBpZiAoJGIgPCAwKSB7XG4gICAgJHNpZ246ICctJztcbiAgICAkYjogYWJzKCRiKTtcbiAgfVxuXG4gIEByZXR1cm4gY2FsYygjeyRtKjEwMH12dyAjeyRzaWdufSAjeyRifSk7XG59XG5cbi8vLyBsaXN0LXNvcnRcbi8vLyBTb3J0IGEgU0FTUyBsaXN0XG4vLy8gQHBhcmFtICRsaXN0IC0gQSBTQVNTIGxpc3Rcbi8vLyBAcmV0dXJucyBBIHNvcnRlZCBTQVNTIGxpc3Rcbi8vLyBAcmVxdWlyZXMgZnVuY3Rpb24gbGlzdC1yZW1vdmVcbi8vLyBAYXV0aG9yIEpha2UgV2lsc29uIDxqYWtlLmUud2lsc29uQGdtYWlsLmNvbT5cbkBmdW5jdGlvbiBsaXN0LXNvcnQoJGxpc3QpIHtcbiAgJHNvcnRlZGxpc3Q6ICgpO1xuICBAd2hpbGUgbGVuZ3RoKCRsaXN0KSA+IDAge1xuICAgICR2YWx1ZTogbnRoKCRsaXN0LCAxKTtcbiAgICBAZWFjaCAkaXRlbSBpbiAkbGlzdCB7XG4gICAgICBAaWYgJGl0ZW0gPCAkdmFsdWUge1xuICAgICAgICAkdmFsdWU6ICRpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgICAkc29ydGVkbGlzdDogYXBwZW5kKCRzb3J0ZWRsaXN0LCAkdmFsdWUsICdzcGFjZScpO1xuICAgICRsaXN0OiBsaXN0LXJlbW92ZSgkbGlzdCwgaW5kZXgoJGxpc3QsICR2YWx1ZSkpO1xuICB9XG4gIEByZXR1cm4gJHNvcnRlZGxpc3Q7XG59XG5cbi8vLyBtYXAtc29ydFxuLy8vIFNvcnQgbWFwIGJ5IGtleXNcbi8vLyBAcGFyYW0gJG1hcCAtIEEgU0FTUyBtYXBcbi8vLyBAcmV0dXJucyBBIFNBU1MgbWFwIHNvcnRlZCBieSBrZXlzXG4vLy8gQHJlcXVpcmVzIGZ1bmN0aW9uIGxpc3Qtc29ydFxuLy8vIEBhdXRob3IgSmFrZSBXaWxzb24gPGpha2UuZS53aWxzb25AZ21haWwuY29tPlxuQGZ1bmN0aW9uIG1hcC1zb3J0KCRtYXApIHtcbiAgJGtleXM6IGxpc3Qtc29ydChtYXAta2V5cygkbWFwKSk7XG4gICRzb3J0ZWQtbWFwOiAoKTtcbiAgQGVhY2ggJGtleSBpbiAka2V5cyB7XG4gICAgJHNvcnRlZC1tYXA6IG1hcC1tZXJnZSgkc29ydGVkLW1hcCwgKCRrZXk6IG1hcC1nZXQoJG1hcCwgJGtleSkpKTtcbiAgfVxuICBAcmV0dXJuICRzb3J0ZWQtbWFwO1xufVxuXG4vLy8gbGlzdC1yZW1vdmVcbi8vLyBSZW1vdmUgYW4gaXRlbSBmcm9tIGEgbGlzdFxuLy8vIEBwYXJhbSAkbGlzdCAtIEEgU0FTUyBsaXN0XG4vLy8gQHBhcmFtICRpbmRleCAtIFRoZSBsaXN0IGluZGV4IHRvIHJlbW92ZVxuLy8vIEByZXR1cm5zIEEgU0FTUyBsaXN0XG4vLy8gQGF1dGhvciBKYWtlIFdpbHNvbiA8amFrZS5lLndpbHNvbkBnbWFpbC5jb20+XG5AZnVuY3Rpb24gbGlzdC1yZW1vdmUoJGxpc3QsICRpbmRleCkge1xuICAkbmV3LWxpc3Q6ICgpO1xuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkbGlzdCkge1xuICAgIEBpZiAkaSAhPSAkaW5kZXgge1xuICAgICAgJG5ldy1saXN0OiBhcHBlbmQoJG5ldy1saXN0LCBudGgoJGxpc3QsICRpKSwgJ3NwYWNlJyk7XG4gICAgfVxuICB9XG4gIEByZXR1cm4gJG5ldy1saXN0O1xufVxuXG5AbWl4aW4gYnAoJG5hbWUpIHtcbiAgQG1lZGlhICgje21hcC1nZXQoJGRpYWxvZy1icmVha3BvaW50cywgJG5hbWUpfSkge1xuICAgIEBjb250ZW50XG4gIH1cbn1cblxuQG1peGluIHR5cG8oJG5hbWU6IGRlZmF1bHQsICRvdmVyd3JpdGVzOiBudWxsLCAkZmx1aWQ6ICRkaWFsb2ctaXMtZmx1aWQpIHtcbiAgJHR5cGUtYnJlYWtwb2ludHM6IG1hcC1rZXlzKCRkaWFsb2ctdHlwbyk7XG4gICRkZWZhdWx0LXR5cGVzOiBtYXAtZ2V0KCRkaWFsb2ctdHlwbywgJGRpYWxvZy1icmVha3BvaW50LWRlZmF1bHQpO1xuXG4gIEBpZiBtYXAtaGFzLWtleSgkZGVmYXVsdC10eXBlcywgJG5hbWUpIHtcbiAgICAkYnJlYWtwb2ludC1zdHlsZXM6IG1hcC1nZXQoJGRlZmF1bHQtdHlwZXMsICRuYW1lKTtcbiAgICBAaWYgJG92ZXJ3cml0ZXMge1xuICAgICAgJGJyZWFrcG9pbnQtc3R5bGVzOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnQtc3R5bGVzLCAkb3ZlcndyaXRlcyk7XG4gICAgfVxuICAgIC8vLyBwcmludHMgc3R5bGVzIGZvciB0aGUgZGVmYXVsdCBicmVha3BvaW50XG4gICAgQGVhY2ggJHByb3BlcnR5LCAkdmFsdWUgaW4gJGJyZWFrcG9pbnQtc3R5bGVzIHtcbiAgICAgIEBpZiAkZGlhbG9nLWlzLWZsdWlkIGFuZCAoJHByb3BlcnR5ID09ICdmb250LXNpemUnKSAge1xuICAgICAgICBAaW5jbHVkZSBwb2x5LWZsdWlkLXNpemluZygnZm9udC1zaXplJywgbWFwLWdldCgkZGlhbG9nLWZsdWlkLXR5cGUtc2l6ZXMsICRuYW1lKSk7XG4gICAgICB9IEBlbHNlIGlmICRwcm9wZXJ0eSA9PSAnZm9udC1mYW1pbHknIHtcbiAgICAgICAgI3skcHJvcGVydHl9OiB1bnF1b3RlKCR2YWx1ZSk7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIEBpZiBub3QgJGZsdWlkIHtcbiAgICAgIEBpbmNsdWRlIHR5cG9CcmVha3BvaW50KCR0eXBlLWJyZWFrcG9pbnRzLCAkbmFtZSwgJGRlZmF1bHQtdHlwZXMpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJ25vIHR5cGUgbmFtZWQgYCN7JG5hbWV9YCBpbiAkZGlhbG9nLXR5cG8nO1xuICB9XG59XG5cbkBtaXhpbiBjc3NpZnktbWFwKCRkZWNsYXJhdGlvbnMpIHtcbiAgQGVhY2ggJHByb3BlcnR5LCAkdmFsdWUgaW4gJGRlY2xhcmF0aW9ucyB7XG4gICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gIH1cbn1cblxuLy8gcmVuZGVycyBtb2RpZmllcmVzXG5AbWl4aW4gdHlwb0JyZWFrcG9pbnQoJHR5cGUtYnJlYWtwb2ludHMsICRuYW1lLCAkZGVmYXVsdC10eXBlcykge1xuICBAZWFjaCAkYnJlYWtwb2ludC1uYW1lIGluICR0eXBlLWJyZWFrcG9pbnRzIHtcbiAgICBAaWYgbm90ICgkYnJlYWtwb2ludC1uYW1lID09ICRkaWFsb2ctYnJlYWtwb2ludC1kZWZhdWx0KSB7XG4gICAgICBAaW5jbHVkZSBicCgkYnJlYWtwb2ludC1uYW1lKSB7XG4gICAgICAgICRicmVha3BvaW50LXN0eWxlczogbWFwLWdldCgkZGlhbG9nLXR5cG8sICRicmVha3BvaW50LW5hbWUpO1xuICAgICAgICBAaW5jbHVkZSBjc3NpZnktbWFwKG1hcC1nZXQoJGJyZWFrcG9pbnQtc3R5bGVzLCAkbmFtZSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyByZW5kZXJzIGRlZmF1bHQgdGV4dCBoZWxwZXIgY2xhc3Nlc1xuQG1peGluIHRleHRDbGFzc2VzICgkcHJlZml4OiAnLnQtJykge1xuICAkZGVmYXVsdC10eXBlczogbWFwLWdldCgkZGlhbG9nLXR5cG8sICRkaWFsb2ctYnJlYWtwb2ludC1kZWZhdWx0KTtcbiAgQGVhY2ggJHJ1bGUsICRrZXkgaW4gJGRlZmF1bHQtdHlwZXMge1xuICAgIEBpZiBub3QgKCRydWxlID09IGRlZmF1bHQpICB7XG4gICAgICAjeyRwcmVmaXh9I3skcnVsZX0ge1xuICAgICAgICBAaW5jbHVkZSB0eXBvKCRydWxlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAjU0VUVElOR1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuKiAgR3JpZFxuKi9cbiRjb250YWluZXItLW1heC13aWR0aDogMTM3ODtcblxuLyoqXG4qICBCcmVha3BvaW50IFNldHRpbmdzXG4qL1xuXG4vLyByZWZlcnMgYWx3YXlzIHRvIGEga2V5IGluc2lkZSB0aGUgJGJyZWFrcG9pbnQgbWFwIChzZWUgYGNzcy91dGlscy9fYnJlYWtwb2ludHNgKVxuJGJyZWFrcG9pbnQtLWJhc2U6IHBob25lO1xuXG4vLyBwaG9uZSBtaW4gaXMgMFxuJHBob25lLS1tYXg6IDYwMHB4ICFnbG9iYWw7XG5cbiR0YWJsZXQtcG9ydHJhaXQtLW1pbjogNjAxcHggIWdsb2JhbDtcbiR0YWJsZXQtcG9ydHJhaXQtLW1heDogOTAwcHggIWdsb2JhbDtcblxuJHRhYmxldC1sYW5kc2NhcGUtLW1pbjogOTAxcHggIWdsb2JhbDtcbiR0YWJsZXQtbGFuZHNjYXBlLS1tYXg6IDEyMDBweCAhZ2xvYmFsO1xuXG4kZGVza3RvcC0tbWluOiAxMjAxcHggIWdsb2JhbDtcbiRkZXNrdG9wLS1tYXg6IDE5MjBweCAhZ2xvYmFsO1xuXG4kZGVza3RvcC1iaWctLW1pbjogMTkyMXB4ICFnbG9iYWw7XG5cbi8vIG92ZXJyaWRlIGRlZmF1bHQgYnJlYWtwb2ludCBmcm9tIGRpYWxvZ1xuJGRpYWxvZy1icmVha3BvaW50LWRlZmF1bHQ6ICRicmVha3BvaW50LS1iYXNlO1xuXG4vKipcbiAqICBUeXBvZ3JhcGh5XG4gKi9cbiRmb250LXNpemUtLWJhc2U6IDE4ICFnbG9iYWw7XG5cbiRmb250LWZhbWlseS0taGVhZGluZzogJ0ZydXRpZ2VyIExUIFcwMV81NSBSb21hbic7XG4kZm9udC13ZWlnaHQtLWhlYWRpbmc6IDQwMDtcblxuJGZvbnQtZmFtaWx5LS1iYXNlOiAnRnJ1dGlnZXIgTFQgVzAxXzU1IFJvbWFuJztcbiRmb250LXdlaWdodC0tYmFzZTogNDAwO1xuJGZvbnQtd2VpZ2h0LS1iYXNlLWJvbGQ6IDYwMDtcblxuJGZvbnQtZmFtaWx5LS1saWdodDogJ0ZydXRpZ2VyIExUIFcwMV81NSBSb21hbic7IC8vIHVzZSAnRnJ1dGlnZXIgTFQgVzAxXzQ1IExpZ2h0Jzsgd2hlbiBwcm92aWRlZFxuJGZvbnQtd2VpZ2h0LS1saWdodDogNDAwO1xuXG4kZm9udC1mYW1pbHktLWJvbGQ6ICdGcnV0aWdlciBMVCBXMDFfNjUgQm9sZCc7XG4kZm9udC13ZWlnaHQtLWJvbGQ6IDQwMDtcblxuLy8gJGxpbmUtaGVpZ2h0LS14czogMS4xNTsgLy8gMzIuNXB4XG4kbGluZS1oZWlnaHQtLXM6IDEuMTU7IC8vIDMyLjVweFxuJGxpbmUtaGVpZ2h0LS14bTogMS4zNTsgLy8gMzZweFxuJGxpbmUtaGVpZ2h0LS1tOiAxLjY1OyAvLyA0M3B4XG4kbGluZS1oZWlnaHQtLWw6IDEuODsgLy8gMzJweFxuJGxpbmUtaGVpZ2h0LS1iYXNlOiAkbGluZS1oZWlnaHQtLW07XG5cbiRmb250LXNpemUteHM6IDEzO1xuJGZvbnQtc2l6ZS1zOiAxNTtcbiRmb250LXNpemUtbTogMTg7XG4kZm9udC1zaXplLXhtOiAyMTtcbiRmb250LXNpemUtbDogMjQ7XG4kZm9udC1zaXplLXhsLXA6IDI2O1xuJGZvbnQtc2l6ZS14bDogMzI7XG4kZm9udC1zaXplLXh4bC1wOiAzODtcbiRmb250LXNpemUteHhsOiA1MjtcbiRmb250LXNpemUteHh4bC1wOiA0ODtcbiRmb250LXNpemUteHh4bDogNzI7XG5cbi8qKlxuICogQmFzZSBzcGFjaW5nIHVuaXRzIC0gZm9yIGJveGVzIChob3Jpem9udGFsIGFuZCB2ZXJ0aWNhbClcbiAqL1xuJHNwYWNlLS14eHM6IDM7XG4kc3BhY2UtLXhzOiA2O1xuJHNwYWNlLS1zOiA5O1xuJHNwYWNlLS1tOiAxODtcbiRzcGFjZS0teG06IDM2O1xuJHNwYWNlLS14eG06IDU0O1xuJHNwYWNlLS1sOiA3MjtcbiRzcGFjZS0teGw6IDkwO1xuJHNwYWNlLS14eGw6IDEwODtcbiRzcGFjZS0teHh4bDogMTQwO1xuXG4vKipcbiAqIEdyaWRcbiAqL1xuJGdyaWRfX3NwYWNlLW91dGVyLXBhZGRpbmctaG9yaXpvbnRhbC0tcGhvbmU6IDMwO1xuJGdyaWRfX3NwYWNlLW91dGVyLXBhZGRpbmctaG9yaXpvbnRhbC0tdGFibGV0OiA2MDtcbiRncmlkX19zcGFjZS1vdXRlci1wYWRkaW5nLWhvcml6b250YWwtLWRlc2t0b3A6IDExMDtcblxuJGdyaWRfX3NwYWNlLWd1dHRlci0tcGhvbmU6IDM2O1xuJGdyaWRfX3NwYWNlLWd1dHRlci0tdGFibGV0OiAzNjtcbiRncmlkX19zcGFjZS1ndXR0ZXItLWRlc2t0b3A6IDYwO1xuXG4vKipcbiAqICBDU1MgRnJhbWV3b3JrXG4gKi9cblxuLy8gdXNlZCBmb3IgY29uZGl0aW9uYWwgcmVuZGVyaW5nIGluIHNhc3NcbiRzYXNzLW51bGw6IG51bGw7XG5cbi8vIHd5c2l3eWcgZWRpdG9yIGNsYXNzXG4kZm9ybWF0dGVkLXRleHQtY2xhc3M6ICdmb3JtYXR0ZWQtdGV4dCc7XG5cbi8vIHRlYXNlciBib3ggc2hhZG93XG4kdGVhc2VyX19ib3gtc2hhZG93OiAwIDAuMjc3cmVtIDAuNjZyZW0gcmdiYSgxNSwgNjgsIDk0LCAwLjMpOyAvLyAwIDVweCAxMnB4IChiYXNpZXJlbmQgYXVmIDFyZW0gPSAxOHB4KVxuXG4vLyBob3ZlciBzY2FsZSBmYWN0b3JcbiRob3Zlci1zY2FsZS1mYWN0b3I6IDEuMDI7XG5cbi8vIGJhY2tncm91bmQgZ3JhZGllbnQgYW5nbGVcbiRiYWNrZ3JvdW5kLWdyYWRpZW50X19hbmdsZTogMjgwZGVnO1xuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICNDT0xPUlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRjb2xvci0td2hpdGU6ICNmZmYgIWRlZmF1bHQ7XG4kY29sb3ItLWJsYWNrOiAjMDAwICFkZWZhdWx0O1xuXG4vKiBncmV5ICovXG4kY29sb3ItLWdyZXk6ICNhM2EzYTM7XG4kY29sb3ItLWdyZXktZGFya2VzdDogIzM2MzYzNjtcbiRjb2xvci0tZ3JleS1kYXJrZXI6ICM2NjY7XG4kY29sb3ItLWdyZXktZGFyazogIzg0ODQ4NDtcbiRjb2xvci0tZ3JleS1saWdodDogI2MyYzJjMjtcbiRjb2xvci0tZ3JleS1saWdodGVyOiAjZTBlMGUwO1xuJGNvbG9yLS1ncmV5LWxpZ2h0ZXN0OiAjZjhmOGY4O1xuXG4kY29sb3ItLWdyZXktZ3JhZGllbnQtc3RhcnQ6ICNmN2Y3Zjk7XG4kY29sb3ItLWdyZXktZ3JhZGllbnQtZW5kOiAjZTllYmVmO1xuXG4vLyBibHVlXG4kY29sb3ItLWJsdWU6ICMzNjk7XG4kY29sb3ItLWJsdWUtZGFyazogIzBkMzI1NjtcbiRjb2xvci0tYmx1ZS1saWdodDogIzZlODQ5YTtcbiRjb2xvci0tYmx1ZS1saWdodGVyOiAjOWVhZGJiO1xuJGNvbG9yLS1ibHVlLWxpZ2h0ZXN0OiAjZTZmNmZmO1xuXG4kY29sb3ItLWJsdWUtZ3JhZGllbnQtc3RhcnQ6ICMwZjQ4ODA7XG4kY29sb3ItLWJsdWUtZ3JhZGllbnQtZW5kOiAjMzI2YWExO1xuJGNvbG9yLS1ibHVlLWdyYWRpZW50LXByaW1hcnktZW5kOiAjMmY2YmE3O1xuXG4vLyB0dXJxdW9pc2VcbiRjb2xvci0tdHVycW9pc2U6ICM5Y2M7XG4kY29sb3ItLXR1cnFvaXNlLWRhcms6ICM1ZThlOGU7XG4kY29sb3ItLXR1cnFvaXNlLWxpZ2h0OiAjYzFlMGUwO1xuXG4vLyByZWRcbiRjb2xvci0tcmVkOiAjYmEzYzUxO1xuJGNvbG9yLS1yZWQtZGFyazogIzllNTY2MjtcbiRjb2xvci0tcmVkLWxpZ2h0OiAjYzk5O1xuXG4kY29sb3ItLXJlZC1ncmFkaWVudC1zdGFydDogIzllNjA2OTtcbiRjb2xvci0tcmVkLWdyYWRpZW50LWVuZDogI2JlODI4YztcblxuLy8gZ3JlZW5cbiRjb2xvci0tZ3JlZW4tZ3JhZGllbnQtc3RhcnQ6IHJnYmEoMTI0LCAxODAsIDE4MCwgMC40KTtcbiRjb2xvci0tZ3JlZW4tZ3JhZGllbnQtZW5kOiByZ2JhKDE1MywgMjA0LCAyMDQsIDAuNCk7XG5cbi8vIG9yYW5nZVxuJGNvbG9yLS1vcmFuZ2U6ICNjOTM7XG4kY29sb3ItLW9yYW5nZS1kYXJrOiAjYjQ4MjFmO1xuJGNvbG9yLS1vcmFuZ2UtbGlnaHQ6ICNkYmI3NzA7XG5cbi8vZGlzYWJsZWRcbiRjb2xvci0tZGlzYWJsZWQ6ICM5NGEzYjI7XG5cbi8qIHByaW1hcnkgKi9cbiRjb2xvci0tcHJpbWFyeTogJGNvbG9yLS1ibHVlO1xuJGNvbG9yLS1wcmltYXJ5LWhvdmVyOiAkY29sb3ItLWJsdWUtZGFyaztcbiRjb2xvci0tcHJpbWFyeS1ncmFkaWVudC1zdGFydDogJGNvbG9yLS1ibHVlO1xuJGNvbG9yLS1wcmltYXJ5LWdyYWRpZW50LWVuZDogJGNvbG9yLS1ibHVlLWdyYWRpZW50LXByaW1hcnktZW5kO1xuJGNvbG9yLS1wcmltYXJ5LWRpc2FibGVkOiAkY29sb3ItLWRpc2FibGVkO1xuXG4vKiBzZWNvbmRhcnkgKi9cbiRjb2xvci0tc2Vjb25kYXJ5OiAkY29sb3ItLXJlZDtcbiRjb2xvci0tc2Vjb25kYXJ5LWhvdmVyOiAkY29sb3ItLXJlZC1kYXJrO1xuJGNvbG9yLS1zZWNvbmRhcnktZ3JhZGllbnQtc3RhcnQ6ICRjb2xvci0tcmVkLWdyYWRpZW50LXN0YXJ0O1xuJGNvbG9yLS1zZWNvbmRhcnktZ3JhZGllbnQtZW5kOiAkY29sb3ItLXJlZC1ncmFkaWVudC1lbmQ7XG4kY29sb3ItLXNlY29uZGFyeS1kaXNhYmxlZDogJGNvbG9yLS1kaXNhYmxlZDtcblxuLyogc3BlY2lhbCAqL1xuJGNvbG9yLS1zcGVjaWFsLWdyYWRpZW50LXN0YXJ0OiAkY29sb3ItLWdyZWVuLWdyYWRpZW50LXN0YXJ0O1xuJGNvbG9yLS1zcGVjaWFsLWdyYWRpZW50LWVuZDogJGNvbG9yLS1ncmVlbi1ncmFkaWVudC1lbmQ7XG4kY29sb3ItLXNwZWNpYWwtZGlzYWJsZWQ6ICRjb2xvci0tZGlzYWJsZWQ7XG5cbi8qIHRleHQgKi9cbiRjb2xvci0tdGV4dDogJGNvbG9yLS1ibHVlLWRhcms7XG4kY29sb3ItLWhvdmVyLXRleHQ6ICRjb2xvci0tYmxhY2s7XG4kY29sb3ItLWhlYWRpbmdzOiAkY29sb3ItLWJsdWUtZGFyaztcbiRjb2xvci0tbWV0YTogJGNvbG9yLS1ncmV5LWRhcmtlcjtcblxuJGNvbG9yLS1kaXNhYmxlZC10ZXh0OiAkY29sb3ItLWdyZXktbGlnaHQ7XG4kY29sb3ItLWRpc2FibGVkLWJhY2tncm91bmQ6ICRjb2xvci0tZ3JleS1saWdodGVzdDtcbiRjb2xvci0tZGlzYWJsZWQtYm9yZGVyOiAkY29sb3ItLWdyZXktbGlnaHRlcjtcbiIsIi8qKlxuICogTWFwIGZvciB0aGUgcHJvamVjdCBicmVha3BvaW50cy5cbiAqIHRoZSBicmVha3BvaW50IHZhcmlhYmxlcyBhcmUgZGVmaW5lZCBpbiBzZXR0aW5ncy5zY3NzXG4gKi9cbiAkYnJlYWtwb2ludHM6IChcbiAgcGhvbmU6IChcbiAgICBtYXg6ICRwaG9uZS0tbWF4LFxuICApLFxuICB0YWJsZXQtcG9ydHJhaXQ6IChcbiAgICBtaW46ICR0YWJsZXQtcG9ydHJhaXQtLW1pbixcbiAgICBtYXg6ICR0YWJsZXQtcG9ydHJhaXQtLW1heCxcbiAgKSxcbiAgdGFibGV0LWxhbmRzY2FwZTogKFxuICAgIG1pbjogJHRhYmxldC1sYW5kc2NhcGUtLW1pbixcbiAgICBtYXg6ICR0YWJsZXQtbGFuZHNjYXBlLS1tYXgsXG4gICksXG4gIHRhYmxldDogKFxuICAgIG1pbjogJHRhYmxldC1wb3J0cmFpdC0tbWluLFxuICAgIG1heDogJHRhYmxldC1sYW5kc2NhcGUtLW1heCxcbiAgKSxcbiAgZGVza3RvcDogKFxuICAgIG1pbjogJGRlc2t0b3AtLW1pbixcbiAgICBtYXg6ICRkZXNrdG9wLS1tYXgsXG4gICksXG4gIGRlc2t0b3AtYmlnOiAoXG4gICAgbWluOiAkZGVza3RvcC1iaWctLW1pbixcbiAgKSxcbik7XG5cbi8vIG92ZXJyaWRlIGRlZmF1bHQgYnJlYWtwb2ludCBmcm9tIGRpYWxvZ1xuJGRpYWxvZy1icmVha3BvaW50LWRlZmF1bHQ6ICRicmVha3BvaW50LS1iYXNlICFnbG9iYWw7XG5cbi8vIHN1cHBvcnQgZm9yIGRpYWxvZy10eXBvZ3JhcGh5XG4kZGlhbG9nLWJyZWFrcG9pbnRzOiAoXG4gIHBob25lOiAnbWF4LXdpZHRoOiAjeyRwaG9uZS0tbWF4fScsXG4gIHRhYmxldC1wb3J0cmFpdDogJ21pbi13aWR0aDogI3skdGFibGV0LXBvcnRyYWl0LS1taW59JyxcbiAgdGFibGV0LWxhbmRzY2FwZTogJ21pbi13aWR0aDogI3skdGFibGV0LWxhbmRzY2FwZS0tbWlufScsXG4gIGRlc2t0b3A6ICdtaW4td2lkdGg6ICN7JGRlc2t0b3AtLW1pbn0nLFxuICBkZXNrdG9wLWJpZzogJ21pbi13aWR0aDogI3skZGVza3RvcC1iaWctLW1pbn0nLFxuKTtcblxuLy8gcmVzZXJ2ZWQgZm9yIGRpYWxvZy10eXBvZ3JhcGh5XG5AbWl4aW4gYnAoJG5hbWUpIHtcbiAgQG1lZGlhICggI3ttYXAtZ2V0KCAkZGlhbG9nLWJyZWFrcG9pbnRzLCAkbmFtZSApfSApIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vKipcbiAqIFVzZSB0aGUgYnJlYWtwb2ludHMgb2YgdGhpcyBwcm9qZWN0LlxuICogaWYgeW91IGhhdmUgYSBicmVha3BvaW50IGtleSB3aXRoIGEgaHlwaGVuLCB5b3UgbmVlZCB0byBtYWtlIGEgc3RyaW5nIG91dCBvZiBpdCAodGFibGV0LXBvcnRyYWl0IC0+ICd0YWJsZXQtcG9ydHJhaXQnKVxuICpcbiAqIEV4YW1wbGVzOlxuICogQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0LXBvcnRyYWl0JykgLT4gdGFrZXMgdGhlIG1pbiBvZiB0aGUgdGFibGV0LXBvcnRyYWl0XG4gKiBAaW5jbHVkZSBicmVha3BvaW50KCdkZXNrdG9wJywgJ29ubHknKSAtPiB0YWtlcyB0aGUgbWluIGFuZCBtYXggdmFsdWUgZnJvbSB0aGUgZGVza3RvcCBicmVha3BvaW50XG4gKiBAaW5jbHVkZSBicmVha3BvaW50KCdwaG9uZScsICdkZXNrdG9wJykgLT4gdGFrZXMgdGhlIG1pbiBvZiB0aGUgcGhvbmUgYW5kIHRoZSBtYXggb2YgdGhlIGRlc2t0b3BcbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICRiYXNlLWtleSAtIGtleSBvZiB0aGUgbWluIGJyZWFrcG9pbnRcbiAqIEBwYXJhbSAge3N0cmluZ30gJGFkZGl0aW9uYWwgLSBrZXkgZm9yIGJyZWFrcG9pbnQgb3IgJ29ubHknXG4gKi9cbkBtaXhpbiBicmVha3BvaW50KCRiYXNlLWtleSwgJGFkZGl0aW9uYWw6IG51bGwpIHtcbiAgQGlmIG5vdCBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRiYXNlLWtleSkge1xuICAgIEBlcnJvciAnVW5rbm93biBicmVha3BvaW50OiBgI3skYmFzZS1rZXl9YC4nO1xuICB9XG5cbiAgJGJhc2UtbWFwOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGJhc2Uta2V5KTtcbiAgJGJhc2UtbWluOiBtYXAtZ2V0KCRiYXNlLW1hcCwgJ21pbicpO1xuICAkYmFzZS1tYXg6IG1hcC1nZXQoJGJhc2UtbWFwLCAnbWF4Jyk7XG5cbiAgJG1lZGlhLXF1ZXJ5OiAnJztcblxuICBAaWYgJGFkZGl0aW9uYWwgPT0gbnVsbCB7XG4gICAgQGlmICRiYXNlLW1pbiA9PSBudWxsIHtcbiAgICAgICRtZWRpYS1xdWVyeTogJ21heC13aWR0aDogI3skYmFzZS1tYXh9JztcbiAgICB9IEBlbHNlIHtcbiAgICAgICRtZWRpYS1xdWVyeTogJ21pbi13aWR0aDogI3skYmFzZS1taW59JztcbiAgICB9XG4gIH0gQGVsc2UgaWYgJGFkZGl0aW9uYWwgPT0gJ29ubHknIHtcbiAgICBAaWYgJGJhc2UtbWluID09IG51bGwge1xuICAgICAgJG1lZGlhLXF1ZXJ5OiAnbWF4LXdpZHRoOiAjeyRiYXNlLW1heH0nO1xuICAgIH0gQGVsc2UgaWYgJGJhc2UtbWF4ID09IG51bGwge1xuICAgICAgJG1lZGlhLXF1ZXJ5OiAnbWluLXdpZHRoOiAjeyRiYXNlLW1pbn0nO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJG1lZGlhLXF1ZXJ5OiAnbWluLXdpZHRoOiAjeyRiYXNlLW1pbn0pIGFuZCAobWF4LXdpZHRoICN7JGJhc2UtbWF4fSc7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaWYgbm90IG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGFkZGl0aW9uYWwpIHtcbiAgICAgIEBlcnJvciAnVW5rbm93biBicmVha3BvaW50OiBgI3skYWRkaXRpb25hbH1gLic7XG4gICAgfVxuICAgICRzZWNvbmQ6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYWRkaXRpb25hbCk7XG5cbiAgICBAaWYgKHR5cGUtb2YoJHNlY29uZCkgPT0gJ21hcCcpIHtcbiAgICAgICRzZWNvbmQtbWF4OiBtYXAtZ2V0KCRzZWNvbmQsICdtYXgnKTtcblxuICAgICAgQGlmICRzZWNvbmQtbWF4IHtcbiAgICAgICAgQGlmICRiYXNlLW1pbiA9PSBudWxsIHtcbiAgICAgICAgICAkbWVkaWEtcXVlcnk6ICdtYXgtd2lkdGg6ICN7JHNlY29uZC1tYXh9JztcbiAgICAgICAgfSBAZWxzZSBpZiAoJHNlY29uZC1tYXggPCAkYmFzZS1taW4pIHtcbiAgICAgICAgICBAZXJyb3IgJ1BsZWFzZSBkZWZpbmUgdGhlIGJyZWFrcG9pbnQgYCN7JGFkZGl0aW9uYWx9YCBiZWZvcmUgYCN7JGJhc2Uta2V5fWAgLT4gQGluY2x1ZGUgYnJlYWtwb2ludChgI3skYWRkaXRpb25hbH1gLCBgI3skYmFzZS1rZXl9YCknO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAkbWVkaWEtcXVlcnk6ICdtaW4td2lkdGg6ICN7JGJhc2UtbWlufSkgYW5kIChtYXgtd2lkdGg6ICN7JHNlY29uZC1tYXh9JztcbiAgICAgICAgfVxuICAgICAgfSBAZWxzZSB7XG4gICAgICAgIEBpZiAkYmFzZS1taW4gPT0gbnVsbCB7XG4gICAgICAgICAgQGVycm9yICdZb3UgZG9udCBuZWVkIGEgbWVkaWEgcXVlcnkgZm9yIHRoYXQnO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAkbWVkaWEtcXVlcnk6ICdtaW4td2lkdGg6ICN7JGJhc2UtbWlufSc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAbWVkaWEgc2NyZWVuIGFuZCAoJG1lZGlhLXF1ZXJ5KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8qKlxuICogU3RyaXAgdGhlIHVuaXQgZnJvbSBhIG51bWJlciAoZS5nLiAxOHB4IC0tPiAxOCkuXG4gKi9cbkBmdW5jdGlvbiBzdHJpcC11bml0cygkbnVtYmVyKSB7XG4gIEByZXR1cm4gJG51bWJlciAvICgkbnVtYmVyICogMCArIDEpO1xufVxuXG4vKipcbiAqIFRpbnQgdGhlIGNvbG9yIHdpdGggdHJhbnNwYXJlbmN5XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICRjb2xvciAgICAgIC0gaGV4IGNvbG9yIGNvZGVcbiAqIEBwYXJhbSAge2Zsb2F0fSAkcGVyY2VudGFnZSAtIHBlcmNlbnRhZ2Ugb2YgdHJhbnNwYXJlbmN5XG4gKi9cbkBmdW5jdGlvbiB0aW50KCRjb2xvciwgJHBlcmNlbnRhZ2UpIHtcbiAgQGlmICRwZXJjZW50YWdlID09IDAuMSB7XG4gICAgQHJldHVybiBsaWdodGVuKCRjb2xvciwgNDUlKTtcbiAgfVxuICBAaWYgJHBlcmNlbnRhZ2UgPT0gMC4yIHtcbiAgICBAcmV0dXJuIGxpZ2h0ZW4oJGNvbG9yLCA0MCUpO1xuICB9XG4gIEBpZiAkcGVyY2VudGFnZSA9PSAwLjMge1xuICAgIEByZXR1cm4gbGlnaHRlbigkY29sb3IsIDM1JSk7XG4gIH1cbiAgQGlmICRwZXJjZW50YWdlID09IDAuNCB7XG4gICAgQHJldHVybiBsaWdodGVuKCRjb2xvciwgMzAlKTtcbiAgfVxuICBAaWYgJHBlcmNlbnRhZ2UgPT0gMC41IHtcbiAgICBAcmV0dXJuIGxpZ2h0ZW4oJGNvbG9yLCAyNSUpO1xuICB9XG4gIEBpZiAkcGVyY2VudGFnZSA9PSAwLjYge1xuICAgIEByZXR1cm4gbGlnaHRlbigkY29sb3IsIDIwJSk7XG4gIH1cbiAgQGlmICRwZXJjZW50YWdlID09IDAuNyB7XG4gICAgQHJldHVybiBsaWdodGVuKCRjb2xvciwgMTUlKTtcbiAgfVxuICBAaWYgJHBlcmNlbnRhZ2UgPT0gMC44IHtcbiAgICBAcmV0dXJuIGxpZ2h0ZW4oJGNvbG9yLCAxMCUpO1xuICB9XG4gIEBpZiAkcGVyY2VudGFnZSA9PSAwLjkge1xuICAgIEByZXR1cm4gbGlnaHRlbigkY29sb3IsIDUlKTtcbiAgfVxufVxuXG4vKipcbiAqIGhlbHBlciBmdW5jdGlvbnNcbiAqL1xuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgZW0gdmFsdWUgZnJvbSBwaXhlbCB2YWx1ZXNcbiAqIEBwYXJhbSAge2ludH0gICAkcHg6IGRlc2lyZWQgcGl4ZWwgdmFsdWVcbiAqIEBwYXJhbSB7aW50fSAgICAkcmVmOiByZWZlcmVuY2UgZm9udCBzaXplIG9mIHRoZSBjb21wb25lbnRcbiAqIE5vdGVzOlxuICogcmVmZXJlbmNlIGlzIG9ubHkgbmVlZGVkLCBpZiB0aGUgZm9udC1zaXplIGlzIG5vdCB0aGUgc2FtZSBhcyB0aGUgJGZvbnQtc2l6ZS0tYmFzZVxuICovXG5AZnVuY3Rpb24gcHgtdG8tZW0oJHB4LCAkcmVmOiAkZm9udC1zaXplLS1iYXNlKSB7XG4gIEByZXR1cm4gdG8tZW0odG8tcHgoJHB4KSAvIHRvLXB4KCRyZWYpKTtcbn1cblxuLyoqXG4gKiBjYWxjdWxhdGUgdGhlIHJlbSB2YWx1ZSBmcm9tIHBpeGVsIHZhbHVlc1xuICogQHBhcmFtICB7aW50fSAgICRweDogZGVzaXJlZCBwaXhlbCB2YWx1ZVxuICovXG5AZnVuY3Rpb24gcHgtdG8tcmVtKCRweCkge1xuICBAcmV0dXJuIHRvLXJlbSh0by1weCgkcHgpIC8gdG8tcHgoJGZvbnQtc2l6ZS0tYmFzZSkpO1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgcHggdmFsdWUgZnJvbSBmcm9tIGEgcmVtIHZhbHVlXG4gKiBAcGFyYW0gIHtpbnR9ICAgJHJlbTogZGVzaXJlZCBwaXhlbCB2YWx1ZVxuICovXG5AZnVuY3Rpb24gcmVtLXRvLXB4KCRyZW0pIHtcbiAgQHJldHVybiB0by1weChzdHJpcC11bml0cygkcmVtKSAqICRmb250LXNpemUtLWJhc2UpO1xufVxuLyoqXG4gKiBhZGRzIHRoZSBlbSB1bml0IHRvIHRoZSB2YWx1ZVxuICogQHBhcmFtICB7ZmxvYXR9ICAgJHZhbDogZGVzaXJlZCBlbSB2YWx1ZVxuICovXG5AZnVuY3Rpb24gdG8tZW0oJHZhbCkge1xuICBAcmV0dXJuICgkdmFsICogMWVtKTsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZVxufVxuLyoqXG4gKiBhZGRzIHRoZSByZW0gdW5pdCB0byB0aGUgdmFsdWVcbiAqIEBwYXJhbSAge2Zsb2F0fSAgICR2YWw6IGRlc2lyZWQgcmVtIHZhbHVlXG4gKi9cbkBmdW5jdGlvbiB0by1yZW0oJHZhbCkge1xuICBAcmV0dXJuICgkdmFsICogMXJlbSk7IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmVcbn1cbi8qKlxuICogYWRkcyB0aGUgZW0gdW5pdHkgdG8gdGhlIHZhbHVlXG4gKiBAcGFyYW0gIHtmbG9hdH0gICAkcHg6IGRlc2lyZWQgZW0gdmFsdWVcbiAqL1xuQGZ1bmN0aW9uIHRvLXB4KCR2YWwpIHtcbiAgQHJldHVybiAoJHZhbCAqIDFweCk7IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmVcbn1cbi8qKlxuICogY2FsY3VsYXRlIHRoZSByZWxhdGl2ZSB2YWx1ZSBmb3IgbGluZSBoZWlnaHQgb3V0IG9mIHRoZSBwaXhlbCB2YWx1ZVxuICogQHBhcmFtICB7aW50fSAgICRweDogZGVzaXJlZCBwaXhlbCB2YWx1ZVxuICogQHBhcmFtIHtpbnR9ICAgICRmb250LXNpemU6IHRoZSByZWZlcmVuY2UgZm9udC1zaXplIHZhbHVlIGluIHB4XG4gKi9cbkBmdW5jdGlvbiBweC10by1saCgkcHgsICRmb250LXNpemU6ICRmb250LXNpemUtLWJhc2UpIHtcbiAgQHJldHVybiAoc3RyaXAtdW5pdHMoJHB4KSAvIHN0cmlwLXVuaXRzKCRmb250LXNpemUpKTtcbn1cblxuLyoqXG4gKiBjaGVjayBpZiB0aGUgdmFsdWUgb2YgdGhlIHZhcmlhYmxlIGlzIG51bGwuXG4gKiBOb3RlOiB1c2VkIGZvciBjb25kaXRpb25hbCByZW5kZXJpbmcgaW4gdGhlIGZyYW1ld29ya1xuICovXG5AZnVuY3Rpb24gaGFzKCR2YXIpIHtcbiAgQHJldHVybiAkdmFyICE9ICRzYXNzLW51bGw7XG59XG4iLCIvKipcbiAqIEhlbHBzIHRvIGhpZGUgdGhlIGVsZW1lbnQgdmlzdWFsbHksIGJ1dCBub3QgZm9yIHNjcmVlbiByZWFkZXJzXG4gKi9cbkBtaXhpbiB2aXN1YWxseS1oaWRkZW4oKSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxcHg7XG5cbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKipcbiAqIEhlbHBzIHRvIGhpZGUgdGhlIGVsZW1lbnQgdmlzdWFsbHksIGJ1dCBub3QgZm9yIHNjcmVlbiByZWFkZXJzXG4gKi9cbkBtaXhpbiB2aXN1YWxseS1oaWRkZW4oKSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxcHg7XG5cbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKipcbiAqIFNldHMgOmhvdmVyIGFuZCA6YWN0aXZlIHN0eWxlIGJhc2VkIG9uIEBtZWRpYSAoaG92ZXI6IGhvdmVyKVxuICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYXQtcnVsZS1uYW1lLW5ld2xpbmUtYWZ0ZXIgKi9cbkBtaXhpbiBpbnRlcmFjdGlvblN0eWxlKFxuICAkcHJvcGVydHk6IGNvbG9yLFxuICAkdmFsdWU6ICcnLFxuICAkdmFsdWVIb3ZlcjogJHZhbHVlLFxuICAkdmFsdWVBY3RpdmU6ICR2YWx1ZVxuKSB7XG4gICN7JHByb3BlcnR5fTogJHZhbHVlO1xuXG4gICY6aG92ZXIge1xuICAgIC8vIHByZXZlbnQgdmFsdWUgYmVlaW5nIHNldCBkaWZmZXJlbnRseSBvbiBob3ZlciBvbiB0b3VjaCBkZXZpY2VzIChlLmcuIGJ5IGJvb3RzdHJhcClcbiAgICAjeyRwcm9wZXJ0eX06ICR2YWx1ZTtcblxuICAgIEBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gICAgICAjeyRwcm9wZXJ0eX06ICR2YWx1ZUhvdmVyO1xuICAgIH1cbiAgfVxuXG4gICY6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlIHtcbiAgICAjeyRwcm9wZXJ0eX06ICR2YWx1ZUFjdGl2ZTtcbiAgfVxufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICNUWVBPR1JBUEhZXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqICBQaG9uZSAtIHN0YW5kYXJkIGRlZmluZWQgaW4gYHV0aWxzL3NldHRpbmdzYFxuICovXG4gJHR5cG9ncmFwaHktLXBob25lOiAoXG4gIGRlZmF1bHQ6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLW0pLFxuICApLFxuICBoZWFkaW5nOiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0taGVhZGluZyxcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LS1oZWFkaW5nLFxuICApLFxuICBidXR0b246IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXMpLFxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtLW0sXG4gICksXG4gIGlucHV0OiAoKSxcbiAgdGl0bGU6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhtKSxcbiAgKSxcbiAgaDE6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXh4bC1wKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS1zLFxuICApLFxuICBoMjogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteGwpLFxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtLXhtLFxuICApLFxuICBoMzogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteGwtcCksXG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC0tbSxcbiAgKSxcbiAgaDQ6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhtKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS14bSxcbiAgKSxcbiAgbGVhZDogKFxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktLWJhc2UsXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS14bCksXG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC0tYmFzZSxcbiAgKSxcbiAgcDogKFxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktLWxpZ2h0LFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbSksXG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC0tbGlnaHQsXG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC0tcyxcbiAgKSxcbiAgbGlua0lubGluZTogKFxuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtLWJhc2UtYm9sZCxcbiAgKSxcbiAgcGlsbHM6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXMpLFxuICApLFxuICB0ZWFzZXJGb3JtTGVhZmxldHNUaXRsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbCksXG4gICksXG4gIG5hdk1haW46IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXMpLFxuICApLFxuICBuYXZTZXJ2aWNlRGVza3RvcDogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtcyksXG4gICksXG4gIG5hdk1haW5MaWdodFRleHQ6IChcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LS1saWdodCxcbiAgKSxcbiAgbmF2TWFpbk1haW5UZXh0OiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tYm9sZCxcbiAgKSxcbiAgbmF2TWFpbkZseW91dFRpdGxlOiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tYmFzZSxcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhtKSxcbiAgKSxcbiAgbmF2TGFuZ3VhZ2VUcmlnZ2VyQWN0aXZlOiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tYm9sZCxcbiAgKSxcbiAgbmF2TWFpbk1vYmlsZUJvbGQ6IChcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LS1ib2xkLFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtcyksXG4gICksXG4gIG5hdk1haW5Nb2JpbGVUZXh0OiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1zKSxcbiAgKSxcbiAgbmF2U2VydmljZU1vYmlsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteHMpLFxuICApLFxuICBuYXZNYWluTW9iaWxlSGVhZGVyOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1zKSxcbiAgKSxcbiAgbGlua0J1dHRvbjogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtcyksXG4gICksXG4gIGxpbmtCdXR0b25CaWc6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLW0pLFxuICApLFxuICB0ZWFzZXJOYXZUZXh0VGl0bGU6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhtKSxcbiAgKSxcbiAgdGVhc2VyTmF2VGV4dFBhcmFncmFwaDogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtcyksXG4gICksXG4gIHRlYXNlck5hdkljb25UaXRsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtcyksXG4gICksXG4gIHRlYXNlck5ld3NNZXRhOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1zKSxcbiAgKSxcbiAgdGVhc2VyTmV3c1RpdGxlOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS14bSksXG4gICksXG4gIGFjY29yZGlvblRpdGxlOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS14bSksXG4gICksXG4gIGNhcHRpb246IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXMpLFxuICApLFxuKTtcblxuLyoqXG4gKiAgVGFibGV0IHBvcnRyYWl0XG4gKi9cbiR0eXBvZ3JhcGh5LS10YWJsZXQtcG9ydHJhaXQ6IChcbiAgdGl0bGU6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhsKSxcbiAgKSxcbiAgaDE6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXh4eGwpLFxuICApLFxuICBoMjogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteGwpLFxuICApLFxuICBoMzogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteGwtcCksXG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC0teG0sXG4gICksXG4gIGg0OiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1sKSxcbiAgKSxcbiAgbGVhZDogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbCksXG4gICksXG4gIG5hdk1haW5GbHlvdXRUaXRsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbCksXG4gICksXG4gIHRlYXNlck5hdlRleHRUaXRsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbCksXG4gICksXG4gIHRlYXNlck5hdlRleHRQYXJhZ3JhcGg6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLW0pLFxuICApLFxuICB0ZWFzZXJOYXZJY29uVGl0bGU6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLW0pLFxuICApLFxuICB0ZWFzZXJOZXdzTWV0YTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbSksXG4gICksXG4gIHRlYXNlck5ld3NUaXRsZTogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUtbCksXG4gICksXG4gIGFjY29yZGlvblRpdGxlOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1sKSxcbiAgKSxcbik7XG5cbi8qKlxuICogIFRhYmxldCBsYW5kc2NhcGVcbiAqL1xuJHR5cG9ncmFwaHktLXRhYmxldC1sYW5kc2NhcGU6IChcbiAgaDI6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXh4bCksXG4gICksXG4pO1xuXG4vKipcbiAqICBEZXNrdG9wXG4gKi9cbiR0eXBvZ3JhcGh5LS1kZXNrdG9wOiAoXG4gIGgxOiAoXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS14eHhsKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS1zLFxuICApLFxuICBoMjogKFxuICAgIGZvbnQtc2l6ZTogcHgtdG8tcmVtKCRmb250LXNpemUteHhsKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS14bSxcbiAgKSxcbiAgaDM6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhsKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS14bSxcbiAgKSxcbiAgaDQ6IChcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhtKSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LS1zLFxuICApLFxuICBsZWFkOiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tYmFzZSxcbiAgICBmb250LXNpemU6IHB4LXRvLXJlbSgkZm9udC1zaXplLXhsKSxcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LS1iYXNlLFxuICApLFxuICBwOiAoXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tbGlnaHQsXG4gICAgZm9udC1zaXplOiBweC10by1yZW0oJGZvbnQtc2l6ZS1tKSxcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LS1saWdodCxcbiAgKSxcbik7XG5cbi8qKlxuICogRGVza3RvcCBiaWdcbiAqL1xuJHR5cG9ncmFwaHktLWRlc2t0b3AtYmlnOiAoKTtcblxuLy8gZGlhbG9nLXR5cG8gaXMgYSBkZXBlbmRlbmN5LCBkb24ndCB0b3VjaCB0aGlzISBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PW90Q3BDbjBsNFdvXG4kZGlhbG9nLXR5cG86IChcbiAgcGhvbmU6ICR0eXBvZ3JhcGh5LS1waG9uZSxcbiAgdGFibGV0LXBvcnRyYWl0OiAkdHlwb2dyYXBoeS0tdGFibGV0LXBvcnRyYWl0LFxuICB0YWJsZXQtbGFuZHNjYXBlOiAkdHlwb2dyYXBoeS0tdGFibGV0LWxhbmRzY2FwZSxcbiAgZGVza3RvcDogJHR5cG9ncmFwaHktLWRlc2t0b3AsXG4gIGRlc2t0b3AtYmlnOiAkdHlwb2dyYXBoeS0tZGVza3RvcC1iaWcsXG4pO1xuIiwiLyoqXG4gKiBNYXAgZm9yIGFsbCBkdXJhdGlvbnMgdXNlZCBpbiB0aGUgcHJvamVjdFxuICovXG4kc3BlZWRzOiAoXG4gIGhvdmVyOiAyNTBtcyxcbiAgYmFja2dyb3VuZDogNjUwbXMsXG4gIHBhZ2VTbGlkZTogMXMsXG4pO1xuXG4vKipcbiAqIGZ1bmN0aW9uIHRvIGdldCB0aGUgdmFsdWVzIG9mIHRoZSBkdXJhdGlvbnMgbWFwXG4gKi9cbkBmdW5jdGlvbiBzcGVlZCgka2V5OiBob3Zlcikge1xuICBAaWYgbm90IG1hcC1oYXMta2V5KCRzcGVlZHMsICRrZXkpIHtcbiAgICBAZXJyb3IgJ1Vua25vd24gZHVyYXRpb24ga2V5OiBgI3ska2V5fWAuJztcbiAgfVxuXG4gIEByZXR1cm4gbWFwLWdldCgkc3BlZWRzLCAka2V5KTtcbn1cbiIsIi8qKlxuICogTWFwIGZvciBhbGwgZWFzaW5ncyB1c2VkIGluIHRoZSBwcm9qZWN0XG4gKi9cbiRlYXNpbmdzOiAoXG4gIGNvbG9yOiBlYXNlLFxuICBvcGFjaXR5OiBjdWJpYy1iZXppZXIoMCwgMCwgMC4zLCAxKSxcbiAgb3BlbjogY3ViaWMtYmV6aWVyKDAuNTIsIDAuMDEsIDAuMTYsIDEpLFxuKTtcblxuLyoqXG4gKiBmdW5jdGlvbiB0byBnZXQgdGhlIHZhbHVlcyBvZiB0aGUgZWFzaW5ncyBtYXBcbiAqL1xuQGZ1bmN0aW9uIGVhc2luZygka2V5OiBjb2xvcikge1xuICBAaWYgbm90IG1hcC1oYXMta2V5KCRlYXNpbmdzLCAka2V5KSB7XG4gICAgQGVycm9yICdVbmtub3duIGVhc2luZyBrZXk6IGAjeyRrZXl9YC4nO1xuICB9XG5cbiAgQHJldHVybiBtYXAtZ2V0KCRlYXNpbmdzLCAka2V5KTtcbn1cbiIsIi8qIHN0eWxlbGludC1kaXNhYmxlICovXG4vLyB0b28gbG9uZyBpY29uIHBhdGhzXG4kbWludXM6ICdkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NEtQQ0V0TFNCSFpXNWxjbUYwYjNJNklFRmtiMkpsSUVsc2JIVnpkSEpoZEc5eUlERTRMakV1TUN3Z1UxWkhJRVY0Y0c5eWRDQlFiSFZuTFVsdUlDNGdVMVpISUZabGNuTnBiMjQ2SURZdU1EQWdRblZwYkdRZ01Da2dJQzB0UGdvOGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa1ZpWlc1bFh6RWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SWdlRzFzYm5NNmVHeHBibXM5SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zaUlIZzlJakJ3ZUNJZ2VUMGlNSEI0SWdvZ0lDQjNhV1IwYUQwaU1qVndlQ0lnYUdWcFoyaDBQU0kxY0hnaUlIWnBaWGRDYjNnOUlpMHpOVElnTWpVMUxqa3hJREkxSURVaUlHVnVZV0pzWlMxaVlXTnJaM0p2ZFc1a1BTSnVaWGNnTFRNMU1pQXlOVFV1T1RFZ01qVWdOU0lnZUcxc09uTndZV05sUFNKd2NtVnpaWEoyWlNJK0NqeG5JR2xrUFNKTmFXNTFjeUkrQ2lBZ1BHYytDaUFnSUNBOGNHRjBhQ0JtYVd4c1BTSWpOREEwTURRd0lpQmtQU0pOTFRNMU1pd3lOVFV1T1RGb01qVjJOV2d0TWpWV01qVTFMamt4ZWlJdlBnb2dJRHd2Wno0S1BDOW5QZ284TDNOMlp6NEsnO1xuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuIiwiLyogbWFyZ2luIHZlcnRpY2FsIG5vbmUgKi9cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLW5vbmUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbm9uZSB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tYm90dG9tLS1ub25lIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLyogbWFyZ2luIHZlcnRpY2FsIHhzICovXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXZlcnRpY2FsLS14eHMge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS1tKTtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0tbSk7XG59XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdG9wLS14eHMge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS1tKTtcbn1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXh4cyB7XG4gIG1hcmdpbi1ib3R0b206IHB4LXRvLXJlbSgkc3BhY2UtLW0pO1xufVxuXG4vKiBtYXJnaW4gdmVydGljYWwgeHMgKi9cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLXhzIHtcbiAgbWFyZ2luLXRvcDogcHgtdG8tcmVtKCRzcGFjZS0teG0pO1xuICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS14bSk7XG59XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdG9wLS14cyB7XG4gIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXhtKTtcbn1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXhzIHtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teG0pO1xufVxuXG4vKiBtYXJnaW4gdmVydGljYWwgcyAqL1xuLmxheW91dC1oZWxwZXJfX21hcmdpbi12ZXJ0aWNhbC0tcyB7XG4gIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXhtKTtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teG0pO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14eG0pO1xuICAgIG1hcmdpbi1ib3R0b206IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSk7XG4gIH1cbn1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLXMge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14bSk7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0Jykge1xuICAgIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSk7XG4gIH1cbn1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi1ib3R0b20tLXMge1xuICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS14bSk7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0Jykge1xuICAgIG1hcmdpbi1ib3R0b206IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSk7XG4gIH1cbn1cblxuLyogbWFyZ2luIHZlcnRpY2FsIG0gKi9cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLW0ge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14eG0pO1xuICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS14eG0pO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS1sKTtcbiAgICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS1sKTtcbiAgfVxufVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbSB7XG4gIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSk7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0Jykge1xuICAgIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLWwpO1xuICB9XG59XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tYm90dG9tLS1tIHtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teHhtKTtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCd0YWJsZXQnKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0tbCk7XG4gIH1cbn1cblxuLyogbWFyZ2luIHZlcnRpY2FsIGwgKi9cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tdmVydGljYWwtLWwge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS1sKTtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0tbCk7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0Jykge1xuICAgIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXh4bCk7XG4gICAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teHhsKTtcbiAgfVxufVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLXRvcC0tbCB7XG4gIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLWwpO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14eGwpO1xuICB9XG59XG5cbi5sYXlvdXQtaGVscGVyX19tYXJnaW4tYm90dG9tLS1sIHtcbiAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teGwpO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS14eGwpO1xuICB9XG59XG5cbi8qIG1hcmdpbiB2ZXJ0aWNhbCB4bCAqL1xuLmxheW91dC1oZWxwZXJfX21hcmdpbi12ZXJ0aWNhbC0teGwge1xuICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14bCk7XG4gIG1hcmdpbi1ib3R0b206IHB4LXRvLXJlbSgkc3BhY2UtLXhsKTtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCd0YWJsZXQnKSB7XG4gICAgbWFyZ2luLXRvcDogcHgtdG8tcmVtKCRzcGFjZS0teHh4bCk7XG4gICAgbWFyZ2luLWJvdHRvbTogcHgtdG8tcmVtKCRzcGFjZS0teHh4bCk7XG4gIH1cbn1cblxuLmxheW91dC1oZWxwZXJfX21hcmdpbi10b3AtLXhsIHtcbiAgbWFyZ2luLXRvcDogcHgtdG8tcmVtKCRzcGFjZS0teGwpO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW4tdG9wOiBweC10by1yZW0oJHNwYWNlLS14eHhsKTtcbiAgfVxufVxuXG4ubGF5b3V0LWhlbHBlcl9fbWFyZ2luLWJvdHRvbS0teGwge1xuICBtYXJnaW4tYm90dG9tOiBweC10by1yZW0oJHNwYWNlLS14bCk7XG5cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0Jykge1xuICAgIG1hcmdpbi1ib3R0b206IHB4LXRvLXJlbSgkc3BhY2UtLXh4eGwpO1xuICB9XG59XG4iLCIudmlzdWFsbHktaGlkZGVuIHtcbiAgQGluY2x1ZGUgdmlzdWFsbHktaGlkZGVuKCk7XG59XG4iLCIvKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbnVsLFxucCB7XG4gIG1hcmdpbjogMDtcbn1cblxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5hLFxuYTp2aXNpdGVkIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbm9sLFxudWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmJ1dHRvbixcbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuYnV0dG9uLFxuaW5wdXRbdHlwZT0ncmVzZXQnXSxcbmlucHV0W3R5cGU9J2J1dHRvbiddLFxuaW5wdXRbdHlwZT0nc3VibWl0J10ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgYm9yZGVyOiAwO1xuICBmb250OiBpbmhlcml0O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBpbmhlcml0O1xuICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAwO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLy8gcmVtb3ZlIHdoaXRlc3BhY2UgdW5kZXIgaW1hZ2Vcbi8vaHR0cHM6Ly9nZXRwb2NrZXQuY29tL2EvcmVhZC82NjczNzc4MTZcbmltZyxcbnN2ZyB7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbn1cblxuLy8gcmVtb3ZlIHNhZmFyaSByb3VuZGVkIGlucHV0c1xuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwO1xufVxuXG4vLyBkaXNwbGF5IGNoZWNrYm94IG9uIHNhZmFyaVxuaW5wdXRbdHlwZT0nY2hlY2tib3gnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogY2hlY2tib3g7XG59XG5cbi8vUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmRhdGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8vIHN2ZyBpbmhlcml0aW5nIGNvbG9yXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xufVxuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuIiwiLyoqXG4gKiBCYXNlXG4gKi9cblxuLy8gIEBmb250LWZhY2Uge1xuLy8gICBmb250LWZhbWlseTogRnJ1dGlnZXIgTFQgVzAxXzU1IFJvbWFuO1xuLy8gICBzcmM6IHVybCgnLi4vZm9udHMvMDgxMTUxNGUtNjY2MC00MDQzLTkyYzEtMjNkMGI4Y2FhYTJmLndvZmYyJylcbi8vICAgICAgIGZvcm1hdCgnd29mZjInKSxcbi8vICAgICB1cmwoJy4uL2ZvbnRzL2FlYWU4Y2FjLWJhNGQtNDBkMi1iYmNmLTkzNmYyYzdkY2ZlNi53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4vLyB9XG4vLyBAZm9udC1mYWNlIHtcbi8vICAgZm9udC1mYW1pbHk6IEZydXRpZ2VyIExUIFcwMV82NSBCb2xkO1xuLy8gICBzcmM6IHVybCgnLi4vZm9udHMvZWRlMDExNDctNTU4MS00ZDI4LWFmYzAtMzAzZjRjNzcxZmQyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbi8vICAgICB1cmwoJy4uL2ZvbnRzLzYzNTQxYTg3LWVmZmItNGIyMy1hMWU1LWFkZWQ2ZWY4ZTMzZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKTtcbi8vIH1cbi8vIEBmb250LWZhY2Uge1xuLy8gICBmb250LWZhbWlseTogRnJ1dGlnZXIgTFQgVzAxXzQ1IExpZ2h0O1xuLy8gICBzcmM6IHVybCgnLi4vZm9udHMvMWY1ZWIzOTktM2ZlMi00YTg4LTk0NmQtMTYyMWM4MWRhODc3LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbi8vICAgICB1cmwoJy4uL2ZvbnRzLzkzYjdkMDI4LTI4ZjMtNDczYS04MjFmLTdhMTM5YzU5MzA1YS53b2ZmMicpIGZvcm1hdCgnd29mZjInKTtcbi8vIH1cblxuaHRtbCB7XG4gIGNvbG9yOiAkY29sb3ItLXRleHQ7XG4gIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS0tYmFzZSAvIDE2ICogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tYmFzZTtcbiAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC0tYmFzZTtcbn1cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5wIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS0tbGlnaHQ7XG4gIG1hcmdpbjogcHgtdG8tcmVtKCRzcGFjZS0tbSkgMDtcbiAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC0tbGlnaHQ7XG4gIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQtLWw7XG59XG5cbmIsXG5zdHJvbmcge1xuICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5LS1ib2xkO1xuICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LS1iYXNlO1xufVxuXG51bCxcbm9sIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDYyJTtcbn1cbiIsIlxuXG4vLyBDTEFTU0VTXG4uZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtZ2FwOiAxMHB4O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCBbY29sXSAyNSUgKSA7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIFtyb3ddIGF1dG8gICk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGNvbG9yOiAjNDQ0O1xufVxuXG4ubG9nbyB7XG4gIGdyaWQtY29sdW1uOiBjb2wgLyBzcGFuIDE7XG4gIGdyaWQtcm93OiByb3cgO1xuICBiYWNrZ3JvdW5kOiBsaWdodGJsdWVcbn1cbi5oZWFkZXIge1xuICBncmlkLWNvbHVtbjogY29sIDIgLyBzcGFuIDMgO1xuICBncmlkLXJvdzogcm93IDtcbiAgYmFja2dyb3VuZDogbGlnaHRjb3JhbDtcbn1cbi5zaWRlYmFyIHtcbiAgZ3JpZC1jb2x1bW46IGNvbCA7XG4gIGdyaWQtcm93OiByb3cgMiA7XG4gIGJhY2tncm91bmQ6IGxpZ2h0Z29sZGVucm9keWVsbG93XG59XG4ubWFpbiB7XG4gIGdyaWQtY29sdW1uOiBjb2wgMiAvIHNwYW4gMyA7XG4gIGdyaWQtcm93OiByb3cgMiA7XG4gIGJhY2tncm91bmQ6IGxpZ2h0Z3JlZW5cbn1cblxuLmZvb3RlciB7XG4gIGdyaWQtY29sdW1uOiBjb2wgLyBzcGFuIDQ7XG4gIGdyaWQtcm93OiByb3cgMztcbiAgYmFja2dyb3VuZDogbGlnaHRzYWxtb247XG59XG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gI0hFQURFUlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5oZWFkZXIge1xuICBoMiB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG4iLCIuZGV2IHtcbiAgJjphZnRlciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IHoob3ZlcmxheSk7XG5cbiAgICBtaW4td2lkdGg6IHB4LXRvLXJlbSgzNik7XG4gICAgbWluLWhlaWdodDogcHgtdG8tcmVtKDM2KTtcbiAgICBwYWRkaW5nOiBweC10by1yZW0oJHNwYWNlLS14eHMpIHB4LXRvLXJlbSgkc3BhY2UtLXhzKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLW9yYW5nZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuQGluY2x1ZGUgYnJlYWtwb2ludCgncGhvbmUnLCAnb25seScpIHtcbiAgYm9keTphZnRlciB7XG4gICAgY29udGVudDogJ3hzJztcbiAgfVxufVxuQGluY2x1ZGUgYnJlYWtwb2ludCgndGFibGV0LXBvcnRyYWl0Jykge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAnc20nO1xuICB9XG59XG5AaW5jbHVkZSBicmVha3BvaW50KCd0YWJsZXQtbGFuZHNjYXBlJykge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAnbWQnO1xuICB9XG59XG5AaW5jbHVkZSBicmVha3BvaW50KCdkZXNrdG9wJykge1xuICBib2R5OmFmdGVyIHtcbiAgICBjb250ZW50OiAnbGcnO1xuICB9XG59XG5AaW5jbHVkZSBicmVha3BvaW50KCdkZXNrdG9wLWJpZycpIHtcbiAgYm9keTphZnRlciB7XG4gICAgY29udGVudDogJ3hsJztcbiAgfVxufVxuIiwiLyoqXG4gKiBHbG9iYWxzXG4gKi9cblxuLy8gdHJhbnNpdGlvbnNcbiRidXR0b24tLXRyYW5zaXRpb24tZHVyYXRpb246IHNwZWVkKCk7XG4kYnV0dG9uLS10cmFuc2l0aW9uLXByb3BlcnRpZXM6IGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yO1xuJGJ1dHRvbi0tdHJhbnNpdGlvbi1lYXNpbmc6IGVhc2luZygpO1xuXG4vKipcbiAqIFByaW1hcnlcbiAqL1xuXG4vLyB0eXBvIC0gaWYgeW91IGNoYW5nZSB0aGlzLCBkb24ndCBmb3JnZXQgdG8gY2hhbmdlIGl0IGluIGBjc3MvdXRpbHMvX3R5cG9ncmFwaHkuc2Nzc2BcbiRidXR0b24tcHJpbWFyeS0tZm9udC1zaXplOiAkZm9udC1zaXplLS1iYXNlO1xuXG4vLyBwYWRkaW5nXG4kYnV0dG9uLXByaW1hcnktLWhvcml6b250YWwtcGFkZGluZzogcHgtdG8tZW0oMTIsICRidXR0b24tcHJpbWFyeS0tZm9udC1zaXplKTtcbiRidXR0b24tcHJpbWFyeS0tdmVydGljYWwtcGFkZGluZzogcHgtdG8tZW0oMTYsICRidXR0b24tcHJpbWFyeS0tZm9udC1zaXplKTtcblxuLy8gY29sb3JzXG4kYnV0dG9uLXByaW1hcnktLWNvbG9yOiAkY29sb3ItLXByaW1hcnk7XG4kYnV0dG9uLXByaW1hcnktLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0td2hpdGU7XG4kYnV0dG9uLXByaW1hcnktLWJvcmRlci1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuXG4vLyBob3ZlclxuJGJ1dHRvbi1wcmltYXJ5LS1ob3Zlci1jb2xvcjogJGNvbG9yLS13aGl0ZTtcbiRidXR0b24tcHJpbWFyeS0taG92ZXItYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuJGJ1dHRvbi1wcmltYXJ5LS1ob3Zlci1ib3JkZXItY29sb3I6ICRjb2xvci0tcHJpbWFyeTtcblxuLy8gYWN0aXZlXG4kYnV0dG9uLXByaW1hcnktLWFjdGl2ZS1jb2xvcjogJGNvbG9yLS13aGl0ZTtcbiRidXR0b24tcHJpbWFyeS0tYWN0aXZlLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0tcHJpbWFyeTtcbiRidXR0b24tcHJpbWFyeS0tYWN0aXZlLWJvcmRlci1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuXG4vLyBmb2N1c1xuJGJ1dHRvbi1wcmltYXJ5LS1mb2N1cy1jb2xvcjogbnVsbDtcbiRidXR0b24tcHJpbWFyeS0tZm9jdXMtYmFja2dyb3VuZC1jb2xvcjogbnVsbDtcbiRidXR0b24tcHJpbWFyeS0tZm9jdXMtYm9yZGVyLWNvbG9yOiBudWxsO1xuXG4vLyBkaXNhYmxlZFxuJGJ1dHRvbi1wcmltYXJ5LS1kaXNhYmxlZC1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC10ZXh0O1xuJGJ1dHRvbi1wcmltYXJ5LS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLWJhY2tncm91bmQ7XG4kYnV0dG9uLXByaW1hcnktLWRpc2FibGVkLWJvcmRlci1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC1ib3JkZXI7XG5cbi8vIGJvcmRlcnNcbiRidXR0b24tcHJpbWFyeS0tYm9yZGVyLXJhZGl1czogMDtcbiRidXR0b24tcHJpbWFyeS0tYm9yZGVyLXdpZHRoOiAycHg7XG5cbi8qKlxuICogU2Vjb25kYXJ5XG4gKi9cblxuLy8gdHlwbyAtIGlmIHlvdSBjaGFuZ2UgdGhpcywgZG9uJ3QgZm9yZ2V0IHRvIGNoYW5nZSBpdCBpbiBgY3NzL3V0aWxzL190eXBvZ3JhcGh5LnNjc3NgXG4kYnV0dG9uLXNlY29uZGFyeS0tZm9udC1zaXplOiAkZm9udC1zaXplLS1iYXNlO1xuXG4vLyBwYWRkaW5nXG4kYnV0dG9uLXNlY29uZGFyeS0taG9yaXpvbnRhbC1wYWRkaW5nOiBweC10by1lbShcbiAgOCxcbiAgJGJ1dHRvbi1zZWNvbmRhcnktLWZvbnQtc2l6ZVxuKTtcbiRidXR0b24tc2Vjb25kYXJ5LS12ZXJ0aWNhbC1wYWRkaW5nOiBweC10by1lbSgxMiwgJGJ1dHRvbi1zZWNvbmRhcnktLWZvbnQtc2l6ZSk7XG5cbi8vIGNvbG9yc1xuJGJ1dHRvbi1zZWNvbmRhcnktLWNvbG9yOiAkY29sb3ItLXNlY29uZGFyeTtcbiRidXR0b24tc2Vjb25kYXJ5LS1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLXdoaXRlO1xuJGJ1dHRvbi1zZWNvbmRhcnktLWJvcmRlci1jb2xvcjogJGNvbG9yLS1zZWNvbmRhcnk7XG5cbi8vIGhvdmVyXG4kYnV0dG9uLXNlY29uZGFyeS0taG92ZXItY29sb3I6ICRjb2xvci0td2hpdGU7XG4kYnV0dG9uLXNlY29uZGFyeS0taG92ZXItYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLS1zZWNvbmRhcnk7XG4kYnV0dG9uLXNlY29uZGFyeS0taG92ZXItYm9yZGVyLWNvbG9yOiAkY29sb3ItLXNlY29uZGFyeTtcblxuLy8gYWN0aXZlXG4kYnV0dG9uLXNlY29uZGFyeS0tYWN0aXZlLWNvbG9yOiAkY29sb3ItLXdoaXRlO1xuJGJ1dHRvbi1zZWNvbmRhcnktLWFjdGl2ZS1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLXNlY29uZGFyeTtcbiRidXR0b24tc2Vjb25kYXJ5LS1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkY29sb3ItLXNlY29uZGFyeTtcblxuLy8gZm9jdXNcbiRidXR0b24tc2Vjb25kYXJ5LS1mb2N1cy1jb2xvcjogbnVsbDtcbiRidXR0b24tc2Vjb25kYXJ5LS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOiBudWxsO1xuJGJ1dHRvbi1zZWNvbmRhcnktLWZvY3VzLWJvcmRlci1jb2xvcjogbnVsbDtcblxuLy8gZGlzYWJsZWRcbiRidXR0b24tc2Vjb25kYXJ5LS1kaXNhYmxlZC1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC10ZXh0O1xuJGJ1dHRvbi1zZWNvbmRhcnktLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0tZGlzYWJsZWQtYmFja2dyb3VuZDtcbiRidXR0b24tc2Vjb25kYXJ5LS1kaXNhYmxlZC1ib3JkZXItY29sb3I6ICRjb2xvci0tZGlzYWJsZWQtYm9yZGVyO1xuXG4vLyBib3JkZXJzXG4kYnV0dG9uLXNlY29uZGFyeS0tYm9yZGVyLXJhZGl1czogMDtcbiRidXR0b24tc2Vjb25kYXJ5LS1ib3JkZXItd2lkdGg6IDJweDtcblxuLmJ1dHRvbiB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6ICRidXR0b24tLXRyYW5zaXRpb24tcHJvcGVydGllcztcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJGJ1dHRvbi0tdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246ICRidXR0b24tLXRyYW5zaXRpb24tZWFzaW5nO1xuXG4gIC8qKlxuICAgKiAgUHJpbWFyeSBzdHlsZXNcbiAgICovXG4gICYtLXByaW1hcnkge1xuICAgIHBhZGRpbmc6ICRidXR0b24tcHJpbWFyeS0taG9yaXpvbnRhbC1wYWRkaW5nXG4gICAgICAkYnV0dG9uLXByaW1hcnktLXZlcnRpY2FsLXBhZGRpbmc7XG5cbiAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWJhY2tncm91bmQtY29sb3I7XG4gICAgfVxuICAgIEBpZiAoaGFzKCRidXR0b24tcHJpbWFyeS0tY29sb3IpKSB7XG4gICAgICBjb2xvcjogJGJ1dHRvbi1wcmltYXJ5LS1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1wcmltYXJ5LS1ib3JkZXItcmFkaXVzKSkge1xuICAgICAgYm9yZGVyLXJhZGl1czogJGJ1dHRvbi1wcmltYXJ5LS1ib3JkZXItcmFkaXVzO1xuICAgIH1cbiAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWJvcmRlci13aWR0aCkpIHtcbiAgICAgIGJvcmRlcjogJGJ1dHRvbi1wcmltYXJ5LS1ib3JkZXItd2lkdGggc29saWQgJGJ1dHRvbi1wcmltYXJ5LS1ib3JkZXItY29sb3I7XG4gICAgfVxuXG4gICAgJjpmb2N1cyB7XG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWZvY3VzLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZm9jdXMtYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1wcmltYXJ5LS1mb2N1cy1jb2xvcikpIHtcbiAgICAgICAgY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZm9jdXMtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIEBpZiAoaGFzKCRidXR0b24tcHJpbWFyeS0tZm9jdXMtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICBib3JkZXItY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZm9jdXMtYm9yZGVyLWNvbG9yO1xuICAgICAgfVxuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1wcmltYXJ5LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWhvdmVyLWJhY2tncm91bmQtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIEBpZiAoaGFzKCRidXR0b24tcHJpbWFyeS0taG92ZXItY29sb3IpKSB7XG4gICAgICAgIGNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWhvdmVyLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWhvdmVyLWJvcmRlci1jb2xvcikpIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWhvdmVyLWJvcmRlci1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmW2Rpc2FibGVkXSxcbiAgICAmW2Rpc2FibGVkXTpob3ZlciB7XG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1wcmltYXJ5LS1kaXNhYmxlZC1jb2xvcikpIHtcbiAgICAgICAgY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZGlzYWJsZWQtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIEBpZiAoaGFzKCRidXR0b24tcHJpbWFyeS0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICBib3JkZXItY29sb3I6ICRidXR0b24tcHJpbWFyeS0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIHByaW1hcnkgYWN0aXZlXG4gICYtLXByaW1hcnkuYnV0dG9uLS1hY3RpdmUsXG4gICYtLXByaW1hcnkuYnV0dG9uLS1hY3RpdmU6aG92ZXIge1xuICAgIEBpZiAoaGFzKCRidXR0b24tcHJpbWFyeS0tYWN0aXZlLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWFjdGl2ZS1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgIH1cbiAgICBAaWYgKGhhcygkYnV0dG9uLXByaW1hcnktLWFjdGl2ZS1jb2xvcikpIHtcbiAgICAgIGNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWFjdGl2ZS1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1wcmltYXJ5LS1hY3RpdmUtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgYm9yZGVyLWNvbG9yOiAkYnV0dG9uLXByaW1hcnktLWFjdGl2ZS1ib3JkZXItY29sb3I7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqICBTZWNvbmRhcnkgc3R5bGVzXG4gICAqL1xuICAmLS1zZWNvbmRhcnkge1xuICAgIHBhZGRpbmc6ICRidXR0b24tc2Vjb25kYXJ5LS1ob3Jpem9udGFsLXBhZGRpbmdcbiAgICAgICRidXR0b24tc2Vjb25kYXJ5LS12ZXJ0aWNhbC1wYWRkaW5nO1xuXG4gICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXNlY29uZGFyeS0tYmFja2dyb3VuZC1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWNvbG9yKSkge1xuICAgICAgY29sb3I6ICRidXR0b24tc2Vjb25kYXJ5LS1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWJvcmRlci1yYWRpdXMpKSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAkYnV0dG9uLXNlY29uZGFyeS0tYm9yZGVyLXJhZGl1cztcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWJvcmRlci13aWR0aCkpIHtcbiAgICAgIGJvcmRlcjogJGJ1dHRvbi1zZWNvbmRhcnktLWJvcmRlci13aWR0aFxuICAgICAgICBzb2xpZFxuICAgICAgICAkYnV0dG9uLXNlY29uZGFyeS0tYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgICY6Zm9jdXMge1xuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWZvY3VzLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tc2Vjb25kYXJ5LS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXNlY29uZGFyeS0tZm9jdXMtY29sb3IpKSB7XG4gICAgICAgIGNvbG9yOiAkYnV0dG9uLXNlY29uZGFyeS0tZm9jdXMtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIEBpZiAoaGFzKCRidXR0b24tc2Vjb25kYXJ5LS1mb2N1cy1ib3JkZXItY29sb3IpKSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJGJ1dHRvbi1zZWNvbmRhcnktLWZvY3VzLWJvcmRlci1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIEBpZiAoaGFzKCRidXR0b24tc2Vjb25kYXJ5LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXNlY29uZGFyeS0taG92ZXItYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWhvdmVyLWNvbG9yKSkge1xuICAgICAgICBjb2xvcjogJGJ1dHRvbi1zZWNvbmRhcnktLWhvdmVyLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXNlY29uZGFyeS0taG92ZXItYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICBib3JkZXItY29sb3I6ICRidXR0b24tc2Vjb25kYXJ5LS1ob3Zlci1ib3JkZXItY29sb3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJltkaXNhYmxlZF0sXG4gICAgJltkaXNhYmxlZF06aG92ZXIge1xuICAgICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tc2Vjb25kYXJ5LS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICBAaWYgKGhhcygkYnV0dG9uLXNlY29uZGFyeS0tZGlzYWJsZWQtY29sb3IpKSB7XG4gICAgICAgIGNvbG9yOiAkYnV0dG9uLXNlY29uZGFyeS0tZGlzYWJsZWQtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIEBpZiAoaGFzKCRidXR0b24tc2Vjb25kYXJ5LS1kaXNhYmxlZC1ib3JkZXItY29sb3IpKSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJGJ1dHRvbi1zZWNvbmRhcnktLWRpc2FibGVkLWJvcmRlci1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBzZWNvbmRhcnkgYWN0aXZlXG4gICYtLXNlY29uZGFyeS5idXR0b24tLWFjdGl2ZSxcbiAgJi0tc2Vjb25kYXJ5LmJ1dHRvbi0tYWN0aXZlOmhvdmVyIHtcbiAgICBAaWYgKGhhcygkYnV0dG9uLXNlY29uZGFyeS0tYWN0aXZlLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLXNlY29uZGFyeS0tYWN0aXZlLWJhY2tncm91bmQtY29sb3I7XG4gICAgfVxuICAgIEBpZiAoaGFzKCRidXR0b24tc2Vjb25kYXJ5LS1hY3RpdmUtY29sb3IpKSB7XG4gICAgICBjb2xvcjogJGJ1dHRvbi1zZWNvbmRhcnktLWFjdGl2ZS1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGJ1dHRvbi1zZWNvbmRhcnktLWFjdGl2ZS1ib3JkZXItY29sb3IpKSB7XG4gICAgICBib3JkZXItY29sb3I6ICRidXR0b24tc2Vjb25kYXJ5LS1hY3RpdmUtYm9yZGVyLWNvbG9yO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICNGT1JNQVRURUQgVEVYVCAoZS5nLiBmb3IgV1lTSVdZRy1FZGl0b3Jlbilcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4uI3skZm9ybWF0dGVkLXRleHQtY2xhc3N9IHtcbiAgJiA+ICoge1xuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZy1ib3R0b206IDFweDtcblxuICAgICY6ZW1wdHkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiIsIiRoZWFkaW5nLS1jb2xvcjogJGNvbG9yLS1ibGFjaztcblxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhlYWRpbmcsXG5oMSxcbmgyLFxuaDMsXG5oNCB7XG4gIEBpbmNsdWRlIHR5cG8oaGVhZGluZyk7XG4gIGNvbG9yOiAkY29sb3ItLWhlYWRpbmdzO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICBoeXBoZW5zOiBhdXRvO1xufVxuXG5cbmgxLFxuLmhlYWRpbmctLTEge1xuICBAaW5jbHVkZSB0eXBvKGgxKTtcbiAgbWFyZ2luOiAwIDAgcHgtdG8tcmVtKCRzcGFjZS0teG0pO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW46IDAgMCBweC10by1yZW0oJHNwYWNlLS14bSk7XG4gIH1cbn1cblxuaDIsXG4uaGVhZGluZy0tMiB7XG4gIEBpbmNsdWRlIHR5cG8oaDIpO1xuICBtYXJnaW46IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSkgMCBweC10by1yZW0oJHNwYWNlLS1tKTtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCd0YWJsZXQnKSB7XG4gICAgbWFyZ2luOiBweC10by1yZW0oJHNwYWNlLS1sKSAwIHB4LXRvLXJlbSgkc3BhY2UtLW0pO1xuICB9XG59XG5cbmgzLFxuLmhlYWRpbmctLTMge1xuICBAaW5jbHVkZSB0eXBvKGgzKTtcbiAgbWFyZ2luOiBweC10by1yZW0oJHNwYWNlLS14bSkgMCBweC10by1yZW0oJHNwYWNlLS1tKTtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KCd0YWJsZXQnKSB7XG4gICAgbWFyZ2luOiBweC10by1yZW0oJHNwYWNlLS14eG0pIDAgcHgtdG8tcmVtKCRzcGFjZS0tbSk7XG4gIH1cbn1cblxuaDQsXG4uaGVhZGluZy0tNCB7XG4gIEBpbmNsdWRlIHR5cG8oaDQpO1xuICBtYXJnaW46IHB4LXRvLXJlbSgkc3BhY2UtLXhtKSAwIHB4LXRvLXJlbSgkc3BhY2UtLW0pO1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJ3RhYmxldCcpIHtcbiAgICBtYXJnaW46IHB4LXRvLXJlbSgkc3BhY2UtLXh4bSkgMCBweC10by1yZW0oJHNwYWNlLS1tKTtcbiAgfVxufVxuXG4uaGVhZGluZy0tbm8tbWFyZ2luIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmhlYWRpbmctLW5vLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uaGVhZGluZy0tbm8tbWFyZ2luLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gI0lOUFVUU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyoqXG4gKiBHbG9iYWxzXG4gKi9cblxuLy8gdHlwbyAtIGlmIHlvdSBjaGFuZ2UgdGhpcywgZG9uJ3QgZm9yZ2V0IHRvIGNoYW5nZSBpdCBpbiBgY3NzL3V0aWxzL190eXBvZ3JhcGh5LnNjc3NgXG4kaW5wdXQtLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS0tYmFzZTtcblxuLy8gZ2VuZXJhbFxuJGlucHV0LS1kaXNwbGF5OiBibG9jaztcbiRpbnB1dC0tbWF4LXdpZHRoOiAxMDAlO1xuJGlucHV0LS1oZWlnaHQ6IG51bGw7XG5cbi8vIHBhZGRpbmdcbiRpbnB1dC0tcGFkZGluZy12ZXJ0aWNhbDogcHgtdG8tZW0oMTIsICRpbnB1dC0tZm9udC1zaXplKTtcbiRpbnB1dC0tcGFkZGluZy1ob3Jpem9udGFsOiBweC10by1lbSg4LCAkaW5wdXQtLWZvbnQtc2l6ZSk7XG5cbi8vIHRleHRhcmVhIHNwZWNpYWxzXG4kdGV4dGFyZWEtLWRpc3BsYXk6IGJsb2NrO1xuJHRleHRhcmVhLS13aWR0aDogMTAwJTtcbiR0ZXh0YXJlYS0taGVpZ2h0OiBudWxsO1xuJHRleHRhcmVhLS1wYWRkaW5nLXZlcnRpY2FsOiBweC10by1lbSgxMiwgJGlucHV0LS1mb250LXNpemUpO1xuJHRleHRhcmVhLS1wYWRkaW5nLWhvcml6b250YWw6IHB4LXRvLWVtKDgsICRpbnB1dC0tZm9udC1zaXplKTtcblxuLmlucHV0IHtcbiAgQGluY2x1ZGUgaW5wdXRTdHlsZXMoKTtcbiAgd2lkdGg6ICRpbnB1dC0tbWF4LXdpZHRoO1xuICBwYWRkaW5nOiAkaW5wdXQtLXBhZGRpbmctdmVydGljYWwgJGlucHV0LS1wYWRkaW5nLWhvcml6b250YWw7XG5cbiAgQGlmIChoYXMoJGlucHV0LS1oZWlnaHQpKSB7XG4gICAgaGVpZ2h0OiAkaW5wdXQtLWhlaWdodDtcbiAgfVxufVxuXG4udGV4dGFyZWEge1xuICBAaW5jbHVkZSBpbnB1dFN0eWxlcygpO1xuICBwYWRkaW5nOiAkdGV4dGFyZWEtLXBhZGRpbmctdmVydGljYWwgJHRleHRhcmVhLS1wYWRkaW5nLWhvcml6b250YWw7XG4gIHdpZHRoOiAkdGV4dGFyZWEtLXdpZHRoO1xuXG4gIEBpZiAoaGFzKCR0ZXh0YXJlYS0taGVpZ2h0KSkge1xuICAgIGhlaWdodDogJHRleHRhcmVhLS1oZWlnaHQ7XG4gIH1cbn1cblxuLnNlbGVjdCB7XG4gIEBpbmNsdWRlIGlucHV0U3R5bGVzKCk7XG4gIHdpZHRoOiAkaW5wdXQtLW1heC13aWR0aDtcblxuICBhcHBlYXJhbmNlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICRpbnB1dC0tcGFkZGluZy12ZXJ0aWNhbCAkaW5wdXQtLXBhZGRpbmctaG9yaXpvbnRhbDtcblxuICBAaWYgKGhhcygkaW5wdXQtLWhlaWdodCkpIHtcbiAgICBoZWlnaHQ6ICRpbnB1dC0taGVpZ2h0O1xuICB9XG59XG4iLCIkdHJhbnNpdGlvbi1wcm9wZXJ0aWVzOiBib3JkZXItY29sb3IsIGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yO1xuXG5AbWl4aW4gaW5wdXRTdHlsZXMoXG4gIC8vIGNvbG9yc1xuICAkaW5wdXQtLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0tZ3JleS1saWdodGVzdCxcbiAgJGlucHV0LS1wbGFjZWhvbGRlci1jb2xvcjogJGNvbG9yLS1ncmV5LFxuICAkaW5wdXQtLXRleHQtY29sb3I6ICRjb2xvci0tdGV4dCxcbiAgLy8gYm9yZGVyXG4gICRpbnB1dC0tYm9yZGVyLWNvbG9yOiAkY29sb3ItLWdyZXktbGlnaHQsXG4gICRpbnB1dC0tYm9yZGVyLXJhZGl1czogMCxcbiAgJGlucHV0LS1ib3JkZXItd2lkdGg6IDFweCxcbiAgLy8gaG92ZXJcbiAgJGlucHV0LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOiBudWxsLFxuICAkaW5wdXQtLWhvdmVyLWJvcmRlci1jb2xvcjogJGNvbG9yLS1ncmV5LWRhcmtlcixcbiAgJGlucHV0LS1ob3Zlci1wbGFjZWhvbGRlci1jb2xvcjogbnVsbCxcbiAgJGlucHV0LS1ob3Zlci10ZXh0LWNvbG9yOiBudWxsLFxuICAvLyBmb2N1c1xuICAkaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcjogJGNvbG9yLS1ncmV5LWRhcmtlcixcbiAgJGlucHV0LS1mb2N1cy10ZXh0LWNvbG9yOiBudWxsLFxuICAkaW5wdXQtLWZvY3VzLXBsYWNlaG9sZGVyLWNvbG9yOiBudWxsLFxuICAkaW5wdXQtLWZvY3VzLWJhY2tncm91bmQtY29sb3I6IG51bGwsXG4gIC8vIGRpc2FibGVkXG4gICRpbnB1dC0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLWJvcmRlcixcbiAgJGlucHV0LS1kaXNhYmxlZC10ZXh0LWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLXRleHQsXG4gICRpbnB1dC0tZGlzYWJsZWQtcGxhY2Vob2xkZXItY29sb3I6ICRjb2xvci0tZGlzYWJsZWQtdGV4dCxcbiAgJGlucHV0LS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLWJhY2tncm91bmQsXG4gIC8vIHRyYW5zaXRpb25zXG4gICRpbnB1dC0tdHJhbnNpdGlvbi1kdXJhdGlvbjogc3BlZWQoKSxcbiAgJGlucHV0LS10cmFuc2l0aW9uLWVhc2luZzogZWFzaW5nKCksXG4gICRpbnB1dC0tdHJhbnNpdGlvbi1wcm9wZXJ0aWVzOiAkdHJhbnNpdGlvbi1wcm9wZXJ0aWVzXG4pIHtcbiAgQGluY2x1ZGUgdHlwbyhpbnB1dCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC0tYmFja2dyb3VuZC1jb2xvcjtcbiAgYm9yZGVyOiBzb2xpZCAkaW5wdXQtLWJvcmRlci1jb2xvcjtcbiAgYm9yZGVyLXdpZHRoOiAkaW5wdXQtLWJvcmRlci13aWR0aDtcbiAgYm9yZGVyLXJhZGl1czogJGlucHV0LS1ib3JkZXItcmFkaXVzO1xuICBvdXRsaW5lOiBub25lO1xuXG4gIHRyYW5zaXRpb246ICRpbnB1dC0tdHJhbnNpdGlvbi1kdXJhdGlvbiAkaW5wdXQtLXRyYW5zaXRpb24tZWFzaW5nO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiAkaW5wdXQtLXRyYW5zaXRpb24tcHJvcGVydGllcztcblxuICBAaWYgKGhhcygkaW5wdXQtLXRleHQtY29sb3IpKSB7XG4gICAgY29sb3I6ICRpbnB1dC0tdGV4dC1jb2xvcjtcbiAgfVxuXG4gICY6OnBsYWNlaG9sZGVyIHtcbiAgICBAaWYgKGhhcygkaW5wdXQtLXBsYWNlaG9sZGVyLWNvbG9yKSkge1xuICAgICAgY29sb3I6ICRpbnB1dC0tcGxhY2Vob2xkZXItY29sb3I7XG5cbiAgICAgIHRyYW5zaXRpb246ICRpbnB1dC0tdHJhbnNpdGlvbi1kdXJhdGlvbiAkaW5wdXQtLXRyYW5zaXRpb24tZWFzaW5nO1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogJGlucHV0LS10cmFuc2l0aW9uLXByb3BlcnRpZXM7XG4gICAgfVxuICB9XG5cbiAgJjpob3ZlciB7XG4gICAgQGlmIChoYXMoJGlucHV0LS1ob3Zlci10ZXh0LWNvbG9yKSkge1xuICAgICAgY29sb3I6ICRpbnB1dC0taG92ZXItdGV4dC1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGlucHV0LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGlucHV0LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgIH1cbiAgICBAaWYgKGhhcygkaW5wdXQtLWhvdmVyLWJvcmRlci1jb2xvcikpIHtcbiAgICAgIGJvcmRlci1jb2xvcjogJGlucHV0LS1ob3Zlci1ib3JkZXItY29sb3I7XG4gICAgfVxuXG4gICAgJjo6cGxhY2Vob2xkZXIge1xuICAgICAgQGlmIChoYXMoJGlucHV0LS1ob3Zlci1wbGFjZWhvbGRlci1jb2xvcikpIHtcbiAgICAgICAgY29sb3I6ICRpbnB1dC0taG92ZXItcGxhY2Vob2xkZXItY29sb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgQGlmIChoYXMoJGlucHV0LS1mb2N1cy10ZXh0LWNvbG9yKSkge1xuICAgICAgY29sb3I6ICRpbnB1dC0tZm9jdXMtdGV4dC1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGlucHV0LS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGlucHV0LS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgIH1cbiAgICBAaWYgKGhhcygkaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcikpIHtcbiAgICAgIGJvcmRlci1jb2xvcjogaW5wdXQtLWZvY3VzLWJvcmRlci1jb2xvcjtcbiAgICB9XG5cbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICBAaWYgKGhhcygkaW5wdXQtLWZvY3VzLXBsYWNlaG9sZGVyLWNvbG9yKSkge1xuICAgICAgICBjb2xvcjogJGlucHV0LS1mb2N1cy1wbGFjZWhvbGRlci1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmW2Rpc2FibGVkXSB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcblxuICAgIEBpZiAoaGFzKCRpbnB1dC0tZGlzYWJsZWQtdGV4dC1jb2xvcikpIHtcbiAgICAgIGNvbG9yOiAkaW5wdXQtLWRpc2FibGVkLXRleHQtY29sb3I7XG4gICAgfVxuICAgIEBpZiAoaGFzKCRpbnB1dC0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcikpIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjtcbiAgICB9XG4gICAgQGlmIChoYXMoJGlucHV0LS1kaXNhYmxlZC1ib3JkZXItY29sb3IpKSB7XG4gICAgICBib3JkZXItY29sb3I6ICRpbnB1dC0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgIEBpZiAoaGFzKCRpbnB1dC0tZGlzYWJsZWQtcGxhY2Vob2xkZXItY29sb3IpKSB7XG4gICAgICAgIGNvbG9yOiAkaW5wdXQtLWRpc2FibGVkLXBsYWNlaG9sZGVyLWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmltYWdlIHtcbiAgJl9fd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gICZfX2ltZyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG5cbiAgJl9fY2FwdGlvbiB7XG4gICAgQGluY2x1ZGUgdHlwbyhjYXB0aW9uKTtcblxuICAgIG1hcmdpbi10b3A6IHB4LXRvLXJlbSgkc3BhY2UtLXh4cyk7XG4gIH1cbn1cbiIsIi8qKlxuICogR2xvYmFsc1xuICovXG5cbi8vIHRyYW5zaXRpb25zXG4kbGlua19fdHJhbnNpdGlvbi1kdXJhdGlvbjogc3BlZWQoKTtcbiRsaW5rX190cmFuc2l0aW9uLXByb3BlcnRpZXM6IGNvbG9yO1xuJGxpbmtfX3RyYW5zaXRpb24tZWFzaW5nOiBlYXNpbmcoKTtcblxuLy8gc3R5bGVzXG4kbGlua19fY29sb3I6ICRjb2xvci0tcHJpbWFyeTtcbiRsaW5rX19jb2xvci1ob3ZlcjogJGNvbG9yLS1ibGFjaztcblxuJGxpbmtfX2ljb24tc2l6ZTogcHgtdG8tcmVtKDI0KTtcbiRsaW5rX19pY29uLXdpZHRoLS1pbnRlcm5hbDogcHgtdG8tcmVtKDQyKTtcbiRsaW5rX19pY29uLWhlaWdodC0taW50ZXJuYWw6IHB4LXRvLXJlbSgxOCk7XG5cbiRsaW5rX19pY29uLWRpc3RhbmNlOiBweC10by1yZW0oJHNwYWNlLS1tKTtcbiRsaW5rX19pY29uLWRpc3RhbmNlLS1mb3JtYXR0ZWQtdGV4dDogcHgtdG8tcmVtKCRzcGFjZS0tcyk7XG4kbGlua19faWNvbi1kaXN0YW5jZS0tZXh0ZXJuYWw6IHB4LXRvLXJlbSgkc3BhY2UtLXhtKTtcbiRsaW5rX19pY29uLWRpc3RhbmNlLS1leHRlcm5hbC1zZWNvbmRhcnk6IHB4LXRvLXJlbSgkc3BhY2UtLW0pO1xuXG4kbGlua19faWNvbi1vZmZzZXQtaG9yaXpvbnRhbDogJGxpbmtfX2ljb24tc2l6ZSArICRsaW5rX19pY29uLWRpc3RhbmNlO1xuJGxpbmtfX2ljb24tb2Zmc2V0LWhvcml6b250YWwtLWZvcm1hdHRlZC10ZXh0OiAkbGlua19faWNvbi1zaXplICtcbiAgJGxpbmtfX2ljb24tZGlzdGFuY2UtLWZvcm1hdHRlZC10ZXh0O1xuJGxpbmtfX2ljb24tb2Zmc2V0LXZlcnRpY2FsOiBweC10by1yZW0oMyk7XG4kbGlua19faWNvbi1vZmZzZXQtdmVydGljYWwtLWZvcm1hdHRlZC10ZXh0OiBweC10by1yZW0oNik7XG5cbiRsaW5rX190ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiRsaW5rX19idXR0b24tcGFkZGluZzogcHgtdG8tcmVtKDE1KSBweC10by1yZW0oMTUpOyAvL3RiZCB3ZW5uIGljb24gdm9yaGFuZGVuIGlzdFxuJGxpbmtfX2J1dHRvbi1ib3JkZXItcmFkaXVzOiAzcHg7XG4kbGlua19fYnV0dG9uLXNlY29uZGFyeS1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuJGxpbmtfX2J1dHRvbi1zZWNvbmRhcnktY29sb3ItaG92ZXI6ICRjb2xvci0tcHJpbWFyeS1ob3ZlcjtcblxuLmxpbmsge1xuICAkdGhpczogJjtcblxuICBAaW5jbHVkZSB0eXBvKGxpbmtJbmxpbmUpO1xuICBAaW5jbHVkZSBpbnRlcmFjdGlvblN0eWxlKFxuICAgIGNvbG9yLFxuICAgICRsaW5rX19jb2xvcixcbiAgICAkbGlua19fY29sb3ItaG92ZXIsXG4gICAgJGxpbmtfX2NvbG9yLWhvdmVyXG4gICk7XG5cbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAkbGlua19fY29sb3I7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiAkbGlua19fdGV4dC1kZWNvcmF0aW9uO1xuICB0cmFuc2l0aW9uOiAkbGlua19fdHJhbnNpdGlvbi1wcm9wZXJ0aWVzICRsaW5rX190cmFuc2l0aW9uLWR1cmF0aW9uXG4gICAgJGxpbmtfX3RyYW5zaXRpb24tZWFzaW5nO1xuXG4gICZfX3RleHQge1xuICAgIGZsZXg6IDEgMCAwO1xuICB9XG5cbiAgJl9faWNvbi13cmFwcGVyIHtcbiAgICBmbGV4OiAwIDEgYXV0bztcblxuICAgICYtLWludGVybmFsIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgd2lkdGg6ICRsaW5rX19pY29uLXdpZHRoLS1pbnRlcm5hbDtcbiAgICAgIGhlaWdodDogJGxpbmtfX2ljb24taGVpZ2h0LS1pbnRlcm5hbDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAkbGlua19faWNvbi1kaXN0YW5jZS0tZXh0ZXJuYWw7XG4gICAgfVxuICB9XG5cbiAgJl9faWNvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAmLS1pbnRlcm5hbCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBtYXJnaW4tdG9wOiBweC10by1yZW0oLSRzcGFjZS0tcyk7XG4gICAgfVxuICB9XG5cbiAgJi0taWNvbiB7XG4gICAgJi1iZWZvcmUge1xuICAgICAgbWFyZ2luLWxlZnQ6ICRsaW5rX19pY29uLW9mZnNldC1ob3Jpem9udGFsO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB3aWR0aDogJGxpbmtfX2ljb24tc2l6ZTtcbiAgICAgICAgaGVpZ2h0OiAkbGlua19faWNvbi1zaXplO1xuICAgICAgICBtYXJnaW4tbGVmdDogLSRsaW5rX19pY29uLW9mZnNldC1ob3Jpem9udGFsO1xuICAgICAgICBtYXJnaW4tdG9wOiAkbGlua19faWNvbi1vZmZzZXQtdmVydGljYWw7XG5cbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLWV4dGVybmFsIHtcbiAgICAmOmJlZm9yZSB7XG4gICAgICBtYXNrLWltYWdlOiB1cmwoJy4uL2ljb25zL2V4dGVybmFsXzI0LnN2ZycpO1xuICAgIH1cbiAgfVxuXG4gICYtLWRvd25sb2FkIHtcbiAgICAmOmJlZm9yZSB7XG4gICAgICBtYXNrLWltYWdlOiB1cmwoJy4uL2ljb25zL2Rvd25sb2FkXzI0LnN2ZycpO1xuICAgIH1cbiAgfVxuXG4gICYtLWJ1dHRvbiB7XG4gICAgQGluY2x1ZGUgdHlwbyhidXR0b24pO1xuXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6ICRsaW5rX19idXR0b24tcGFkZGluZztcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgYm9yZGVyLXJhZGl1czogJGxpbmtfX2J1dHRvbi1ib3JkZXItcmFkaXVzO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogbm9uZTtcbiAgICB9XG5cbiAgICAmI3skdGhpc30tLWNvbG9yLWJsdWUge1xuICAgICAgQGluY2x1ZGUgaW50ZXJhY3Rpb25TdHlsZShcbiAgICAgICAgY29sb3IsXG4gICAgICAgICRjb2xvci0td2hpdGUsXG4gICAgICAgICRjb2xvci0td2hpdGUsXG4gICAgICAgICRjb2xvci0td2hpdGVcbiAgICAgICk7XG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgICAgIDI3OWRlZyxcbiAgICAgICAgJGNvbG9yLS1ibHVlLWdyYWRpZW50LXN0YXJ0IDAlLFxuICAgICAgICAkY29sb3ItLWJsdWUtZ3JhZGllbnQtZW5kIDEwMCVcbiAgICAgICk7XG5cbiAgICAgIEBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci0tYmx1ZS1kYXJrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJiN7JHRoaXN9LS1jb2xvci13aGl0ZSB7XG4gICAgICBAaW5jbHVkZSBpbnRlcmFjdGlvblN0eWxlKFxuICAgICAgICBjb2xvcixcbiAgICAgICAgJGxpbmtfX2J1dHRvbi1zZWNvbmRhcnktY29sb3IsXG4gICAgICAgICRsaW5rX19idXR0b24tc2Vjb25kYXJ5LWNvbG9yLWhvdmVyLFxuICAgICAgICAkbGlua19fYnV0dG9uLXNlY29uZGFyeS1jb2xvci1ob3ZlclxuICAgICAgKTtcbiAgICAgIEBpbmNsdWRlIGludGVyYWN0aW9uU3R5bGUoXG4gICAgICAgIGJvcmRlci1jb2xvcixcbiAgICAgICAgJGxpbmtfX2J1dHRvbi1zZWNvbmRhcnktY29sb3IsXG4gICAgICAgICRsaW5rX19idXR0b24tc2Vjb25kYXJ5LWNvbG9yLWhvdmVyLFxuICAgICAgICAkbGlua19fYnV0dG9uLXNlY29uZGFyeS1jb2xvci1ob3ZlclxuICAgICAgKTtcblxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLS13aGl0ZTtcbiAgICAgIGJvcmRlci13aWR0aDogMXB4O1xuICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcblxuICAgICAgI3skdGhpc31fX2ljb24td3JhcHBlci0taW50ZXJuYWwge1xuICAgICAgICBtYXJnaW4tbGVmdDogJGxpbmtfX2ljb24tZGlzdGFuY2UtLWV4dGVybmFsLXNlY29uZGFyeTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4uI3skZm9ybWF0dGVkLXRleHQtY2xhc3N9IHAgYSB7XG4gIEBleHRlbmQgLmxpbms7XG5cbiAgZGlzcGxheTogaW5saW5lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuXG4gIC8vIEV4dGVybmFsIGxpbmtzXG4gICZbcmVsXSB7XG4gICAgQGV4dGVuZCAubGluay0taWNvbi1iZWZvcmU7XG4gICAgQGV4dGVuZCAubGluay0tZXh0ZXJuYWw7XG5cbiAgICBtYXJnaW4tbGVmdDogJGxpbmtfX2ljb24tb2Zmc2V0LWhvcml6b250YWwtLWZvcm1hdHRlZC10ZXh0O1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgbWFyZ2luLXRvcDogJGxpbmtfX2ljb24tb2Zmc2V0LXZlcnRpY2FsLS1mb3JtYXR0ZWQtdGV4dDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGxpbmtfX2ljb24tb2Zmc2V0LWhvcml6b250YWwtLWZvcm1hdHRlZC10ZXh0O1xuICAgIH1cbiAgfVxuXG4gIC8vIEludGVybmFsIGxpbmtzIChtYXkgZXh0ZW5kIGlmIG5lZWRlZClcbiAgJltocmVmJD0nLnBuZyddLFxuICAmW2hyZWYkPScuanBnJ10sXG4gICZbaHJlZiQ9Jy5wZGYnXSxcbiAgJltocmVmJD0nLmRvY3gnXSxcbiAgJltocmVmJD0nLnhsc3gnXSB7XG4gICAgQGV4dGVuZCAubGluay0taWNvbi1iZWZvcmU7XG4gICAgQGV4dGVuZCAubGluay0tZG93bmxvYWQ7XG5cbiAgICBtYXJnaW4tbGVmdDogJGxpbmtfX2ljb24tb2Zmc2V0LWhvcml6b250YWwtLWZvcm1hdHRlZC10ZXh0O1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgbWFyZ2luLXRvcDogJGxpbmtfX2ljb24tb2Zmc2V0LXZlcnRpY2FsLS1mb3JtYXR0ZWQtdGV4dDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGxpbmtfX2ljb24tb2Zmc2V0LWhvcml6b250YWwtLWZvcm1hdHRlZC10ZXh0O1xuICAgIH1cbiAgfVxufVxuIiwiLy8gR2VuZXJhbCBMaXN0IHN0eWxlXG5cbi8vIHR5cG8gLSBpZiB5b3UgY2hhbmdlIHRoaXMsIGRvbid0IGZvcmdldCB0byBjaGFuZ2UgaXQgaW4gYGNzcy91dGlscy9fdHlwb2dyYXBoeS5zY3NzYFxuJGxpc3RfX21hcmdpbi12ZXJ0aWNhbDogcHgtdG8tcmVtKCRzcGFjZS0teG0pO1xuXG4kbGlzdF9faXRlbS12ZXJ0aWNhbC1wYWRkaW5nOiBweC10by1yZW0oMyk7XG4kbGlzdF9faXRlbS1pY29uLXRleHQtZGlzdGFuY2U6IHB4LXRvLXJlbSg2KTtcblxuJGxpc3RfX3VsLWl0ZW0taWNvbi12ZXJ0aWNhbC1vZmZzZXQ6IHB4LXRvLXJlbSgxNCk7XG4kbGlzdF9fdWwtaXRlbS1pY29uLWhlaWdodDogcHgtdG8tcmVtKDEpO1xuJGxpc3RfX3VsLWl0ZW0taWNvbi13aWR0aC0tbGV2ZWwtMDogcHgtdG8tcmVtKDEyKTtcbiRsaXN0X191bC1pdGVtLWljb24td2lkdGgtLWxldmVsLTE6ICRsaXN0X191bC1pdGVtLWljb24td2lkdGgtLWxldmVsLTAgLyAyO1xuJGxpc3RfX3VsLWl0ZW0tb2Zmc2V0LWxlZnQtLWxldmVsLTA6ICRsaXN0X191bC1pdGVtLWljb24td2lkdGgtLWxldmVsLTAgK1xuICAkbGlzdF9faXRlbS1pY29uLXRleHQtZGlzdGFuY2U7XG4kbGlzdF9fdWwtaXRlbS1vZmZzZXQtbGVmdC0tbGV2ZWwtMTogJGxpc3RfX3VsLWl0ZW0taWNvbi13aWR0aC0tbGV2ZWwtMSArXG4gICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcblxuJGxpc3RfX29sLWl0ZW0tY291bnRlci13aWR0aC0tbGV2ZWwtMDogcHgtdG8tcmVtKDE4KTtcbiRsaXN0X19vbC1pdGVtLWNvdW50ZXItd2lkdGgtLWxldmVsLTE6IHB4LXRvLXJlbSgzMCk7XG4kbGlzdF9fb2wtaXRlbS1vZmZzZXQtbGVmdC0tbGV2ZWwtMDogJGxpc3RfX29sLWl0ZW0tY291bnRlci13aWR0aC0tbGV2ZWwtMCArXG4gICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcbiRsaXN0X19vbC1pdGVtLW9mZnNldC1sZWZ0LS1sZXZlbC0xOiAkbGlzdF9fb2wtaXRlbS1jb3VudGVyLXdpZHRoLS1sZXZlbC0xICtcbiAgJGxpc3RfX2l0ZW0taWNvbi10ZXh0LWRpc3RhbmNlO1xuXG4kbGlzdF9fY2hlY2staXRlbS1pY29uLXdpZHRoOiBweC10by1yZW0oMjQpO1xuXG4vLyBVTCAmIE9MIHN0eWxlc1xuLmxpc3QsXG4ubGlzdCBvbCxcbi5saXN0IHVsLFxuLiN7JGZvcm1hdHRlZC10ZXh0LWNsYXNzfSBvbCxcbi4jeyRmb3JtYXR0ZWQtdGV4dC1jbGFzc30gdWwge1xuICBtYXJnaW46ICRsaXN0X19tYXJnaW4tdmVydGljYWwgMDtcblxuICBsaSB7XG4gICAgcGFkZGluZy10b3A6ICRsaXN0X19pdGVtLXZlcnRpY2FsLXBhZGRpbmc7XG4gICAgcGFkZGluZy1ib3R0b206ICRsaXN0X19pdGVtLXZlcnRpY2FsLXBhZGRpbmc7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZmxleC1ncm93OiAwO1xuICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgfVxuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cblxuICAgIHVsLFxuICAgIG9sIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbiAgfVxufVxuXG4ubGlzdCxcbi4jeyRmb3JtYXR0ZWQtdGV4dC1jbGFzc30gdWwsXG4ubGlzdCB1bCB7XG4gIGxpIHtcbiAgICBwYWRkaW5nLWxlZnQ6ICRsaXN0X191bC1pdGVtLWljb24td2lkdGgtLWxldmVsLTAgK1xuICAgICAgJGxpc3RfX2l0ZW0taWNvbi10ZXh0LWRpc3RhbmNlO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgaGVpZ2h0OiAkbGlzdF9fdWwtaXRlbS1pY29uLWhlaWdodDtcbiAgICAgIHdpZHRoOiAkbGlzdF9fdWwtaXRlbS1pY29uLXdpZHRoLS1sZXZlbC0wO1xuICAgICAgbWFyZ2luLXRvcDogJGxpc3RfX3VsLWl0ZW0taWNvbi12ZXJ0aWNhbC1vZmZzZXQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGxpc3RfX3VsLWl0ZW0tb2Zmc2V0LWxlZnQtLWxldmVsLTA7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgcGFkZGluZy1sZWZ0OiAkbGlzdF9fdWwtaXRlbS1pY29uLXdpZHRoLS1sZXZlbC0xICtcbiAgICAgICAgJGxpc3RfX2l0ZW0taWNvbi10ZXh0LWRpc3RhbmNlO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIHdpZHRoOiAkbGlzdF9fdWwtaXRlbS1pY29uLXdpZHRoLS1sZXZlbC0xO1xuICAgICAgICBtYXJnaW4tbGVmdDogLSRsaXN0X191bC1pdGVtLW9mZnNldC1sZWZ0LS1sZXZlbC0xO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ubGlzdC0tb3JkZXJlZCxcbi5saXN0LS1vcmRlcmVkIG9sLFxuLiN7JGZvcm1hdHRlZC10ZXh0LWNsYXNzfSBvbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGNvdW50ZXItcmVzZXQ6IGxpO1xuXG4gIGxpIHtcbiAgICBjb3VudGVyLWluY3JlbWVudDogbGk7XG4gICAgcGFkZGluZy1sZWZ0OiAkbGlzdF9fb2wtaXRlbS1jb3VudGVyLXdpZHRoLS1sZXZlbC0wICtcbiAgICAgICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IGNvdW50ZXJzKGxpLCAnLicpICcuJztcbiAgICAgIG1pbi13aWR0aDogJGxpc3RfX29sLWl0ZW0tY291bnRlci13aWR0aC0tbGV2ZWwtMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGxpc3RfX29sLWl0ZW0tb2Zmc2V0LWxlZnQtLWxldmVsLTA7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogJGxpc3RfX29sLWl0ZW0tY291bnRlci13aWR0aC0tbGV2ZWwtMSArXG4gICAgICAgICRsaXN0X19pdGVtLWljb24tdGV4dC1kaXN0YW5jZTtcblxuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBtaW4td2lkdGg6ICRsaXN0X19vbC1pdGVtLWNvdW50ZXItd2lkdGgtLWxldmVsLTE7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtJGxpc3RfX29sLWl0ZW0tb2Zmc2V0LWxlZnQtLWxldmVsLTE7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvKipcbiAqIEdsb2JhbHNcbiAqL1xuJHNlbGVjdGlvbi0tbGFiZWwtcGFkZGluZy1sZWZ0OiBweC10by1yZW0oMTIpO1xuJHNlbGVjdGlvbi0tbWFyZ2luLWJvdHRvbTogc2l6ZShxdWFydGVyKTtcblxuJHNlbGVjdGlvbi0tYm9yZGVyLWNvbG9yOiAkY29sb3ItLWdyZXktbGlnaHQ7XG5cbiRzZWxlY3Rpb24tLWhvdmVyLWxhYmVsLWNvbG9yOiAkY29sb3ItLWhvdmVyLXRleHQ7XG5cbiRzZWxlY3Rpb24tLWRpc2FibGVkLWxhYmVsLWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLXRleHQ7XG5cbi8vIHRyYW5zaXRpb25cbiRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZHVyYXRpb246IHNwZWVkKCk7XG4kc2VsZWN0aW9uLS10cmFuc2l0aW9uLWVhc2luZzogZWFzaW5nKCk7XG5cbi8qKlxuICogQ2hlY2tib3hcbiAqL1xuXG4vLyBib3ggc3R5bGVzXG4kY2hlY2tib3gtLXdpZHRoOiBweC10by1yZW0oMjQpO1xuJGNoZWNrYm94LS1oZWlnaHQ6IHB4LXRvLXJlbSgyNCk7XG4kY2hlY2tib3gtLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0tZ3JleS1saWdodGVzdDtcbiRjaGVja2JveC0tbWFyZ2luLWJvdHRvbTogc2l6ZShxdWFydGVyKTtcblxuJGNoZWNrYm94LS1ib3JkZXItd2lkdGg6IDJweDtcblxuLy8gY2hlY2ttYXJrIHN0eWxlc1xuJGNoZWNrYm94LS1jaGVja21hcmstcG9zaXRpb24tdG9wOiBweC10by1yZW0oNCk7XG4kY2hlY2tib3gtLWNoZWNrbWFyay1wb3NpdGlvbi1sZWZ0OiBweC10by1yZW0oOSk7XG4kY2hlY2tib3gtLWNoZWNrbWFyay13aWR0aDogcHgtdG8tcmVtKDYpO1xuJGNoZWNrYm94LS1jaGVja21hcmstaGVpZ2h0OiBweC10by1yZW0oMTIpO1xuJGNoZWNrYm94LS1jaGVja21hcmstYm9yZGVyLXdpZHRoOiAycHg7XG4kY2hlY2tib3gtLWNoZWNrbWFyay1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuXG4vLyBob3ZlclxuJGNoZWNrYm94LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOiBudWxsO1xuJGNoZWNrYm94LS1ob3Zlci1ib3JkZXItY29sb3I6ICRjb2xvci0tZ3JleS1kYXJrO1xuXG4vLyBjaGVja2VkXG4kY2hlY2tib3gtLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjogbnVsbDtcbiRjaGVja2JveC0tY2hlY2tlZC1ib3JkZXItY29sb3I6ICRjb2xvci0tcHJpbWFyeTtcblxuLy8gZGlzYWJsZWRcbiRjaGVja2JveC0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC1iYWNrZ3JvdW5kO1xuJGNoZWNrYm94LS1kaXNhYmxlZC1ib3JkZXItY29sb3I6ICRjb2xvci0tZGlzYWJsZWQtYm9yZGVyO1xuJGNoZWNrYm94LS1kaXNhYmxlZC1jaGVja21hcmstY29sb3I6ICRjb2xvci0tZGlzYWJsZWQtdGV4dDtcblxuLy8gZm9jdXNcbiRjaGVja2JveC0tZm9jdXMtYmFja2dyb3VuZC1jb2xvcjogJGNoZWNrYm94LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yO1xuJGNoZWNrYm94LS1mb2N1cy1ib3JkZXItY29sb3I6ICRjaGVja2JveC0taG92ZXItYm9yZGVyLWNvbG9yO1xuXG4vLyB0cmFuc2l0aW9uc1xuJGNoZWNrYm94LS10cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3I7XG5cbi8qKlxuICogUmFkaW9cbiAqL1xuXG4vLyBib3ggc3R5bGVzXG4kcmFkaW8tLXdpZHRoOiBweC10by1yZW0oMjQpO1xuJHJhZGlvLS1oZWlnaHQ6IHB4LXRvLXJlbSgyNCk7XG4kcmFkaW8tLWJhY2tncm91bmQtY29sb3I6ICRjb2xvci0tZ3JleS1saWdodGVzdDtcbiRyYWRpby0tbWFyZ2luLWJvdHRvbTogc2l6ZShxdWFydGVyKTtcblxuJHJhZGlvLS1ib3JkZXItd2lkdGg6IDJweDtcblxuLy8gYnVsbGV0IHN0eWxlc1xuJHJhZGlvLS1idWxsZXQtd2lkdGg6IHB4LXRvLXJlbSg4KTtcbiRyYWRpby0tYnVsbGV0LWhlaWdodDogcHgtdG8tcmVtKDgpO1xuJHJhZGlvLS1idWxsZXQtY29sb3I6ICRjb2xvci0tcHJpbWFyeTtcbiRyYWRpby0tYnVsbGV0LWJvcmRlci1yYWRpdXM6IDEwMCU7XG5cbi8vIGhvdmVyXG4kcmFkaW8tLWhvdmVyLWJhY2tncm91bmQtY29sb3I6IG51bGw7XG4kcmFkaW8tLWhvdmVyLWJvcmRlci1jb2xvcjogJGNvbG9yLS1ncmV5LWRhcms7XG5cbi8vIGNoZWNrZWRcbiRyYWRpby0tY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOiBudWxsO1xuJHJhZGlvLS1jaGVja2VkLWJvcmRlci1jb2xvcjogJGNvbG9yLS1wcmltYXJ5O1xuXG4vLyBkaXNhYmxlZFxuJHJhZGlvLS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLWRpc2FibGVkLWJhY2tncm91bmQ7XG4kcmFkaW8tLWRpc2FibGVkLWJvcmRlci1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC1ib3JkZXI7XG4kcmFkaW8tLWRpc2FibGVkLWJ1bGxldC1jb2xvcjogJGNvbG9yLS1kaXNhYmxlZC10ZXh0O1xuXG4vLyBmb2N1c1xuJHJhZGlvLS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOiBudWxsO1xuJHJhZGlvLS1mb2N1cy1ib3JkZXItY29sb3I6IG51bGw7XG5cbi8vIHRyYW5zaXRpb25zXG4kcmFkaW8tLXRyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQtY29sb3IsIGJvcmRlci1jb2xvcjtcblxuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbi5zZWxlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgbWFyZ2luLWJvdHRvbTogJHNlbGVjdGlvbi0tbWFyZ2luLWJvdHRvbTtcblxuICAmX19pbnB1dCB7XG4gICAgQGluY2x1ZGUgdmlzdWFsbHktaGlkZGVuO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gICAgQGlmIChoYXMoJHNlbGVjdGlvbi0taG92ZXItbGFiZWwtY29sb3IpKSB7XG4gICAgICAmOmhvdmVyICsgLnNlbGVjdGlvbl9fbGFiZWwge1xuICAgICAgICBjb2xvcjogJHNlbGVjdGlvbi0taG92ZXItbGFiZWwtY29sb3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJltkaXNhYmxlZF0gKyAuc2VsZWN0aW9uX19sYWJlbCB7XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuXG4gICAgICBAaWYgKGhhcygkc2VsZWN0aW9uLS1kaXNhYmxlZC1sYWJlbC1jb2xvcikpIHtcbiAgICAgICAgY29sb3I6ICRzZWxlY3Rpb24tLWRpc2FibGVkLWxhYmVsLWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2xhYmVsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246ICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZHVyYXRpb24gY29sb3JcbiAgICAgICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZWFzaW5nO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAnJztcblxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG5cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tib3hcbiAgICoqL1xuICAmLS1jaGVja2JveCB7XG4gICAgLnNlbGVjdGlvbl9fbGFiZWwge1xuICAgICAgbWluLWhlaWdodDogJGNoZWNrYm94LS1oZWlnaHQ7XG4gICAgICBwYWRkaW5nLWxlZnQ6ICRjaGVja2JveC0td2lkdGggKyAkc2VsZWN0aW9uLS1sYWJlbC1wYWRkaW5nLWxlZnQ7XG5cbiAgICAgIC8vIGNvbnRhaW5lciBzdHlsZXNcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgd2lkdGg6ICRjaGVja2JveC0td2lkdGg7XG4gICAgICAgIGhlaWdodDogJGNoZWNrYm94LS1oZWlnaHQ7XG5cbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNoZWNrYm94LS1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgICBAaWYgKGhhcygkY2hlY2tib3gtLWJvcmRlci13aWR0aCkpIHtcbiAgICAgICAgICBib3JkZXI6IHNvbGlkICRzZWxlY3Rpb24tLWJvcmRlci1jb2xvcjtcbiAgICAgICAgICBib3JkZXItd2lkdGg6ICRjaGVja2JveC0tYm9yZGVyLXdpZHRoO1xuICAgICAgICB9XG4gICAgICAgIHRyYW5zaXRpb246ICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZHVyYXRpb25cbiAgICAgICAgICAkc2VsZWN0aW9uLS10cmFuc2l0aW9uLWVhc2luZztcbiAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogJGNoZWNrYm94LS10cmFuc2l0aW9uLXByb3BlcnR5O1xuICAgICAgfVxuXG4gICAgICAvLyBjaGVja21hcmsgc3R5bGVzXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgdG9wOiAkY2hlY2tib3gtLWNoZWNrbWFyay1wb3NpdGlvbi10b3A7XG4gICAgICAgIGxlZnQ6ICRjaGVja2JveC0tY2hlY2ttYXJrLXBvc2l0aW9uLWxlZnQ7XG5cbiAgICAgICAgd2lkdGg6ICRjaGVja2JveC0tY2hlY2ttYXJrLXdpZHRoO1xuICAgICAgICBoZWlnaHQ6ICRjaGVja2JveC0tY2hlY2ttYXJrLWhlaWdodDtcblxuICAgICAgICBib3JkZXI6IHNvbGlkICRjaGVja2JveC0tY2hlY2ttYXJrLWNvbG9yO1xuICAgICAgICBib3JkZXItd2lkdGg6IDAgJGNoZWNrYm94LS1jaGVja21hcmstYm9yZGVyLXdpZHRoXG4gICAgICAgICAgJGNoZWNrYm94LS1jaGVja21hcmstYm9yZGVyLXdpZHRoIDA7XG5cbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDApO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHNlbGVjdGlvbi0tdHJhbnNpdGlvbi1kdXJhdGlvblxuICAgICAgICAgICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZWFzaW5nO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGZvY3VzIHN0YXRlXG4gICAgLnNlbGVjdGlvbl9faW5wdXQ6Zm9jdXMgKyAuc2VsZWN0aW9uX19sYWJlbCB7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIEBpZiAoaGFzKCRjaGVja2JveC0tZm9jdXMtYmFja2dyb3VuZC1jb2xvcikpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2hlY2tib3gtLWZvY3VzLWJhY2tncm91bmQtY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICBAaWYgKGhhcygkY2hlY2tib3gtLWZvY3VzLWJvcmRlci1jb2xvcikpIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICRjaGVja2JveC0tZm9jdXMtYm9yZGVyLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gaG92ZXIgc3RhdGVcbiAgICAuc2VsZWN0aW9uX19pbnB1dDpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgQGlmIChoYXMoJGNoZWNrYm94LS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjaGVja2JveC0taG92ZXItYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAoaGFzKCRjaGVja2JveC0taG92ZXItYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJGNoZWNrYm94LS1ob3Zlci1ib3JkZXItY29sb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjaGVja2VkIHN0YXRlXG4gICAgLnNlbGVjdGlvbl9faW5wdXQ6Y2hlY2tlZCArIC5zZWxlY3Rpb25fX2xhYmVsLFxuICAgIC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQ6Zm9jdXMgKyAuc2VsZWN0aW9uX19sYWJlbCxcbiAgICAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkOmhvdmVyICsgLnNlbGVjdGlvbl9fbGFiZWwge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBAaWYgKGhhcygkY2hlY2tib3gtLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcikpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2hlY2tib3gtLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAoaGFzKCRjaGVja2JveC0tY2hlY2tlZC1ib3JkZXItY29sb3IpKSB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAkY2hlY2tib3gtLWNoZWNrZWQtYm9yZGVyLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIHNob3cgdGhlIGNoZWNrbWFya1xuICAgICAgJjphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZSgxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBkaXNhYmxlZCBzdGF0ZVxuICAgIC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXSArIC5zZWxlY3Rpb25fX2xhYmVsLFxuICAgIC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXTpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgQGlmIChoYXMoJGNoZWNrYm94LS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjaGVja2JveC0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAoaGFzKCRjaGVja2JveC0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJGNoZWNrYm94LS1kaXNhYmxlZC1ib3JkZXItY29sb3I7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gZGlzYWJsZWQgY2hlY2ttYXIgc3R5bGVcbiAgICAgIEBpZiAoaGFzKCRjaGVja2JveC0tZGlzYWJsZWQtY2hlY2ttYXJrLWNvbG9yKSkge1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICRjaGVja2JveC0tZGlzYWJsZWQtY2hlY2ttYXJrLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJhZGlvXG4gICAqKi9cbiAgJi0tcmFkaW8ge1xuICAgIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgIG1pbi1oZWlnaHQ6ICRyYWRpby0taGVpZ2h0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAoJHJhZGlvLS13aWR0aCArICRzZWxlY3Rpb24tLWxhYmVsLXBhZGRpbmctbGVmdCk7XG5cbiAgICAgIC8vIGNvbnRhaW5lciBzdHlsZXNcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgd2lkdGg6ICRyYWRpby0td2lkdGg7XG4gICAgICAgIGhlaWdodDogJHJhZGlvLS1oZWlnaHQ7XG5cbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJhZGlvLS1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgICBAaWYgKGhhcygkcmFkaW8tLWJvcmRlci13aWR0aCkpIHtcbiAgICAgICAgICBib3JkZXI6ICRyYWRpby0tYm9yZGVyLXdpZHRoIHNvbGlkICRzZWxlY3Rpb24tLWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG5cbiAgICAgICAgdHJhbnNpdGlvbjogJHNlbGVjdGlvbi0tdHJhbnNpdGlvbi1kdXJhdGlvblxuICAgICAgICAgICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZWFzaW5nO1xuICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiAkcmFkaW8tLXRyYW5zaXRpb24tcHJvcGVydHk7XG4gICAgICB9XG5cbiAgICAgIC8vIHJhZGlvIGJ1bGxldCBzdHlsZXNcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICB0b3A6ICRyYWRpby0taGVpZ2h0IC8gMjtcbiAgICAgICAgbGVmdDogJHJhZGlvLS13aWR0aCAvIDI7XG5cbiAgICAgICAgd2lkdGg6ICRyYWRpby0tYnVsbGV0LXdpZHRoO1xuICAgICAgICBoZWlnaHQ6ICRyYWRpby0tYnVsbGV0LWhlaWdodDtcblxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcmFkaW8tLWJ1bGxldC1jb2xvcjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHJhZGlvLS1idWxsZXQtYm9yZGVyLXJhZGl1cztcblxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICRzZWxlY3Rpb24tLXRyYW5zaXRpb24tZHVyYXRpb25cbiAgICAgICAgICAkc2VsZWN0aW9uLS10cmFuc2l0aW9uLWVhc2luZztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBmb2N1cyBzdGF0ZVxuICAgIC5zZWxlY3Rpb25fX2lucHV0OmZvY3VzICsgLnNlbGVjdGlvbl9fbGFiZWwge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBAaWYgKGhhcygkcmFkaW8tLWZvY3VzLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJhZGlvLS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgICB9XG5cbiAgICAgICAgQGlmIChoYXMoJHJhZGlvLS1mb2N1cy1ib3JkZXItY29sb3IpKSB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAkcmFkaW8tLWZvY3VzLWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhvdmVyIHN0YXRlXG4gICAgLnNlbGVjdGlvbl9faW5wdXQ6aG92ZXIgKyAuc2VsZWN0aW9uX19sYWJlbCB7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIEBpZiAoaGFzKCRyYWRpby0taG92ZXItYmFja2dyb3VuZC1jb2xvcikpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcmFkaW8tLWhvdmVyLWJhY2tncm91bmQtY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICBAaWYgKGhhcygkcmFkaW8tLWhvdmVyLWJvcmRlci1jb2xvcikpIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICRyYWRpby0taG92ZXItYm9yZGVyLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gY2hlY2tlZCBzdGF0ZVxuICAgIC5zZWxlY3Rpb25fX2lucHV0OmNoZWNrZWQgKyAuc2VsZWN0aW9uX19sYWJlbCxcbiAgICAuc2VsZWN0aW9uX19pbnB1dDpjaGVja2VkOmZvY3VzICsgLnNlbGVjdGlvbl9fbGFiZWwsXG4gICAgLnNlbGVjdGlvbl9faW5wdXQ6Y2hlY2tlZDpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgQGlmIChoYXMoJHJhZGlvLS1jaGVja2VkLWJhY2tncm91bmQtY29sb3IpKSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJhZGlvLS1jaGVja2VkLWJhY2tncm91bmQtY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICBAaWYgKGhhcygkcmFkaW8tLWNoZWNrZWQtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJHJhZGlvLS1jaGVja2VkLWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBzaG93IHRoZSBjaGVja21hcmtcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBkaXNhYmxlZCBzdGF0ZVxuICAgIC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXSArIC5zZWxlY3Rpb25fX2xhYmVsLFxuICAgIC5zZWxlY3Rpb25fX2lucHV0W2Rpc2FibGVkXTpob3ZlciArIC5zZWxlY3Rpb25fX2xhYmVsIHtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgQGlmIChoYXMoJHJhZGlvLS1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yKSkge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRyYWRpby0tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAoaGFzKCRyYWRpby0tZGlzYWJsZWQtYm9yZGVyLWNvbG9yKSkge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJHJhZGlvLS1kaXNhYmxlZC1ib3JkZXItY29sb3I7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gZGlzYWJsZWQgY2hlY2ttYXJrIHN0eWxlXG4gICAgICBAaWYgKGhhcygkcmFkaW8tLWRpc2FibGVkLWJ1bGxldC1jb2xvcikpIHtcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJhZGlvLS1kaXNhYmxlZC1idWxsZXQtY29sb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */
