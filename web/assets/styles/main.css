/* stylelint-disable */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* stylelint-enable */
/**
 * dialog-typography - SASS/SCSS module settings
 * @version v1.2.0
 * (c) 2019 meodai
 * @link https://github.com/meodai/dialog-typography#readme
 * @license MIT
 */
/**
*  Grid
*/
/**
*  Breakpoint Settings
*/
/**
 *  Typography
 */
/**
 * Base spacing units - for boxes (horizontal and vertical)
 */
/**
 * Grid
 */
/**
 *  CSS Framework
 */
/* grey */
/* primary */
/* secondary */
/* special */
/* text */
/**
 * Map for the project breakpoints.
 * the breakpoint variables are defined in settings.scss
 */
/**
 * Use the breakpoints of this project.
 * if you have a breakpoint key with a hyphen, you need to make a string out of it (tablet-portrait -> 'tablet-portrait')
 *
 * Examples:
 * @include breakpoint('tablet-portrait') -> takes the min of the tablet-portrait
 * @include breakpoint('desktop', 'only') -> takes the min and max value from the desktop breakpoint
 * @include breakpoint('phone', 'desktop') -> takes the min of the phone and the max of the desktop
 *
 * @param  {string} $base-key - key of the min breakpoint
 * @param  {string} $additional - key for breakpoint or 'only'
 */
/**
 * Strip the unit from a number (e.g. 18px --> 18).
 */
/**
 * Tint the color with transparency
 * @param  {string} $color      - hex color code
 * @param  {float} $percentage - percentage of transparency
 */
/**
 * helper functions
 */
/**
 * calculate the em value from pixel values
 * @param  {int}   $px: desired pixel value
 * @param {int}    $ref: reference font size of the component
 * Notes:
 * reference is only needed, if the font-size is not the same as the $font-size--base
 */
/**
 * calculate the rem value from pixel values
 * @param  {int}   $px: desired pixel value
 */
/**
 * calculate the px value from from a rem value
 * @param  {int}   $rem: desired pixel value
 */
/**
 * adds the em unit to the value
 * @param  {float}   $val: desired em value
 */
/**
 * adds the rem unit to the value
 * @param  {float}   $val: desired rem value
 */
/**
 * adds the em unity to the value
 * @param  {float}   $px: desired em value
 */
/**
 * calculate the relative value for line height out of the pixel value
 * @param  {int}   $px: desired pixel value
 * @param {int}    $font-size: the reference font-size value in px
 */
/**
 * check if the value of the variable is null.
 * Note: used for conditional rendering in the framework
 */
/**
 * Helps to hide the element visually, but not for screen readers
 */
/**
 * Helps to hide the element visually, but not for screen readers
 */
/**
 * Sets :hover and :active style based on @media (hover: hover)
 */
/* stylelint-disable-next-line at-rule-name-newline-after */
/**
 *  Phone - standard defined in `utils/settings`
 */
/**
 *  Tablet portrait
 */
/**
 *  Tablet landscape
 */
/**
 *  Desktop
 */
/**
 * Desktop big
 */
/**
 * Map for all durations used in the project
 */
/**
 * function to get the values of the durations map
 */
/**
 * Map for all easings used in the project
 */
/**
 * function to get the values of the easings map
 */
/* stylelint-disable */
/* stylelint-enable */
/* margin vertical none */
.layout-helper__margin-vertical--none {
  margin-top: 0;
  margin-bottom: 0; }

.layout-helper__margin-top--none {
  margin-top: 0; }

.layout-helper__margin-bottom--none {
  margin-bottom: 0; }

/* margin vertical xs */
.layout-helper__margin-vertical--xxs {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.layout-helper__margin-top--xxs {
  margin-top: 1rem; }

.layout-helper__margin-bottom--xxs {
  margin-bottom: 1rem; }

/* margin vertical xs */
.layout-helper__margin-vertical--xs {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.layout-helper__margin-top--xs {
  margin-top: 2rem; }

.layout-helper__margin-bottom--xs {
  margin-bottom: 2rem; }

/* margin vertical s */
.layout-helper__margin-vertical--s {
  margin-top: 2rem;
  margin-bottom: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--s {
      margin-top: 3rem;
      margin-bottom: 3rem; } }

.layout-helper__margin-top--s {
  margin-top: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--s {
      margin-top: 3rem; } }

.layout-helper__margin-bottom--s {
  margin-bottom: 2rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--s {
      margin-bottom: 3rem; } }

/* margin vertical m */
.layout-helper__margin-vertical--m {
  margin-top: 3rem;
  margin-bottom: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--m {
      margin-top: 4rem;
      margin-bottom: 4rem; } }

.layout-helper__margin-top--m {
  margin-top: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--m {
      margin-top: 4rem; } }

.layout-helper__margin-bottom--m {
  margin-bottom: 3rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--m {
      margin-bottom: 4rem; } }

/* margin vertical l */
.layout-helper__margin-vertical--l {
  margin-top: 4rem;
  margin-bottom: 4rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--l {
      margin-top: 6rem;
      margin-bottom: 6rem; } }

.layout-helper__margin-top--l {
  margin-top: 4rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--l {
      margin-top: 6rem; } }

.layout-helper__margin-bottom--l {
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--l {
      margin-bottom: 6rem; } }

/* margin vertical xl */
.layout-helper__margin-vertical--xl {
  margin-top: 5rem;
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-vertical--xl {
      margin-top: 7.77778rem;
      margin-bottom: 7.77778rem; } }

.layout-helper__margin-top--xl {
  margin-top: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-top--xl {
      margin-top: 7.77778rem; } }

.layout-helper__margin-bottom--xl {
  margin-bottom: 5rem; }
  @media screen and (min-width: 601px) {
    .layout-helper__margin-bottom--xl {
      margin-bottom: 7.77778rem; } }

.visually-hidden {
  position: absolute;
  height: 1px;
  width: 1px;
  border: 0;
  clip: rect(0 0 0 0);
  margin: -1px;
  overflow: hidden;
  padding: 0; }

/* stylelint-disable */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

ul,
p {
  margin: 0; }

ul {
  list-style: none;
  padding: 0; }

a,
a:visited {
  text-decoration: none;
  text-decoration: none; }

h1,
h2,
h3,
h4,
p,
ol,
ul {
  margin: 0;
  padding: 0; }

button,
a {
  color: inherit; }

img {
  max-width: 100%; }

h1,
h2,
h3,
h4 {
  font-size: inherit; }

button,
input[type='reset'],
input[type='button'],
input[type='submit'] {
  overflow: visible;
  border: 0;
  font: inherit;
  -webkit-font-smoothing: inherit;
  letter-spacing: inherit;
  background: none;
  cursor: pointer;
  padding: 0; }

fieldset {
  border: 0;
  padding: 0; }

textarea {
  font-family: inherit;
  font-size: inherit;
  color: inherit; }

img,
svg {
  vertical-align: text-bottom; }

input,
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0; }

input[type='checkbox'] {
  -webkit-appearance: checkbox; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

date {
  display: inline-block; }

svg {
  fill: currentColor;
  -webkit-transition: fill 0.3s ease;
  transition: fill 0.3s ease; }

/* stylelint-enable */
/**
 * Base
 */
html {
  color: #0d3256;
  font-size: 112.5%;
  font-family: "Frutiger LT W01_55 Roman";
  line-height: 1.65; }

figure {
  margin: 0; }

p {
  font-family: "Frutiger LT W01_55 Roman";
  margin: 1rem 0;
  font-weight: 400;
  line-height: 1.8; }

b,
strong {
  font-family: "Frutiger LT W01_65 Bold";
  font-weight: 400; }

ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none; }

sub,
sup {
  font-size: 62%; }

.grid {
  display: table-cell; }

.logo {
  width: 25%;
  float: left;
  background-color: #add8e6; }
  @supports (display: grid) {
    .logo {
      grid-column: col / span 1;
      grid-row: row; } }

.header {
  width: 75%;
  float: left;
  background-color: #f08080; }
  @supports (display: grid) {
    .header {
      grid-column: col 2 / span 3;
      grid-row: row; } }

.sidebar {
  width: 25%;
  float: left;
  background-color: #fafad2; }
  @supports (display: grid) {
    .sidebar {
      grid-column: col;
      grid-row: row 2; } }

.main {
  width: 75%;
  float: left;
  background-color: #90ee90; }
  @supports (display: grid) {
    .main {
      grid-column: col 2 / span 3;
      grid-row: row 2; } }

.footer {
  width: 100%;
  background-color: #ffa07a; }
  @supports (display: grid) {
    .footer {
      grid-column: col / span 4;
      grid-row: row 3; } }

@supports (display: grid) {
  .grid {
    display: grid;
    grid-gap: 0;
    grid-template-columns: repeat(4, [col] 25%);
    grid-template-rows: repeat(3, [row] auto);
    background-color: #fff;
    color: #444; }
    .grid > * {
      width: 100%;
      float: none; } }

.header h2 {
  font-size: 20px; }

.footer {
  background-color: #3D362F;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  color: #fff; }
  .footer--box {
    width: 25%; }
  .footer--heading {
    color: #fff; }

.dev:after {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: z(overlay);
  min-width: 2rem;
  min-height: 2rem;
  padding: 0.16667rem 0.33333rem;
  background-color: #c93;
  text-align: center; }

@media screen and (max-width: 600px) {
  body:after {
    content: 'xs'; } }

@media screen and (min-width: 601px) {
  body:after {
    content: 'sm'; } }

@media screen and (min-width: 901px) {
  body:after {
    content: 'md'; } }

@media screen and (min-width: 1201px) {
  body:after {
    content: 'lg'; } }

@media screen and (min-width: 1921px) {
  body:after {
    content: 'xl'; } }

/**
 * Globals
 */
/**
 * Primary
 */
/**
 * Secondary
 */
.button {
  -webkit-transition-property: color, background-color;
  transition-property: color, background-color;
  -webkit-transition-duration: 250ms;
          transition-duration: 250ms;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease;
  /**
   *  Primary styles
   */
  /**
   *  Secondary styles
   */ }
  .button--primary {
    padding: 0.66667em 0.88889em;
    background-color: #fff;
    color: #369;
    border-radius: 0;
    border: 2px solid #369; }
    .button--primary:hover {
      background-color: #369;
      color: #fff;
      border-color: #369; }
    .button--primary[disabled], .button--primary[disabled]:hover {
      background-color: #f8f8f8;
      color: #c2c2c2;
      border-color: #e0e0e0; }
  .button--primary.button--active, .button--primary.button--active:hover {
    background-color: #369;
    color: #fff;
    border-color: #369; }
  .button--secondary {
    padding: 0.44444em 0.66667em;
    background-color: #fff;
    color: #ba3c51;
    border-radius: 0;
    border: 2px solid #ba3c51; }
    .button--secondary:hover {
      background-color: #ba3c51;
      color: #fff;
      border-color: #ba3c51; }
    .button--secondary[disabled], .button--secondary[disabled]:hover {
      background-color: #f8f8f8;
      color: #c2c2c2;
      border-color: #e0e0e0; }
  .button--secondary.button--active, .button--secondary.button--active:hover {
    background-color: #ba3c51;
    color: #fff;
    border-color: #ba3c51; }

.formatted-text > *:first-child {
  margin-top: 0; }

.formatted-text > *:last-child {
  margin-bottom: 0; }

.formatted-text a {
  cursor: pointer;
  padding-bottom: 1px; }
  .formatted-text a:empty {
    display: none; }

.heading {
  display: block; }

.heading,
h1,
h2,
h3,
h4 {
  font-family: Frutiger LT W01_55 Roman;
  font-weight: 400;
  color: #0d3256;
  word-break: break-word;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto; }

h1,
.heading--1 {
  font-size: 2.11111rem;
  line-height: 1.15;
  margin: 0 0 2rem; }
  @media (min-width: 601px) {
    h1,
    .heading--1 {
      font-size: 4rem; } }
  @media (min-width: 1201px) {
    h1,
    .heading--1 {
      font-size: 4rem;
      line-height: 1.15; } }
  @media screen and (min-width: 601px) {
    h1,
    .heading--1 {
      margin: 0 0 2rem; } }

h2,
.heading--2 {
  font-size: 1.77778rem;
  line-height: 1.35;
  margin: 3rem 0 1rem; }
  @media (min-width: 601px) {
    h2,
    .heading--2 {
      font-size: 1.77778rem; } }
  @media (min-width: 901px) {
    h2,
    .heading--2 {
      font-size: 2.88889rem; } }
  @media (min-width: 1201px) {
    h2,
    .heading--2 {
      font-size: 2.88889rem;
      line-height: 1.35; } }
  @media screen and (min-width: 601px) {
    h2,
    .heading--2 {
      margin: 4rem 0 1rem; } }

h3,
.heading--3 {
  font-size: 1.44444rem;
  line-height: 1.65;
  margin: 2rem 0 1rem; }
  @media (min-width: 601px) {
    h3,
    .heading--3 {
      font-size: 1.44444rem;
      line-height: 1.35; } }
  @media (min-width: 1201px) {
    h3,
    .heading--3 {
      font-size: 1.77778rem;
      line-height: 1.35; } }
  @media screen and (min-width: 601px) {
    h3,
    .heading--3 {
      margin: 3rem 0 1rem; } }

h4,
.heading--4 {
  font-size: 1.16667rem;
  line-height: 1.35;
  margin: 2rem 0 1rem; }
  @media (min-width: 601px) {
    h4,
    .heading--4 {
      font-size: 1.33333rem; } }
  @media (min-width: 1201px) {
    h4,
    .heading--4 {
      font-size: 1.16667rem;
      line-height: 1.15; } }
  @media screen and (min-width: 601px) {
    h4,
    .heading--4 {
      margin: 3rem 0 1rem; } }

.heading--no-margin {
  margin-top: 0;
  margin-bottom: 0; }

.heading--no-margin-top {
  margin-top: 0; }

.heading--no-margin-bottom {
  margin-bottom: 0; }

/**
 * Globals
 */
.input {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  width: 100%;
  padding: 0.66667em 0.44444em; }
  .input::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .input:hover {
    border-color: #666; }
  .input:focus {
    border-color: input--focus-border-color; }
  .input[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .input[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .input[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .input[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .input[disabled]::placeholder {
      color: #c2c2c2; }

.textarea {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  padding: 0.66667em 0.44444em;
  width: 100%; }
  .textarea::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .textarea:hover {
    border-color: #666; }
  .textarea:focus {
    border-color: input--focus-border-color; }
  .textarea[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .textarea[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .textarea[disabled]::placeholder {
      color: #c2c2c2; }

.select {
  background-color: #f8f8f8;
  border: solid #c2c2c2;
  border-width: 1px;
  border-radius: 0;
  outline: none;
  -webkit-transition: 250ms ease;
  transition: 250ms ease;
  -webkit-transition-property: border-color, color, background-color;
  transition-property: border-color, color, background-color;
  color: #0d3256;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  padding: 0.66667em 0.44444em; }
  .select::-webkit-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::-moz-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::-ms-input-placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select::placeholder {
    color: #a3a3a3;
    -webkit-transition: 250ms ease;
    transition: 250ms ease;
    -webkit-transition-property: border-color, color, background-color;
    transition-property: border-color, color, background-color; }
  .select:hover {
    border-color: #666; }
  .select:focus {
    border-color: input--focus-border-color; }
  .select[disabled] {
    cursor: not-allowed;
    color: #c2c2c2;
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
    .select[disabled]::-webkit-input-placeholder {
      color: #c2c2c2; }
    .select[disabled]::-moz-placeholder {
      color: #c2c2c2; }
    .select[disabled]::-ms-input-placeholder {
      color: #c2c2c2; }
    .select[disabled]::placeholder {
      color: #c2c2c2; }

.image__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.image__img {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: auto;
  max-width: 100%;
  height: auto; }

.image__caption {
  font-size: 0.83333rem;
  margin-top: 0.16667rem; }

/**
 * Globals
 */
.link, .formatted-text p a {
  font-weight: 600;
  color: #369;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  position: relative;
  color: #369;
  cursor: pointer;
  text-decoration: none;
  -webkit-transition: color 250ms ease;
  transition: color 250ms ease; }
  .link:hover, .formatted-text p a:hover {
    color: #369; }
    @media (hover: hover) {
      .link:hover, .formatted-text p a:hover {
        color: #000; } }
  .link:not(:disabled):not(.disabled):active, .formatted-text p a:not(:disabled):not(.disabled):active {
    color: #000; }
  .link__text {
    -webkit-box-flex: 1;
        -ms-flex: 1 0 0px;
            flex: 1 0 0; }
  .link__icon-wrapper {
    -webkit-box-flex: 0;
        -ms-flex: 0 1 auto;
            flex: 0 1 auto; }
    .link__icon-wrapper--internal {
      position: relative;
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex;
      width: 2.33333rem;
      height: 1rem;
      margin-left: 2rem; }
  .link__icon {
    width: 100%; }
    .link__icon--internal {
      position: absolute;
      margin-top: -0.5rem; }
  .link--icon-before, .formatted-text p a[rel], .formatted-text p a[href$='.png'], .formatted-text p a[href$='.jpg'], .formatted-text p a[href$='.pdf'], .formatted-text p a[href$='.docx'], .formatted-text p a[href$='.xlsx'] {
    margin-left: 2.33333rem; }
    .link--icon-before:before, .formatted-text p a[rel]:before, .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
      position: absolute;
      display: inline-block;
      content: '';
      width: 1.33333rem;
      height: 1.33333rem;
      margin-left: -2.33333rem;
      margin-top: 0.16667rem;
      background-repeat: no-repeat;
      background-size: cover;
      background-color: currentColor; }
  .link--external:before, .formatted-text p a[rel]:before {
    -webkit-mask-image: url("../icons/external_24.svg");
            mask-image: url("../icons/external_24.svg"); }
  .link--download:before, .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
    -webkit-mask-image: url("../icons/download_24.svg");
            mask-image: url("../icons/download_24.svg"); }
  .link--button {
    font-size: 0.83333rem;
    line-height: 1.65;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding: 0.83333rem 0.83333rem;
    margin-left: 0;
    border: 1px solid currentColor;
    border-radius: 3px; }
    .link--button:before {
      content: none; }
    .link--button.link--color-blue {
      color: #fff;
      background: linear-gradient(279deg, #0f4880 0%, #326aa1 100%); }
      .link--button.link--color-blue:hover {
        color: #fff; }
        @media (hover: hover) {
          .link--button.link--color-blue:hover {
            color: #fff; } }
      .link--button.link--color-blue:not(:disabled):not(.disabled):active {
        color: #fff; }
      @media (hover: hover) {
        .link--button.link--color-blue:hover {
          background: #0d3256; } }
    .link--button.link--color-white {
      color: #369;
      border-color: #369;
      background-color: #fff;
      border-width: 1px;
      border-style: solid; }
      .link--button.link--color-white:hover {
        color: #369; }
        @media (hover: hover) {
          .link--button.link--color-white:hover {
            color: #0d3256; } }
      .link--button.link--color-white:not(:disabled):not(.disabled):active {
        color: #0d3256; }
      .link--button.link--color-white:hover {
        border-color: #369; }
        @media (hover: hover) {
          .link--button.link--color-white:hover {
            border-color: #0d3256; } }
      .link--button.link--color-white:not(:disabled):not(.disabled):active {
        border-color: #0d3256; }
      .link--button.link--color-white .link__icon-wrapper--internal {
        margin-left: 1rem; }
  .link--full-width {
    width: 100%; }

.formatted-text p a {
  display: inline;
  border-bottom: 1px solid currentColor; }
  .formatted-text p a[rel] {
    margin-left: 1.83333rem; }
    .formatted-text p a[rel]:before {
      margin-top: 0.33333rem;
      margin-left: -1.83333rem; }
  .formatted-text p a[href$='.png'], .formatted-text p a[href$='.jpg'], .formatted-text p a[href$='.pdf'], .formatted-text p a[href$='.docx'], .formatted-text p a[href$='.xlsx'] {
    margin-left: 1.83333rem; }
    .formatted-text p a[href$='.png']:before, .formatted-text p a[href$='.jpg']:before, .formatted-text p a[href$='.pdf']:before, .formatted-text p a[href$='.docx']:before, .formatted-text p a[href$='.xlsx']:before {
      margin-top: 0.33333rem;
      margin-left: -1.83333rem; }

.list,
.list ol,
.list ul,
.formatted-text ol,
.formatted-text ul {
  margin: 2rem 0; }
  .list li,
  .list ol li,
  .list ul li,
  .formatted-text ol li,
  .formatted-text ul li {
    padding-top: 0.16667rem;
    padding-bottom: 0.16667rem; }
    .list li:before,
    .list ol li:before,
    .list ul li:before,
    .formatted-text ol li:before,
    .formatted-text ul li:before {
      content: '';
      float: left;
      -webkit-box-flex: 0;
          -ms-flex-positive: 0;
              flex-grow: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0; }
    .list li:last-child,
    .list ol li:last-child,
    .list ul li:last-child,
    .formatted-text ol li:last-child,
    .formatted-text ul li:last-child {
      padding-bottom: 0; }
    .list li ul,
    .list li ol,
    .list ol li ul,
    .list ol li ol,
    .list ul li ul,
    .list ul li ol,
    .formatted-text ol li ul,
    .formatted-text ol li ol,
    .formatted-text ul li ul,
    .formatted-text ul li ol {
      margin-top: 0;
      margin-bottom: 0; }
    .list li a,
    .list ol li a,
    .list ul li a,
    .formatted-text ol li a,
    .formatted-text ul li a {
      border-bottom: none;
      padding-bottom: 0; }

.list li,
.formatted-text ul li,
.list ul li {
  padding-left: 1rem; }
  .list li:before,
  .formatted-text ul li:before,
  .list ul li:before {
    height: 0.05556rem;
    width: 0.66667rem;
    margin-top: 0.77778rem;
    margin-right: 0.33333rem;
    margin-left: -1rem;
    background-color: currentColor; }
  .list li li,
  .formatted-text ul li li,
  .list ul li li {
    padding-left: 0.66667rem; }
    .list li li:before,
    .formatted-text ul li li:before,
    .list ul li li:before {
      width: 0.33333rem;
      margin-left: -0.66667rem; }

.list--ordered,
.list--ordered ol,
.formatted-text ol {
  list-style: none;
  counter-reset: li; }
  .list--ordered li,
  .list--ordered ol li,
  .formatted-text ol li {
    counter-increment: li;
    padding-left: 1.33333rem; }
    .list--ordered li:before,
    .list--ordered ol li:before,
    .formatted-text ol li:before {
      content: counters(li, ".") ".";
      min-width: 1rem;
      margin-left: -1.33333rem;
      margin-right: 0.33333rem;
      text-align: right; }
    .list--ordered li li,
    .list--ordered ol li li,
    .formatted-text ol li li {
      padding-left: 2rem; }
      .list--ordered li li:before,
      .list--ordered ol li li:before,
      .formatted-text ol li li:before {
        min-width: 1.66667rem;
        margin-left: -2rem; }

/**
 * Globals
 */
/**
 * Checkbox
 */
/**
 * Radio
 */
/* stylelint-disable */
.selection {
  position: relative;
  margin-bottom: size(quarter);
  /**
   * Checkbox
   **/
  /**
   * Radio
   **/ }
  .selection__input {
    position: absolute;
    height: 1px;
    width: 1px;
    border: 0;
    clip: rect(0 0 0 0);
    margin: -1px;
    overflow: hidden;
    padding: 0;
    pointer-events: none; }
    .selection__input:hover + .selection__label {
      color: #000; }
    .selection__input[disabled] + .selection__label {
      cursor: not-allowed;
      color: #c2c2c2; }
  .selection__label {
    position: relative;
    display: inline-block;
    cursor: pointer;
    -webkit-transition: 250ms color ease;
    transition: 250ms color ease; }
    .selection__label:before {
      display: block;
      content: '';
      position: absolute;
      top: 0;
      left: 0; }
    .selection__label:after {
      display: block;
      content: '';
      position: absolute; }
  .selection--checkbox .selection__label {
    min-height: 1.33333rem;
    padding-left: 2rem; }
    .selection--checkbox .selection__label:before {
      width: 1.33333rem;
      height: 1.33333rem;
      background-color: #f8f8f8;
      border: solid #c2c2c2;
      border-width: 2px;
      -webkit-transition: 250ms ease;
      transition: 250ms ease;
      -webkit-transition-property: background-color, border-color;
      transition-property: background-color, border-color; }
    .selection--checkbox .selection__label:after {
      top: 0.22222rem;
      left: 0.5rem;
      width: 0.33333rem;
      height: 0.66667rem;
      border: solid #369;
      border-width: 0 2px 2px 0;
      -webkit-transform: rotate(45deg) scale(0);
              transform: rotate(45deg) scale(0);
      -webkit-transition: -webkit-transform 250ms ease;
      transition: -webkit-transform 250ms ease;
      transition: transform 250ms ease;
      transition: transform 250ms ease, -webkit-transform 250ms ease; }
  .selection--checkbox .selection__input:focus + .selection__label:before {
    border-color: #848484; }
  .selection--checkbox .selection__input:hover + .selection__label:before {
    border-color: #848484; }
  .selection--checkbox .selection__input:checked + .selection__label:before,
  .selection--checkbox .selection__input:checked:focus + .selection__label:before,
  .selection--checkbox .selection__input:checked:hover + .selection__label:before {
    border-color: #369; }
  .selection--checkbox .selection__input:checked + .selection__label:after,
  .selection--checkbox .selection__input:checked:focus + .selection__label:after,
  .selection--checkbox .selection__input:checked:hover + .selection__label:after {
    -webkit-transform: rotate(45deg) scale(1);
            transform: rotate(45deg) scale(1); }
  .selection--checkbox .selection__input[disabled] + .selection__label:before,
  .selection--checkbox .selection__input[disabled]:hover + .selection__label:before {
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
  .selection--checkbox .selection__input[disabled] + .selection__label:after,
  .selection--checkbox .selection__input[disabled]:hover + .selection__label:after {
    border-color: #c2c2c2; }
  .selection--radio .selection__label {
    min-height: 1.33333rem;
    padding-left: 2rem; }
    .selection--radio .selection__label:before {
      width: 1.33333rem;
      height: 1.33333rem;
      background-color: #f8f8f8;
      border: 2px solid #c2c2c2;
      border-radius: 100%;
      -webkit-transition: 250ms ease;
      transition: 250ms ease;
      -webkit-transition-property: background-color, border-color;
      transition-property: background-color, border-color; }
    .selection--radio .selection__label:after {
      top: 0.66667rem;
      left: 0.66667rem;
      width: 0.44444rem;
      height: 0.44444rem;
      background-color: #369;
      border-radius: 100%;
      -webkit-transform: translate(-50%, -50%) scale(0);
              transform: translate(-50%, -50%) scale(0);
      -webkit-transition: -webkit-transform 250ms ease;
      transition: -webkit-transform 250ms ease;
      transition: transform 250ms ease;
      transition: transform 250ms ease, -webkit-transform 250ms ease; }
  .selection--radio .selection__input:hover + .selection__label:before {
    border-color: #848484; }
  .selection--radio .selection__input:checked + .selection__label:before,
  .selection--radio .selection__input:checked:focus + .selection__label:before,
  .selection--radio .selection__input:checked:hover + .selection__label:before {
    border-color: #369; }
  .selection--radio .selection__input:checked + .selection__label:after,
  .selection--radio .selection__input:checked:focus + .selection__label:after,
  .selection--radio .selection__input:checked:hover + .selection__label:after {
    -webkit-transform: translate(-50%, -50%) scale(1);
            transform: translate(-50%, -50%) scale(1); }
  .selection--radio .selection__input[disabled] + .selection__label:before,
  .selection--radio .selection__input[disabled]:hover + .selection__label:before {
    background-color: #f8f8f8;
    border-color: #e0e0e0; }
  .selection--radio .selection__input[disabled] + .selection__label:after,
  .selection--radio .selection__input[disabled]:hover + .selection__label:after {
    background-color: #c2c2c2; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
