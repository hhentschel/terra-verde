<!-- Template: {{ _self }}.twig -->
{% set countries = craft.commerce.countries.allEnabledCountriesAsList %}
{% set states = craft.commerce.states.allEnabledStatesAsListGroupedByCountryId %}

{% set modelName = modelName is defined ? modelName : 'address' %}
{% set model = address is defined ? address : null %}

<div class="js-addressBox {{ modelName }}">

  <div class="flex -mx-4">
    <div class="form-adress">

      <div class="form-adress__item">
        <label for="{{ modelName }}-firstName">Vorname *</label>
        <input type="text" id="{{ modelName }}-firstName" class="input" name="{{ modelName }}[firstName]"
               value="{{ model ? model.firstName : '' }}">
        {% if model and model.getErrors('firstName') %}
          <div class="errors">{{ model.getErrors('firstName')|join }}</div>
        {% endif %}
      </div>

      <div class="form-adress__item">
        <label for="{{ modelName }}-lastName">Nachname *</label>
        <input type="text" id="{{ modelName }}-lastName" class="input" name="{{ modelName }}[lastName]"
               value="{{ model ? model.lastName : '' }}">
        {% if model and model.getErrors('lastName') %}
          <div class="errors">{{ model.getErrors('lastName')|join }}</div>
        {% endif %}
      </div>


      <div class="form-adress__item">
        <label for="{{ modelName }}-businessName">Firma</label>
        <input type="text" id="{{ modelName }}-businessName" class="input" name="{{ modelName }}[businessName]"
               value="{{ model ? model.businessName : '' }}">
        {% if model and model.getErrors('businessName') %}
          <div class="errors">{{ model.getErrors('businessName')|join }}</div>
        {% endif %}
      </div>

      <div class="form-adress__item">
        <label for="{{ modelName }}-phone">Telefon *</label>
        <input type="text" id="{{ modelName }}-phone" class="input" name="{{ modelName }}[phone]"
               value="{{ model ? model.phone : '' }}">
        {% if model and model.getErrors('phone') %}
          <span class="errors">{{ model.getErrors('phone')|join }}</span>
        {% endif %}
      </div>

      <div class="form-adress__item">
        <label for="{{ modelName }}-address1">Adresse *</label>
        <input type="text" id="{{ modelName }}-address1" class="input" name="{{ modelName }}[address1]"
               value="{{ model ? model.address1 : '' }}">
        {% if model and model.getErrors('address1') %}
          <div class="errors">{{ model.getErrors('address1')|join }}</div>
        {% endif %}
      </div>

      <div class="form-adress__item">
        <label for="{{ modelName }}-address2">Zusatz Adresse</label>
        <input type="text" id="{{ modelName }}-address2" class="input" name="{{ modelName }}[address2]"
               value="{{ model ? model.address2 : '' }}">
        {% if model and model.getErrors('address2') %}
          <div class="errors">{{ model.getErrors('address2')|join }}</div>
        {% endif %}
      </div>

      <div class="form-adress__item">
        <div class="">
          <label for="{{ modelName }}-zipCode">Postleitzahl *</label>
          <input type="text" id="{{ modelName }}-zipCode" class="input" name="{{ modelName }}[zipCode]"
                 value="{{ model ? model.zipCode : '' }}">
          {% if model and model.getErrors('zipCode') %}
            <div class="errors">{{ model.getErrors('zipCode')|join }}</div>
          {% endif %}
        </div>
      </div>

      <div class="form-adress__item">
        <div class="layout-helper__width-100">
          <label for="{{ modelName }}-city">Ort *</label>
          <input type="text" id="{{ modelName }}-city" class="input" name="{{ modelName }}[city]"
                 value="{{ model ? model.city : '' }}">
          {% if model and model.getErrors('city') %}
            <div class="errors">{{ model.getErrors('city')|join }}</div>
          {% endif %}
        </div>
      </div>


      <div class="form-adress__item">
        <div class="layout-helper__width-100">
          <label for="{{ modelName }}-countryId">Land *</label>
          <select class="js-address-country input" name="{{ modelName }}[countryId]">
            {% for key, option in countries %}
              {% set optionValue = (model ? model.countryId : '') %}
              <option value="{{ key }}" {% if key == optionValue %} selected{% endif %}>{{ option }}</option>
            {% endfor %}
          </select>
          {% if model and model.getErrors('countryId') %}
            <div class="errors">{{ model.getErrors('countryId')|join }}</div>
          {% endif %}
        </div>
      </div>

      {# <div class="form-adress__item">
        <label for="{{ modelName }}-notes">Hinweise</label>
        <textarea class="input" name="{{ modelName }}[notes]" id="{{ modelName }}-notes" cols="30"
                  rows="5">{{ model ? model.notes : '' }}</textarea>
        {% if model and model.getErrors('notes') %}
          <div class="errors">{{ model.getErrors('notes')|join }}</div>
        {% endif %}
      </div> #}

    </div>
  </div>
</div>

{% js %}
  var states = {{ craft.commerce.states.allEnabledStatesAsListGroupedByCountryId|json_encode|raw }};

  var $countrySelects = document.querySelectorAll('select.js-address-country');

  if ($countrySelects && $countrySelects.length) {
  $countrySelects.forEach(function(el) {
  el.addEventListener('change', function(ev) {
  var $this = ev.target;

  // get the value of the selected country.
  var cid = $this.value;
  var $closestAddressBox = $this.closest('.js-addressBox');

  if ($closestAddressBox) {

  var $states = $closestAddressBox.querySelector('select.js-address-stateId');
  var $stateName = $closestAddressBox.querySelector('input.js-address-stateName');

  if ($states && $stateName) {
  var $options = $states.querySelectorAll('option');

  if ($options && $options.length) {
  $options.forEach(function(el) {
  el.remove();
  });
  }

  if (states.hasOwnProperty(cid))
  {
  // We have states for this country, show the states drop down.
  $states.classList.remove('hidden');
  $states.setAttribute('name', $states.dataset.modelname + '[stateValue]');

  // We have states for this country, hide the stateName input.
  $stateName.removeAttribute('name');
  $stateName.classList.add('hidden');
  $stateName.value = '';

  // Add all states as options to drop down.
  for (var id in states[cid])
  {
  var state = states[cid][id];
  var $option = document.createElement('OPTION');
  $option.text = state;
  $option.value = id;
  $states.appendChild($option);
  }

  } else {
  // hide the states dropdown, since this country has none.
  $states.classList.add('hidden');
  $states.removeAttribute('name');

  // show the stateName
  $stateName.classList.remove('hidden');
  $stateName.setAttribute('name', $stateName.dataset.modelname + '[stateValue]');
  }
  }
  }
  });
  });
  }
{% endjs %}
