{# truncate words my number of words #}
{# http://craftsnippets.com/articles/truncating-text-with-twig-macros-in-craft-cms #}
{# v1 #}
{% macro truncateWords(text, length, suffix) %}
  {% apply spaceless %}
    {# settings #}
    {% set defaultSuffix = '...' %}
    {# logic #}
    {% if text and length %}
      {% set suffix = suffix|default(defaultSuffix) %}
      {% set text = text|striptags %}
      {% set text = text|replace('/\\n/', '\n ') %}
      {% set array = text|split(' ') %}
      {% set arrayTruncated = array|slice(0, length) %}
      {% set string = arrayTruncated|join(' ') %}
      {% if (array|length) > length %}
        {% set string = string ~ suffix %}
      {% endif %}
      {% set string = string|replace('/\\n\\s/', '\n') %}
      {{ string }}
    {% endif %}
  {% endapply %}
{% endmacro %}

{# truncate text by number of characters #}
{# http://craftsnippets.com/articles/truncating-text-with-twig-macros-in-craft-cms #}
{# v1 #}
{% macro truncateChars(text, limit, suffix) %}
  {% apply spaceless %}
    {# settings #}
    {% set defaultSuffix = '...' %}
    {# logic #}
    {% if text and limit %}
      {% set text = text|striptags %}
      {% set suffix = suffix|default(defaultSuffix) %}
      {% set stringy = create('Stringy\\Stringy', [text]) %}
      {{ stringy.safeTruncate(limit, suffix) }}
    {% endif %}
  {% endapply %}
{% endmacro %}

{# turn email in strings into links and secure them from spambots #}
{# http://craftsnippets.com/articles/converting-email-addresses-into-links-using-twig-macro #}
{# v1 #}
{% macro emailLinks(text, class) %}
  {% apply spaceless %}
    {% set text =
      text|replace(
      '/([a-zA-Z0-9_.+-]+)+@([a-zA-Z0-9-]+.[a-zA-Z]+)/',
      '<a ' ~ (class ? 'class="' ~ class ~ '" ') ~ 'href="mailto:'
      ~ '\\1&#64;\\2'
      ~ '">'
      ~ '\\1&#64;\\2'
      ~ '</a>'
      ) %}
    {{ text|raw }}
  {% endapply %}
{% endmacro %}

{# @var craft \craft\web\twig\variables\CraftVariable #}
{# @var entry \craft\elements\Entry #}
{#
Set Active Class
------------------------------------------------------------
{% import '_partials/macros/_macro-isActive.twig' as macroIsActive  %}
{{ macroIsActive.isActive('news', -1, 'cn') }}
#}
{% macro isActive(segments, position, prefix, cn) %}
  {% apply spaceless %}
    {% set segments = segments|default(null) %}
    {% set position = position|default(- 1) %}
    {% set prefix = prefix|default(null) %}
    {% set cn = cn|default('is-active') %}

    {% if
      segments is iterable
      and craft.app.request.getSegment(position) in segments %}
      {{ prefix ? prefix ~ cn : cn }}
    {% elseif craft.app.request.getSegment(position) == segments %}
      {{ prefix ? prefix ~ cn : cn }}
    {% endif %}
  {% endapply %}
{% endmacro %}

{% macro activeLinkClass(linkUri, requestSegmentNumber) %}
  {# Request the relevant path segment in the URL #}
  {% set nthRequestSegment = craft.app.request.segment(requestSegmentNumber) %}

  {# Split the link's URI into a list of path segments #}
  {% set linkSegments = linkUri|split('/') %}

  {# Get the path segment relevant for our comparison #}
  {% set nthLinkSegment = linkSegments[requestSegmentNumber - 1] %}

  {# Return `active` if the nthLinkSegment equals the nthRequestSegment #}
  {% if nthLinkSegment == nthRequestSegment %}active{% endif %}
{% endmacro %}
{# Loading SVG ICONS
#
# Tutorial: http://craftsnippets.com/articles/working-with-svg-images-in-craft-cms-templates
#}
{% macro svg(path, attributes, alt) %}
  {% set attributes = attributes ? attributes : null %}
  {% set alt = alt ? alt : null %}
  {# settings #}
  {% set directory = 'svg' %}
  {# logic #}
  {% if path is defined and path is not empty %}
    {% set svg = svg('@webroot/assets/icons/' ~ path ~ '.svg') %}
    {% if alt %}
      {% set svg = svg|prepend('<title>' ~ alt ~ '</title>') %}
    {% endif %}
    {% if attributes and attributes is not iterable %}
      {% set svg =
        svg|attr({
        class: attributes
      }) %}
    {% elseif attributes and attributes is iterable %}
      {% set svg = svg|attr(attributes) %}
    {% endif %}
    {{ svg|raw }}
  {% endif %}
{% endmacro %}
